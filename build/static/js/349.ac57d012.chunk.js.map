{"version":3,"file":"static/js/349.ac57d012.chunk.js","mappings":"uPAMe,SAASA,IACtB,OAAmCC,EAAAA,EAAAA,KAA3BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,YACnB,GAAuCC,EAAAA,EAAAA,UAAS,IAAhD,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA+BJ,EAAAA,EAAAA,UAAS,IAAxC,eAAOK,EAAP,KAAgBC,EAAhB,KACMC,EAAMC,OAAOC,SAASC,KAAKC,MAAM,SACjCC,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,GAClBC,EAAgB,SAACC,GACrB,OAAOA,EAAOL,MAAM,KAAK,GAAGA,MAAM,KAAK,EACxC,EA0OD,OAzOAM,QAAQC,IAAIC,mCAAA,0BAAuDZ,EAAI,MACvEa,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,yCAAG,kHAGItB,EACpBoB,mCAAA,0BAAuDZ,EAAI,IAC3D,MACA,KACA,CAAEe,cAAe,UAAYV,EAAKW,QAPlB,OAGZC,EAHY,OASlBtB,EAAkB,CAChB,CACEuB,KAAM,eACNC,WAAY,OACZC,YAAa,qBACbC,MAAOJ,EAAQC,MAEjB,CACEA,KAAM,OACNC,WAAY,YACZC,YAAa,gBACbC,MAAOJ,EAAQK,KAAKC,MAEtB,CACEL,KAAM,eACNC,WAAY,YACZC,YAAa,wBACbC,MAAOJ,EAAQK,KAAKE,MAEtB,CACEN,KAAM,YACNC,WAAY,iBACZC,YAAa,4BACbC,MAAOJ,EAAQK,KAAKG,WAEtB,CACEP,KAAM,mBACNC,WAAY,cACZC,YAAa,MACbC,MAAOJ,EAAQS,UAAUC,QAE3B,CACET,KAAM,YACNC,WAAY,KACZC,YAAa,MACbC,MAAOb,EAAcS,EAAQS,UAAUE,IAAIC,cAAczB,MAAM,MAAM,IAEvE,CACEc,KAAM,cACNC,WAAY,cACZC,YAAa,IACbC,MAAOJ,EAAQ,eAAeI,OAEhC,CACEH,KAAM,mBACNC,WAAY,aACZC,YAAa,yBACbC,MAAOJ,EAAQ,eAAeO,MAEhC,CACEN,KAAM,oBACNC,WAAY,oBACZC,YAAa,IACbC,MAAOJ,EAAQa,mBAEjB,CACEZ,KAAM,SACNC,WAAY,SACZC,YAAa,gDACbC,MAAOJ,EAAQc,QAEjB,CACEb,KAAM,qBACNC,WAAY,UACZC,YAAa,IACbC,MAAOJ,EAAQ,cAAce,IAE/B,CACEd,KAAM,sBACNC,WAAY,eACZC,YAAa,IACbC,MAAOb,EAAcS,EAAQ,cAAcgB,MAAM7B,MAAM,KAAK,IAE9D,CACEc,KAAM,uBACNC,WAAY,eACZC,YAAa,IACbC,MAAOb,EAAcS,EAAQ,cAAcgB,MACxC7B,MAAM,KAAK,GACXA,MAAM,OAAO,IAElB,CACEc,KAAM,mBACNC,WAAY,WACZC,YAAa,IACbC,MAAOb,EAAcS,EAAQ,cAAcgB,MACxC7B,MAAM,KAAK,GACXA,MAAM,OAAO,IAElB,CACEc,KAAM,YACNC,WAAY,MACZC,YAAa,IACbC,MAAOJ,EAAQiB,KAEjB,CACEhB,KAAM,YACNC,WAAY,MACZC,YAAa,IACbC,MAAOJ,EAAQkB,KAEjB,CACEjB,KAAM,YACNC,WAAY,MACZC,YAAa,IACbC,MAAOJ,EAAQmB,KAEjB,CACElB,KAAM,YACNC,WAAY,MACZC,YAAa,IACbC,MAAOJ,EAAQoB,KAEjB,CACEnB,KAAM,YACNC,WAAY,MACZC,YAAa,IACbC,MAAOJ,EAAQqB,KAEjB,CACEpB,KAAM,YACNC,WAAY,MACZC,YAAa,IACbC,MAAOJ,EAAQsB,OAGnB1C,EAAU,CACR,CACEqB,KAAM,QACNC,WAAY,UACZC,YAAa,wBACbC,MAAOJ,EAAQuB,SAEjB,CACEtB,KAAM,6BACNC,WAAY,gBACZC,YAAa,sBACbC,MAAOJ,EAAQ,kBAGjB,CACEC,KAAM,SACNC,WAAY,SACZC,YAAa,8CACbC,MAAOJ,EAAQwB,QAGjB,CACEvB,KAAM,qBACNC,WAAY,qBACZC,YAAa,gCACbC,MAAwC,OAAlCJ,EAAQ,sBAAgC,GAAIA,EAAQ,sBAAsByB,QAGlF,CACExB,KAAM,oBACNC,WAAY,oBACZC,YAAa,gCACbC,MAAuC,OAAjCJ,EAAQ,qBAA+B,GAAIA,EAAQ,qBAAqByB,QAGhF,CACExB,KAAM,yBACNC,WAAY,yBACZC,YAAa,gCACbC,MAA4C,OAAtCJ,EAAQ,0BAAoC,GAAIA,EAAQ,0BAA0ByB,QAE1F,CACExB,KAAM,uBACNC,WAAY,uBACZC,YAAa,sCACbC,MAA0C,OAApCJ,EAAQ,wBAAkC,GAAIA,EAAQ,wBAAwByB,QAEtF,CACExB,KAAM,YACNC,WAAY,YACZC,YAAa,iCACbC,MAAOJ,EAAQ0B,WAEjB,CACEzB,KAAM,QACNC,WAAY,QACZC,YAAa,sBACbC,MAAOJ,EAAQ2B,SAInB7C,EAAY,CAAC,CACTmB,KAAM,6BACNC,WAAY,SACZC,YAAYH,EAAQ4B,QAEtB,CACE3B,KAAM,sBACNC,WAAY,UACZC,YAAYH,EAAQ6B,SAEtB,CACE5B,KAAM,wBACNC,WAAY,YACZC,YAAYH,EAAQ8B,WAEtB,CACE7B,KAAM,sCACNC,WAAY,kBACZC,YAAcH,EAAQ+B,iBAExB,CACE9B,KAAM,4BACNC,WAAY,gBACZC,YAAcH,EAAQ,kBAExB,CACEC,KAAM,gCACNC,WAAY,oBACZC,YAAcH,EAAQ,wBAhOR,yGAAH,qDAoOnBH,GACD,GAAE,CAACtB,KAGF,gCACGD,IAAa,SAAC,IAAD,CAAgB0D,WAAS,KACvC,SAAC,IAAD,CACEC,OAAO,EACPC,SAAUzD,EACV0D,OAAQxD,EACRyD,KAAMvD,EACN0B,KAAK,QACLxB,IAAG,0BAAqBA,EAAI,QAInC,C,yICrQD,GAAgB,gBAAkB,kCAAkC,eAAiB,kC,sCCEtE,SAASsD,EAASC,GAK/B,OACE,iBAAKC,UAAWC,EAAAA,gBAAhB,WACE,iBAAMD,UAAWC,EAAAA,eAAjB,SAAyCF,EAAMrC,QAC/C,SAAC,EAAAwC,SAAD,CAAUF,UAAS,UAAKC,EAAAA,oBAAL,WACjBE,OAAQC,IACRC,OAAQ,CACNC,QAAS,CACP,UACT,IACA,OACA,SACA,IACA,eACA,eACA,IACA,SACA,UACA,MAGKC,KAAMR,EAAMnC,YACZ4C,SAzBiB,SAACC,EAAON,GAC7B,IAAMI,EAAOJ,EAAOO,UACpBX,EAAMS,SAASD,EAAKR,EAAMpC,WAC3B,MA0BF,C,kFChCD,EAA8F,kDAA9F,EAA6K,mD,UCa9J,SAASgD,EAAaZ,GACnC,IAAMa,GAAWC,EAAAA,EAAAA,MACjB,GAAsD/E,EAAAA,EAAAA,KAA9CC,EAAR,EAAQA,UAAW+E,EAAnB,EAAmBA,MAAO9E,EAA1B,EAA0BA,YAAa+E,EAAvC,EAAuCA,WACvC,GAAwC9E,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAO+E,EAAP,KAAqBC,EAArB,KACA,GAAkCC,EAAAA,EAAAA,GAAQ,CAAC,GAAG,GAA9C,eAAOC,EAAP,KAAkBC,EAAlB,KACMvE,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,GAClBsE,EAAiB,SAACxB,EAAMnC,GAC5BuD,GAAgB,SAACK,GAAD,eAAC,UACZA,GADW,cAEb5D,EAAOmC,GAFM,GAIjB,EAEK0B,EAAuB,SAACC,GAC5B,IACMC,GADgB,EACcC,SAASA,SAASF,GAAY,GAClE,OAAIC,EAAe,EACX,KAAN,OAAYA,EAAZ,KAEM,IAAN,OAAWA,EAAX,IAEH,EAEKE,EAAmB,SAACC,GACxB,OAAO,OACFA,EAAQhF,MAAM,2BAA2BiF,QAAO,SAACC,GAAD,OAAUA,EAAKC,MAAf,IAEtD,EAEKC,EAAY,yCAAG,WAAOvB,GAAP,mFACnBA,EAAMwB,iBACA1B,EAAO,CACX7C,KAAMyD,EAAUe,OAAOxE,KAAKG,MAC5BC,KAAM,CACJC,KAAMoD,EAAUe,OAAOC,UAAUtE,MACjCG,KAAMmD,EAAUe,OAAOE,UAAUvE,MACjCI,UAAWkD,EAAUe,OAAOG,eAAexE,OAE7C,cAAe,CACbA,MAAOsD,EAAUe,OAAOI,YAAYzE,MACpCG,KAAMmD,EAAUe,OAAOK,WAAW1E,OAEpC,aAAc,CACZY,KAAK,IAAD,OAAM0C,EAAUe,OAAOM,aAAa3E,MAApC,YAA6CsD,EAAUe,OAAOO,aAAa5E,MAA3E,cAAsFsD,EAAUe,OAAOQ,SAAS7E,MAAhH,KACJW,GAAI2C,EAAUe,OAAOS,QAAQ9E,OAE/BuB,MAAO+B,EAAUe,OAAO9C,MAAMvB,MAC9Ba,IAAKyC,EAAUe,OAAOxD,IAAIb,MAC1B+E,QAASrB,EAAqBJ,EAAUe,OAAOxD,IAAIb,OACnDc,IAAKwC,EAAUe,OAAOvD,IAAId,MAC1BgF,QAAStB,EAAqBJ,EAAUe,OAAOvD,IAAId,OACnDe,IAAKuC,EAAUe,OAAOtD,IAAIf,MAC1BiF,QAASvB,EAAqBJ,EAAUe,OAAOtD,IAAIf,OACnDgB,IAAKsC,EAAUe,OAAOrD,IAAIhB,MAC1BkF,QAASxB,EAAqBJ,EAAUe,OAAOrD,IAAIhB,OACnDiB,IAAKqC,EAAUe,OAAOpD,IAAIjB,MAC1BmF,QAASzB,EAAqBJ,EAAUe,OAAOpD,IAAIjB,OACnDkB,IAAKoC,EAAUe,OAAOnD,IAAIlB,MAC1BoF,QAAS1B,EAAqBJ,EAAUe,OAAOnD,IAAIlB,OACnD,gBAAiBsD,EAAUe,OAAO,iBAAiBrE,MACnDoB,OAAQkC,EAAUe,OAAOgB,OAAOrF,MAChCU,OAAQ4C,EAAUe,OAAO3D,OAAOV,MAChCsB,UAAWgC,EAAUe,OAAO/C,UAAUtB,MACtCK,UAAW,CACTC,OAAQgD,EAAUe,OAAO,eAAerE,MACxCO,GAAG,IAAD,OAAM+C,EAAUe,OAAOiB,GAAGtF,MAA1B,QAEJwB,OAAQ2B,EAAa3B,OACrBC,QAAS0B,EAAa1B,QACtB,oBAAqB0B,EAAa,qBAClChC,QAASmC,EAAUe,OAAOlD,QAAQnB,MAClC,gBAAiBmD,EAAa,iBAC9BxB,gBAAiBwB,EAAaxB,gBAC9B,uBAAwBmC,EACtBR,EAAUe,OAAO,wBAAwBrE,OAE3C,oBAAqB8D,EACnBR,EAAUe,OAAO,qBAAqBrE,OAExC,qBAAsB8D,EACpBR,EAAUe,OAAO,sBAAsBrE,OAEzC,yBAA0B8D,EACxBR,EAAUe,OAAO,0BAA0BrE,OAE7C0B,UAAWyB,EAAazB,UACxBjB,kBAAmB6C,EAAUe,OAAO5D,kBAAkBT,MACtDuF,QAASvG,EAAKwG,QA1DG,kBA6DXrH,EACJoB,mCAAA,UAAuC2C,EAAMvD,KAC7CuD,EAAM/B,KACNsF,KAAKC,UAAUhD,GACf,CACEhD,cAAe,UAAYV,EAAKW,MAChC,eAAgB,qBAnEH,OAsEjBoD,EAAwB,SAAfb,EAAM/B,KAAkB,UAAY,cAtE5B,yGAAH,sDA4ElB,OACE,gCACGjC,IAAa,SAACyH,EAAA,EAAD,CAAgB/D,WAAS,IACtCqB,IAAS,SAAC2C,EAAA,EAAD,CAAY3C,MAAOA,EAAO4C,QANnB,WACnB3C,EAAW,KACZ,KAKG,kBAAM4C,GAAG,OAAOC,SAAU5B,EAA1B,WACE,UAAC6B,EAAA,EAAD,WACG9D,EAAMJ,SAASmE,KAAI,SAACC,EAAOC,GAAR,OAClB,SAACC,EAAA,EAAD,CAEEC,QAAQ,QACRP,GAAII,EAAMpG,WACVK,KAAK,OACLmG,aAAcJ,EAAMlG,MACpBuG,aAAcrE,EAAML,MACpB2E,MAAON,EAAMrG,KACb4G,UAAU,+BACVC,WAAY,EAACC,EAAAA,EAAAA,OACbC,QAASrD,EACTxD,YAAamG,EAAMnG,YACnB8G,aAAa,EACb1E,UAAU,sBAZLgE,EAFW,IAiBnBjE,EAAMH,OAAOkE,KAAI,SAACC,EAAOC,GAAR,OAChB,SAACC,EAAA,EAAD,CAEEC,QAAQ,QACRP,GAAII,EAAMpG,WACVwG,aAAcJ,EAAMlG,MACpBG,KAAK,OACLoG,cAAc,EACdC,MAAON,EAAMrG,KACb+G,QAASrD,EACTxD,YAAamG,EAAMnG,YACnB2G,WAAY,GACZG,aAAa,GAVRV,EAFS,QAgBpB,UAACH,EAAA,EAAD,WACG,IACA9D,EAAMF,KAAKiE,KAAI,SAACa,EAAMX,GAAP,OACd,SAAClE,EAAD,CACEU,SAAUa,EAEV3D,KAAMiH,EAAKjH,KACXC,WAAYgH,EAAKhH,WACjBC,YAAa+G,EAAK/G,aAHboG,EAHO,QAWlB,SAACY,EAAA,EAAD,CACE5E,UACGmB,EAAU0D,QAAX,UAEO5E,EAFP,qBACOA,GAGTjC,KAAK,SACL8G,UAAW3D,EAAU0D,QAPvB,yBAcP,C,uDCxLD,MAAuC,2C,SCCxB,SAAShB,EAAa9D,GACjC,OACI,gBAAKC,UAAWC,EAAhB,SACKF,EAAMgF,UAGlB,C","sources":["components/MyProfile/Edit/Edit.js","webpack://dnd-project/./src/components/SubmitHomeBrew/TextArea.module.css?5685","components/SubmitHomeBrew/TextArea.js","webpack://dnd-project/./src/components/SubmitHomeBrew/SubmitHomeBrew.module.css?6306","components/SubmitHomeBrew/HomeBrewSave.js","webpack://dnd-project/./src/components/UI/ConteinerBox.module.css?cb44","components/UI/ConteinerBox.js"],"sourcesContent":["import { useState, useEffect, useContext } from \"react\";\r\nimport HomeBrewSave from \"../../SubmitHomeBrew/HomeBrewSave\";\r\nimport { useHttpClient } from \"../../hooks/http-hook\";\r\nimport LoadingSpinner from \"../../UI/LoadingSpinner\";\r\nimport { LoginContext } from \"../../store/login-context\";\r\n\r\nexport default function Edit() {\r\n  const { isLoading, sendRequest } = useHttpClient();\r\n  const [reqFields, setMonsterForEdit] = useState([]);\r\n  const [fields, setFields] = useState([]);\r\n  const [textZone,setTextZone] = useState([]);\r\n  const url = window.location.href.split(\"Edit/\");\r\n  const auth = useContext(LoginContext);\r\n  const removeBrakets = (string) => {\r\n    return string.split(\"(\")[1].split(\")\")[0];\r\n  };\r\n  console.log(process.env.REACT_APP_BACKEND_URL + `/myProfile/Edit/${url[1]}`);\r\n  useEffect(() => {\r\n    const fetchMonsters = async () => {\r\n\r\n      try {\r\n        const resData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + `/myProfile/Edit/${url[1]}`,\r\n          \"GET\",\r\n          null,\r\n          { Authorization: \"Bearer \" + auth.token }\r\n        );\r\n        setMonsterForEdit([\r\n          {\r\n            name: \"MONSTER NAME\",\r\n            input_name: \"name\",\r\n            placeholder: \"Enter monster name\",\r\n            value: resData.name,\r\n          },\r\n          {\r\n            name: \"SIZE\",\r\n            input_name: \"meta_size\",\r\n            placeholder: \"Large, Medium\",\r\n            value: resData.meta.size,\r\n          },\r\n          {\r\n            name: \"MONSTER TYPE\",\r\n            input_name: \"meta_type\",\r\n            placeholder: \"aberration, construct\",\r\n            value: resData.meta.type,\r\n          },\r\n          {\r\n            name: \"ALIGNMENT\",\r\n            input_name: \"meta_alignment\",\r\n            placeholder: \"lawful evil, chaotic evil\",\r\n            value: resData.meta.alignment,\r\n          },\r\n          {\r\n            name: \"CHALLENGE RATING\",\r\n            input_name: \"Challenge R\",\r\n            placeholder: \" # \",\r\n            value: resData.Challenge.rating,\r\n          },\r\n          {\r\n            name: \"GRANTS XP\",\r\n            input_name: \"Xp\",\r\n            placeholder: \" # \",\r\n            value: removeBrakets(resData.Challenge.xp).toLowerCase().split(\"xp\")[0],\r\n          },\r\n          {\r\n            name: \"ARMOR CLASS\",\r\n            input_name: \"armor_class\",\r\n            placeholder: \"#\",\r\n            value: resData[\"Armor Class\"].value,\r\n          },\r\n          {\r\n            name: \"ARMOR CLASS TYPE\",\r\n            input_name: \"armor_type\",\r\n            placeholder: \"Natural armor,plate...\",\r\n            value: resData[\"Armor Class\"].type,\r\n          },\r\n          {\r\n            name: \"PROFICIENCY BONUS\",\r\n            input_name: \"proficiency_bonus\",\r\n            placeholder: \"#\",\r\n            value: resData.proficiency_bonus,\r\n          },\r\n          {\r\n            name: \"SENSES\",\r\n            input_name: \"Senses\",\r\n            placeholder: \"Passive Perception 11, Darkvision 60 ft., ...\",\r\n            value: resData.Senses,\r\n          },\r\n          {\r\n            name: \"AVERAGE HIT POINTS\",\r\n            input_name: \"avrg_hp\",\r\n            placeholder: \"#\",\r\n            value: resData[\"Hit Points\"].hp,\r\n          },\r\n          {\r\n            name: \"HIT POINT DIE COUNT\",\r\n            input_name: \"hp_die_count\",\r\n            placeholder: \"#\",\r\n            value: removeBrakets(resData[\"Hit Points\"].dice).split(\"d\")[0],\r\n          },\r\n          {\r\n            name: \"HIT POINTS DIE VALUE\",\r\n            input_name: \"hp_die_value\",\r\n            placeholder: \"#\",\r\n            value: removeBrakets(resData[\"Hit Points\"].dice)\r\n              .split(\"d\")[1]\r\n              .split(\" + \")[0],\r\n          },\r\n          {\r\n            name: \"BONUS HIT POINTS\",\r\n            input_name: \"bonus_hp\",\r\n            placeholder: \"#\",\r\n            value: removeBrakets(resData[\"Hit Points\"].dice)\r\n              .split(\"d\")[1]\r\n              .split(\" + \")[1],\r\n          },\r\n          {\r\n            name: \"STR SCORE\",\r\n            input_name: \"STR\",\r\n            placeholder: \"#\",\r\n            value: resData.STR,\r\n          },\r\n          {\r\n            name: \"DEX SCORE\",\r\n            input_name: \"DEX\",\r\n            placeholder: \"#\",\r\n            value: resData.DEX,\r\n          },\r\n          {\r\n            name: \"CON SCORE\",\r\n            input_name: \"CON\",\r\n            placeholder: \"#\",\r\n            value: resData.CON,\r\n          },\r\n          {\r\n            name: \"INT SCORE\",\r\n            input_name: \"INT\",\r\n            placeholder: \"#\",\r\n            value: resData.INT,\r\n          },\r\n          {\r\n            name: \"WIS SCORE\",\r\n            input_name: \"WIS\",\r\n            placeholder: \"#\",\r\n            value: resData.WIS,\r\n          },\r\n          {\r\n            name: \"CHA SCORE\",\r\n            input_name: \"CHA\",\r\n            placeholder: \"#\",\r\n            value: resData.CHA,\r\n          },\r\n        ]);\r\n        setFields([\r\n          {\r\n            name: \"Image\",\r\n            input_name: \"img_url\",\r\n            placeholder: \"Provide URL for image\",\r\n            value: resData.img_url,\r\n          },\r\n          {\r\n            name: \"SAVING THROW PROFICIENCIES\",\r\n            input_name: \"Saving Throws\",\r\n            placeholder: \"STR +6 , INT +4....\",\r\n            value: resData['Saving Throws'],\r\n\r\n          },\r\n          {\r\n            name: \"SKILLS\",\r\n            input_name: \"skills\",\r\n            placeholder: \"Acrobatics +6, Deception +3, Stealth +9....\",\r\n            value: resData.Skills,\r\n\r\n          },\r\n          {\r\n            name: \"DAMAGE RESISTANCES\",\r\n            input_name: \"Damage Resistances\",\r\n            placeholder: \"Bludgeoning,Piercing,Fire ...\",\r\n            value:resData['Damage Resistances'] === null? \"\": resData['Damage Resistances'].join(),\r\n\r\n          },\r\n          {\r\n            name: \"DAMAGE IMMUNITIES\",\r\n            input_name: \"Damage Immunities\",\r\n            placeholder: \"Bludgeoning,Piercing,Fire ...\",\r\n            value:resData['Damage Immunities'] === null? \"\": resData['Damage Immunities'].join(),\r\n\r\n          },\r\n          {\r\n            name: \"DAMAGE VULNERABILITIES\",\r\n            input_name: \"Damage Vulnerabilities\",\r\n            placeholder: \"Bludgeoning,Piercing,Fire ...\",\r\n            value:resData['Damage Vulnerabilities'] === null? \"\": resData['Damage Vulnerabilities'].join(),\r\n          },\r\n          {\r\n            name: \"CONDITION IMMUNITIES\",\r\n            input_name: \"Condition Immunities\",\r\n            placeholder: \"Charmed, Exhaustion, Frightened ...\",\r\n            value:resData['Condition Immunities'] === null? \"\": resData['Condition Immunities'].join(),\r\n          },\r\n          {\r\n            name: \"LANGUAGES\",\r\n            input_name: \"Languages\",\r\n            placeholder: \"Deep Speech, Telepathy 120 ft.\",\r\n            value: resData.Languages,\r\n          },\r\n          {\r\n            name: \"SPEED\",\r\n            input_name: \"Speed\",\r\n            placeholder: \"20 ft., fly 30 ft. \",\r\n            value: resData.Speed,\r\n\r\n          },\r\n        ]);\r\n        setTextZone([{\r\n            name: \"SPECIAL TRAITS DESCRIPTION\",\r\n            input_name: \"Traits\",\r\n            placeholder:resData.Traits,\r\n          },\r\n          {\r\n            name: \"ACTIONS DESCRIPTION\",\r\n            input_name: \"Actions\",\r\n            placeholder:resData.Actions,\r\n          },\r\n          {\r\n            name: \"REACTIONS DESCRIPTION\",\r\n            input_name: \"Reactions\",\r\n            placeholder:resData.Reactions,\r\n          },\r\n          {\r\n            name: \"MONSTER CHARACTERISTICS DESCRIPTION\",\r\n            input_name: \"Characteristics\",\r\n            placeholder:  resData.Characteristics,\r\n          },\r\n          {\r\n            name: \"BONUS ACTIONS DESCRIPTION\",\r\n            input_name: \"Bonus Actions\",\r\n            placeholder:  resData[\"Bonus Actions\"],\r\n          },\r\n          {\r\n            name: \"LEGENDARY ACTIONS DESCRIPTION\",\r\n            input_name: \"Legendary Actions\",\r\n            placeholder:  resData[\"Legendary Actions\"],\r\n          },])\r\n      } catch (err) {}\r\n    };\r\n    fetchMonsters();\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <LoadingSpinner as0verlay></LoadingSpinner>}\r\n      <HomeBrewSave\r\n        valid={true}\r\n        required={reqFields}\r\n        notReq={fields}\r\n        text={textZone}\r\n        type=\"PATCH\"\r\n        url={`/myProfile/Edit/${url[1]}`}\r\n      ></HomeBrewSave>\r\n    </>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"textarea__style\":\"TextArea_textarea__style__E-L8R\",\"capytal__style\":\"TextArea_capytal__style__Ke+ps\"};","import styles from \"./TextArea.module.css\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nexport default function TextArea(props) {\r\n  const textFromEditor = (event, editor) => {\r\n    const data = editor.getData();\r\n    props.onChange(data,props.input_name)\r\n  };\r\n  return (\r\n    <div className={styles.textarea__style}>\r\n      <span className={styles.capytal__style}>{props.name}</span>\r\n      <CKEditor className={`${styles.textarea_box__style}, black`}\r\n        editor={ClassicEditor}\r\n        config={{\r\n          toolbar: [\r\n            'heading',\r\n\t\t\t'|',\r\n\t\t\t'bold',\r\n\t\t\t'italic',\r\n\t\t\t'|',\r\n\t\t\t'numberedList',\r\n\t\t\t'bulletedList',\r\n\t\t\t'|',\r\n\t\t\t'indent',\r\n\t\t\t'outdent',\r\n\t\t\t'|',\r\n          ],\r\n        }}\r\n        data={props.placeholder}\r\n        onChange={textFromEditor}\r\n      ></CKEditor>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form__style\":\"SubmitHomeBrew_form__style__c9-uj\",\"submit_btn__style_enabled\":\"SubmitHomeBrew_submit_btn__style_enabled__Vx-gc\",\"submit_btn__style_disabled\":\"SubmitHomeBrew_submit_btn__style_disabled__v-isH\",\"submit_btn__style\":\"SubmitHomeBrew_submit_btn__style__w+RRo\"};","import React, { useContext, useState } from \"react\";\r\nimport { VALIDATOR_REQUIRE } from \"../util/validators\";\r\nimport TextArea from \"./TextArea\";\r\nimport Input from \"../form-elements/Input\";\r\nimport { useHttpClient } from \"../hooks/http-hook\";\r\nimport { LoginContext } from \"../store/login-context\";\r\nimport ModalError from \"../UI/ModalError\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useForm } from \"../hooks/form-hook\";\r\nimport Button from \"../form-elements/Button\";\r\nimport styles from \"./SubmitHomeBrew.module.css\";\r\nimport ConteinerBox from \"../UI/ConteinerBox\";\r\n\r\nexport default function HomeBrewSave(props) {\r\n  const navigate = useNavigate();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [ckEditorText, setckEditorText] = useState({});\r\n  const [formState, inputHandler] = useForm({}, false);\r\n  const auth = useContext(LoginContext);\r\n  const textZoneChange = (text, name) => {\r\n    setckEditorText((prevState) => ({\r\n      ...prevState,\r\n      [name]: text,\r\n    }));\r\n  };\r\n\r\n  const modifiersCalculation = (modifire) => {\r\n    const baseModifier = -5;\r\n    const statModifier = baseModifier + parseInt(parseInt(modifire) / 2);\r\n    if (statModifier > 0) {\r\n      return `(+${statModifier})`;\r\n    } else {\r\n      return `(${statModifier})`;\r\n    }\r\n  };\r\n\r\n  const transformToArray = (comming) => {\r\n    return [\r\n      ...comming.split(/[.,#!$%&*;:{}=\\-_`~()]/g).filter((elem) => elem.trim()),\r\n    ];\r\n  };\r\n\r\n  const submitHadler = async (event) => {\r\n    event.preventDefault();\r\n    const data = {\r\n      name: formState.inputs.name.value,\r\n      meta: {\r\n        size: formState.inputs.meta_size.value,\r\n        type: formState.inputs.meta_type.value,\r\n        alignment: formState.inputs.meta_alignment.value,\r\n      },\r\n      \"Armor Class\": {\r\n        value: formState.inputs.armor_class.value,\r\n        type: formState.inputs.armor_type.value,\r\n      },\r\n      \"Hit Points\": {\r\n        dice: `(${formState.inputs.hp_die_count.value}d${formState.inputs.hp_die_value.value} + ${formState.inputs.bonus_hp.value})`,\r\n        hp: formState.inputs.avrg_hp.value,\r\n      },\r\n      Speed: formState.inputs.Speed.value,\r\n      STR: formState.inputs.STR.value,\r\n      STR_mod: modifiersCalculation(formState.inputs.STR.value),\r\n      DEX: formState.inputs.DEX.value,\r\n      DEX_mod: modifiersCalculation(formState.inputs.DEX.value),\r\n      CON: formState.inputs.CON.value,\r\n      CON_mod: modifiersCalculation(formState.inputs.CON.value),\r\n      INT: formState.inputs.INT.value,\r\n      INT_mod: modifiersCalculation(formState.inputs.INT.value),\r\n      WIS: formState.inputs.WIS.value,\r\n      WIS_mod: modifiersCalculation(formState.inputs.WIS.value),\r\n      CHA: formState.inputs.CHA.value,\r\n      CHA_mod: modifiersCalculation(formState.inputs.CHA.value),\r\n      \"Saving Throws\": formState.inputs[\"Saving Throws\"].value,\r\n      Skills: formState.inputs.skills.value,\r\n      Senses: formState.inputs.Senses.value,\r\n      Languages: formState.inputs.Languages.value,\r\n      Challenge: {\r\n        rating: formState.inputs[\"Challenge R\"].value,\r\n        xp: `(${formState.inputs.Xp.value}XP)`,\r\n      },\r\n      Traits: ckEditorText.Traits,\r\n      Actions: ckEditorText.Actions,\r\n      \"Legendary Actions\": ckEditorText[\"Legendary Actions\"],\r\n      img_url: formState.inputs.img_url.value,\r\n      \"Bonus Actions\": ckEditorText[\"Bonus Actions\"],\r\n      Characteristics: ckEditorText.Characteristics,\r\n      \"Condition Immunities\": transformToArray(\r\n        formState.inputs[\"Condition Immunities\"].value\r\n      ),\r\n      \"Damage Immunities\": transformToArray(\r\n        formState.inputs[\"Damage Immunities\"].value\r\n      ),\r\n      \"Damage Resistances\": transformToArray(\r\n        formState.inputs[\"Damage Resistances\"].value\r\n      ),\r\n      \"Damage Vulnerabilities\": transformToArray(\r\n        formState.inputs[\"Damage Vulnerabilities\"].value\r\n      ),\r\n      Reactions: ckEditorText.Reactions,\r\n      proficiency_bonus: formState.inputs.proficiency_bonus.value,\r\n      creator: auth.userId,\r\n    };\r\n    try {\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + `${props.url}`,\r\n        props.type,\r\n        JSON.stringify(data),\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      navigate(props.type === \"POST\" ? \"/voting\" : \"/myProfile\");\r\n    } catch (err) {}\r\n  };\r\n  const errorHandler = () => {\r\n    clearError(null);\r\n  };\r\n  return (\r\n    <>\r\n      {isLoading && <LoadingSpinner as0verlay></LoadingSpinner>}\r\n      {error && <ModalError error={error} onClick={errorHandler}></ModalError>}\r\n      <form id=\"form\" onSubmit={submitHadler}>\r\n        <ConteinerBox>\r\n          {props.required.map((field, i) => (\r\n            <Input\r\n              key={i}\r\n              element=\"input\"\r\n              id={field.input_name}\r\n              type=\"text\"\r\n              initialValue={field.value}\r\n              initialValid={props.valid}\r\n              label={field.name}\r\n              errorText=\"*This field is NOT optional!\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              onInput={inputHandler}\r\n              placeholder={field.placeholder}\r\n              notRequired={false}\r\n              className=\"input_field__style\"\r\n            ></Input>\r\n          ))}\r\n          {props.notReq.map((field, i) => (\r\n            <Input\r\n              key={i}\r\n              element=\"input\"\r\n              id={field.input_name}\r\n              initialValue={field.value}\r\n              type=\"text\"\r\n              initialValid={true}\r\n              label={field.name}\r\n              onInput={inputHandler}\r\n              placeholder={field.placeholder}\r\n              validators={[]}\r\n              notRequired={true}\r\n            ></Input>\r\n          ))}\r\n        </ConteinerBox>\r\n        <ConteinerBox>\r\n          {\" \"}\r\n          {props.text.map((zone, i) => (\r\n            <TextArea\r\n              onChange={textZoneChange}\r\n              key={i}\r\n              name={zone.name}\r\n              input_name={zone.input_name}\r\n              placeholder={zone.placeholder}\r\n            ></TextArea>\r\n          ))}\r\n        </ConteinerBox>\r\n\r\n        <Button\r\n          className={\r\n            !formState.isValid\r\n              ? `${styles.submit_btn__style_disabled}`\r\n              : `${styles.submit_btn__style_enabled} button`\r\n          }\r\n          type=\"submit\"\r\n          disabled={!formState.isValid}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container_box__style\":\"ConteinerBox_container_box__style__C8d7G\"};","import styles from \"./ConteinerBox.module.css\"\r\n\r\nexport default function ConteinerBox(props){\r\n    return(\r\n        <div className={styles.container_box__style}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}"],"names":["Edit","useHttpClient","isLoading","sendRequest","useState","reqFields","setMonsterForEdit","fields","setFields","textZone","setTextZone","url","window","location","href","split","auth","useContext","LoginContext","removeBrakets","string","console","log","process","useEffect","fetchMonsters","Authorization","token","resData","name","input_name","placeholder","value","meta","size","type","alignment","Challenge","rating","xp","toLowerCase","proficiency_bonus","Senses","hp","dice","STR","DEX","CON","INT","WIS","CHA","img_url","Skills","join","Languages","Speed","Traits","Actions","Reactions","Characteristics","as0verlay","valid","required","notReq","text","TextArea","props","className","styles","CKEditor","editor","ClassicEditor","config","toolbar","data","onChange","event","getData","HomeBrewSave","navigate","useNavigate","error","clearError","ckEditorText","setckEditorText","useForm","formState","inputHandler","textZoneChange","prevState","modifiersCalculation","modifire","statModifier","parseInt","transformToArray","comming","filter","elem","trim","submitHadler","preventDefault","inputs","meta_size","meta_type","meta_alignment","armor_class","armor_type","hp_die_count","hp_die_value","bonus_hp","avrg_hp","STR_mod","DEX_mod","CON_mod","INT_mod","WIS_mod","CHA_mod","skills","Xp","creator","userId","JSON","stringify","LoadingSpinner","ModalError","onClick","id","onSubmit","ConteinerBox","map","field","i","Input","element","initialValue","initialValid","label","errorText","validators","VALIDATOR_REQUIRE","onInput","notRequired","zone","Button","isValid","disabled","children"],"sourceRoot":""}