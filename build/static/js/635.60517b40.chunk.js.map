{"version":3,"file":"static/js/635.60517b40.chunk.js","mappings":"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","sources":["components/MyProfile/Sessions/MySessions.js","components/MyProfile/Sessions/sessionUi/CalendarReSize.js","components/MyProfile/Sessions/sessionUi/Comments.js","components/MyProfile/Sessions/sessionUi/WsComments.js","components/MyProfile/Sessions/sessionUi/SessionComponent.js","webpack://dnd-project/./src/components/UI/ConteinerBox.module.css?cb44","components/UI/ConteinerBox.js","webpack://dnd-project/./src/components/UI/Confirmation.module.css?e1ca","components/UI/ModalConfirmation.js","webpack://dnd-project/./src/components/MyProfile/Sessions/sessionUi/sessionUi.module.css?53a8"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHttpClient } from \"../../hooks/http-hook\";\r\nimport { LoginContext } from \"../../store/login-context\";\r\nimport ConteinerBox from \"../../UI/ConteinerBox\";\r\nimport SessionComponent from \"./sessionUi/SessionComponent\";\r\nimport ModalError from \"../../UI/ModalError\";\r\nimport LoadingSpinner from \"../../UI/LoadingSpinner\";\r\nimport ModalConfirmation from \"../../UI/ModalConfirmation\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function MySessions() {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(LoginContext);\r\n  const [resData, setResData] = useState([]);\r\n  const [votesArray, setVotes] = useState([]);\r\n  const [intentionSubmitVote, setIntentionSubmitVote] = useState(false);\r\n  const [dateerror, setdateerror] = useState(false);\r\n  const [userInfoToSubmit, setUserInfoToSubmit] = useState([]);\r\n  const [hourforSession, setHoursforSession] = useState();\r\n  const navigate = useNavigate();\r\n\r\n  const url = window.location.href.split(\"MySessions/\");\r\n\r\n  const errorHandler = () => {\r\n    clearError(null);\r\n  };\r\n  const dateHandler = () => {\r\n    setdateerror(false);\r\n  };\r\n  useEffect(() => {\r\n    const fetchFriends = async () => {\r\n      try {\r\n        const resData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL +\r\n            `/myProfile/Sessions/MySessions/${url[1]}`,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            Authorization: \"Bearer \" + auth.token,\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        setResData(resData);\r\n        let pushToThisArray = [];\r\n        for (let index = 0; index < resData.votes.length; index++) {\r\n          pushToThisArray.push(...resData.votes[index].dates);\r\n        }\r\n        setVotes([...pushToThisArray]);\r\n      } catch (err) {}\r\n    };\r\n    fetchFriends();\r\n  }, []);\r\n\r\n  const mode = (numbers) => {\r\n    let counted = numbers.reduce((acc, curr) => {\r\n      if (curr in acc) {\r\n        acc[curr]++;\r\n      } else {\r\n        acc[curr] = 1;\r\n      }\r\n      return acc;\r\n    }, {});\r\n    let mode = Math.max(...Object.values(counted));\r\n    return Object.keys(counted).filter((x) => counted[x] === mode);\r\n  };\r\n  const submitVote = async (answer) => {\r\n    if (answer === true) {\r\n      if (userInfoToSubmit.length > 1 || userInfoToSubmit.length === 0) {\r\n        setdateerror(true);\r\n        return;\r\n      }\r\n      try {\r\n        setIntentionSubmitVote(false);\r\n\r\n        await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL +\r\n            `/myProfile/Sessions/MySessions/${url[1]}`,\r\n          \"PATCH\",\r\n          JSON.stringify({\r\n            dates: userInfoToSubmit,\r\n            status: \"SCHEDULED\",\r\n            username: auth.username,\r\n            hours: hourforSession,\r\n            id: auth.userId,\r\n            calendarId: url[1],\r\n          }),\r\n          {\r\n            Authorization: \"Bearer \" + auth.token,\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        navigate(`/myProfile/Sessions/AllSessions`);\r\n      } catch (err) {}\r\n    }\r\n    setIntentionSubmitVote(false);\r\n  };\r\n  const chechUserIntention = (info, hours) => {\r\n    setIntentionSubmitVote(true);\r\n    setUserInfoToSubmit([...info]);\r\n    setHoursforSession(hours);\r\n  };\r\n  return (\r\n    <ConteinerBox>\r\n      {isLoading && <LoadingSpinner as0verlay></LoadingSpinner>}\r\n      {error && (\r\n        <ModalError\r\n          header=\"An Error Occurred\"\r\n          error={error}\r\n          onClick={errorHandler}\r\n        ></ModalError>\r\n      )}\r\n      {intentionSubmitVote && (\r\n        <ModalConfirmation\r\n          title=\"Are you shure about the date you put in ? There is no turning back.\"\r\n          onClick={submitVote}\r\n        ></ModalConfirmation>\r\n      )}\r\n      {dateerror && (\r\n        <ModalError\r\n          header=\"Please select only ONE date!\"\r\n          onClick={dateHandler}\r\n        ></ModalError>\r\n      )}\r\n      <SessionComponent\r\n        resData={resData}\r\n        selectedDatesFromDungonMaster={mode(votesArray)}\r\n        calendarButtonText={\"Schedule Session\"}\r\n        canCloseSession={true}\r\n        onClickSubmit={chechUserIntention}\r\n        url={url[1]}\r\n      ></SessionComponent>\r\n    </ConteinerBox>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport useWindowSize from \"../../../hooks/screensize-hook\";\r\n\r\nexport default function CalendarReSize() {\r\n  const size = useWindowSize();\r\n  const [calendarSize, setCalendarsize] = useState(480);\r\n  useEffect(() => {\r\n    if (size.width > 1920) {\r\n      setCalendarsize(540);\r\n    }\r\n    if (size.width > 1024 && size.width < 1920) {\r\n      setCalendarsize(480);\r\n    }\r\n    if (size.width < 1024 && size.width > 420) {\r\n      setCalendarsize(390);\r\n    }\r\n    if (size.width < 420) {\r\n      setCalendarsize(330);\r\n    }\r\n  }, [size.width]);\r\n  return calendarSize;\r\n}\r\n","import NewsBox from \"../../../UI/NewsBox\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport styles from \"./sessionUi.module.css\";\r\nexport default function Comments(props) {\r\n  const AlwaysScrollToBottom = () => {\r\n    const elementRef = useRef();\r\n    useEffect(() => elementRef.current.scrollIntoView());\r\n    return <div ref={elementRef} />;\r\n  };\r\n  const [stateComents, setStateComents] = useState([]);\r\n  useEffect(() => {\r\n    setStateComents([...props.comments, ...props.wscomments]);\r\n  }, [props]);\r\n  return (\r\n    <NewsBox className={props.className}>\r\n      {stateComents &&\r\n        stateComents.map((el, i) => (\r\n          <div\r\n            key={i}\r\n            className={`${styles.general_style} ${\r\n              props.thisUser === el.username\r\n                ? styles.sameuser__style\r\n                : styles.diffuser__style\r\n            }`}\r\n          >\r\n            {props.thisUser !== el.username && (\r\n              <span\r\n                dangerouslySetInnerHTML={{ __html: el.username }}\r\n                className={`${styles.username__style} ${styles.general_comment__style} `}\r\n              ></span>\r\n            )}\r\n            <span\r\n              dangerouslySetInnerHTML={{ __html: el.comment }}\r\n              className={`${styles.text__style}  ${\r\n                styles.general_comment__style\r\n              } ${\r\n                props.thisUser === el.username\r\n                  ? styles.sameuser__bcccolor__style\r\n                  : styles.diffuser__bcccolor__style\r\n              }`}\r\n            ></span>\r\n          </div>\r\n        ))}\r\n\r\n      <AlwaysScrollToBottom></AlwaysScrollToBottom>\r\n    </NewsBox>\r\n  );\r\n}\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nimport Comments from \"./Comments\";\r\nimport { LoginContext } from \"../../../store/login-context\";\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\n\r\nimport styles from \"./sessionUi.module.css\";\r\n\r\nexport default function WsComments(props) {\r\n  //   const [webSocketMessage, setWebSocketMessage] = useState([]);\r\n  const [ckEditorText, setckEditorText] = useState(\"\");\r\n  const [propsState, setPropsState] = useState(props.dbComments);\r\n  const [wsMessage, setWsMessage] = useState(propsState);\r\n  const { sendRequest } = useHttpClient();\r\n  const auth = useContext(LoginContext);\r\n  useEffect(() => {\r\n    setPropsState(props.dbComments);\r\n  }, [props]);\r\n  const ws_url = window.location.href.split(\"/\");\r\n  const ws_backend_url = process.env.REACT_APP_BACKEND_URL.replace(\r\n    \"http\",\r\n    \"ws\"\r\n  );\r\n\r\n  //   ############################################ Web Socket Connection #######################################\r\n  const client = new W3CWebSocket(`${ws_backend_url}/${ws_url[6]}`);\r\n\r\n  useEffect(() => {\r\n    client.onopen = () => {};\r\n    client.onmessage = (e) => {\r\n      if (typeof e.data === \"string\") {\r\n        const data = JSON.parse(e.data);\r\n        setWsMessage([...wsMessage, data]);\r\n      }\r\n    };\r\n\r\n    client.onerror = function () {};\r\n  }, [client.onmessage, wsMessage]);\r\n\r\n  //   #######################################################################################################\r\n\r\n  const submitComment = async () => {\r\n    // ############### Send WebSocket Message ###############\r\n    if (ckEditorText.trim() === \"\") {\r\n      return;\r\n    }\r\n    client.send(\r\n      JSON.stringify({ comment: ckEditorText, username: auth.username })\r\n    );\r\n    // ######################################################\r\n    try {\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL +\r\n          `/myProfile/Sessions/AllSessions/comment`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          title: ckEditorText,\r\n          username: auth.username,\r\n          id: auth.userId,\r\n          calendarId: ws_url[6],\r\n        }),\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      setckEditorText(\"\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  const textZoneChange = (event) => {\r\n    setckEditorText(event.target.value);\r\n  };\r\n  return (\r\n    <div className={`${styles.comment__big_box_holder} `}>\r\n      <Comments\r\n        className={\"black__background overflow flex_nowrap\"}\r\n        thisUser={auth.username}\r\n        comments={propsState}\r\n        wscomments={wsMessage}\r\n      ></Comments>\r\n\r\n      <div className={`${styles.comment__input__style} `}>\r\n        <input\r\n          onChange={textZoneChange}\r\n          placeholder=\"Aa\"\r\n          value={ckEditorText}\r\n        ></input>\r\n        <button className=\"button\" onClick={submitComment}>\r\n          {\" \"}\r\n          Comment\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\nimport { LoginContext } from \"../../../store/login-context\";\r\nimport WsComments from \"./WsComments\";\r\nimport { Calendar } from \"@natscale/react-calendar\";\r\nimport Countdown from \"react-countdown\";\r\nimport ModalError from \"../../../UI/ModalError\";\r\nimport LoadingSpinner from \"../../../UI/LoadingSpinner\";\r\nimport ModalConfirmation from \"../../../UI/ModalConfirmation\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport CalendarReSize from \"./CalendarReSize\";\r\n\r\nimport styles from \"./sessionUi.module.css\";\r\nimport \"@natscale/react-calendar/dist/main.css\";\r\n\r\nconst hours = [\r\n  { value: 1, label: \"1:00\" },\r\n  { value: 2, label: \"2:00\" },\r\n  { value: 3, label: \"3:00\" },\r\n  { value: 4, label: \"4:00\" },\r\n  { value: 5, label: \"5:00\" },\r\n  { value: 6, label: \"6:00\" },\r\n  { value: 7, label: \"7:00\" },\r\n  { value: 8, label: \"8:00\" },\r\n  { value: 9, label: \"9:00\" },\r\n  { value: 10, label: \"10:00\" },\r\n  { value: 11, label: \"11:00\" },\r\n  { value: 12, label: \"12:00\" },\r\n  { value: 13, label: \"13:00\" },\r\n  { value: 14, label: \"14:00\" },\r\n  { value: 15, label: \"15:00\" },\r\n  { value: 16, label: \"16:00\" },\r\n  { value: 17, label: \"17:00\" },\r\n  { value: 18, label: \"18:00\" },\r\n  { value: 19, label: \"19:00\" },\r\n  { value: 20, label: \"20:00\" },\r\n  { value: 21, label: \"21:00\" },\r\n  { value: 22, label: \"22:00\" },\r\n  { value: 23, label: \"23:00\" },\r\n  { value: 24, label: \"24:00\" },\r\n];\r\n\r\nexport default function SessionComponent(props) {\r\n  const [value, setValue] = useState([]);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [intentionForClosing, setIntentionForClosing] = useState(false);\r\n  const [intentionForDelete, setIntentionForDelete] = useState(false);\r\n  const [scheduledHours, setScheduledHour] = useState();\r\n  const size = CalendarReSize();\r\n  const auth = useContext(LoginContext);\r\n  const navigate = useNavigate();\r\n\r\n  const errorHandler = () => {\r\n    clearError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      props.userAlreadySelectedDates &&\r\n      props.userAlreadySelectedDates.length > 0\r\n    ) {\r\n      setValue(props.userAlreadySelectedDates);\r\n    }\r\n  }, [props.userAlreadySelectedDates]);\r\n\r\n  const toTimeStamp = (time) => {\r\n    let timestamp = [];\r\n    for (let index = 0; index < time.length; index++) {\r\n      timestamp.push(new Date(time[index]).getTime());\r\n    }\r\n    return timestamp;\r\n  };\r\n\r\n  const timeStamp = toTimeStamp(\r\n    props.resData.status === \"SCHEDULED\"\r\n      ? props.resData.scheduledFor\r\n      : props.selectedDatesFromDungonMaster\r\n  );\r\n\r\n  const isDisabled = (date) => {\r\n    if (timeStamp.includes(date.getTime())) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n  const submitVote = () => {\r\n    props.onClickSubmit(value, scheduledHours);\r\n  };\r\n\r\n  const closeSession = async (answer) => {\r\n    if (answer === false) {\r\n      setIntentionForClosing(false);\r\n      return;\r\n    }\r\n    try {\r\n      setIntentionForClosing(false);\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL +\r\n          `/myProfile/Sessions/MySessions/${props.url}`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          calendarId: props.url,\r\n          status: \"CLOSED\",\r\n        }),\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      navigate(`/myProfile/Sessions/AllSessions`);\r\n    } catch (err) {}\r\n  };\r\n  const deleteSession = async (answer) => {\r\n    if (answer === false) {\r\n      setIntentionForDelete(false);\r\n      return;\r\n    }\r\n    try {\r\n      setIntentionForDelete(false);\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL +\r\n          `/myProfile/Sessions/MySessions/${props.url}`,\r\n        \"DELETE\",\r\n        JSON.stringify({\r\n          calendarId: props.url,\r\n        }),\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n    } catch (err) {}\r\n    navigate(`/myProfile/Sessions/AllSessions`);\r\n  };\r\n  const checkIntentionForClosing = () => {\r\n    setIntentionForClosing(true);\r\n  };\r\n\r\n  const checkIntentionForDelete = () => {\r\n    setIntentionForDelete(true);\r\n  };\r\n  const scheduledHour = (value) => {\r\n    setScheduledHour(value.value);\r\n  };\r\n  return (\r\n    <>\r\n      {isLoading && <LoadingSpinner as0verlay></LoadingSpinner>}\r\n      {error && (\r\n        <ModalError\r\n          header=\"An Error Occurred\"\r\n          error={error}\r\n          onClick={errorHandler}\r\n        ></ModalError>\r\n      )}\r\n      {intentionForClosing && (\r\n        <ModalConfirmation\r\n          title=\"Are you shure that you want to CLOSE this session.\"\r\n          onClick={closeSession}\r\n        ></ModalConfirmation>\r\n      )}\r\n      {intentionForDelete && (\r\n        <ModalConfirmation\r\n          title=\"Are you shure that you want to DELETE this session.\"\r\n          onClick={deleteSession}\r\n        ></ModalConfirmation>\r\n      )}\r\n      <div>\r\n        <div className={styles.info_about_session__style}>\r\n          {props.resData.timeforvoting && (\r\n            <span className={styles.countdown__style}>\r\n              <Countdown date={props.resData.timeforvoting}></Countdown>\r\n            </span>\r\n          )}\r\n          <span className={styles.organiser__span__style}>\r\n            Invited by : {props.resData.dmStatus && \"DM\"}\r\n            {props.resData.dmStatus && props.resData.hostStatus && \" and a \"}\r\n            {props.resData.hostStatus && \"HOST\"}\r\n            <span className={styles.organiser__span__style}>\r\n              {props.resData.creatorName}\r\n            </span>\r\n          </span>\r\n        </div>\r\n        <div className={`${styles.info_about_session__style}`}>\r\n          <Calendar\r\n            isDisabled={isDisabled}\r\n            useDarkMode={true}\r\n            size={size}\r\n            fontSize={18}\r\n            value={\r\n              props.resData.status === \"SCHEDULED\"\r\n                ? [new Date(props.resData.scheduledFor)]\r\n                : value\r\n            }\r\n            isMultiSelector={true}\r\n            onChange={setValue}\r\n          />\r\n          <div className={`${styles.schedule_buttons__style}`}>\r\n            {props.resData.status === \"SCHEDULED\" ||\r\n            props.resData.status === \"CLOSED\" ? null : (\r\n              <button\r\n                style={{ width: \"38%\" }}\r\n                className=\"button\"\r\n                onClick={submitVote}\r\n              >\r\n                {\" \"}\r\n                {props.calendarButtonText}\r\n              </button>\r\n            )}\r\n            {props.canCloseSession &&\r\n              props.resData.status !== \"SCHEDULED\" &&\r\n              props.resData.status !== \"CLOSED\" && (\r\n                <Select\r\n                  //  className={styles.search_bar__stayle}\r\n                  options={hours}\r\n                  name=\"hours\"\r\n                  onChange={scheduledHour}\r\n                  menuPlacement={\"auto\"}\r\n                  // onSelection={addUser}\r\n                ></Select>\r\n              )}\r\n            {props.canCloseSession &&\r\n              (props.resData.status === \"CLOSED\" ? (\r\n                <button\r\n                  style={{ width: \"38%\" }}\r\n                  className=\"button\"\r\n                  onClick={checkIntentionForDelete}\r\n                >\r\n                  {\" \"}\r\n                  Delete Session\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  style={{ width: \"38%\" }}\r\n                  className=\"button\"\r\n                  onClick={checkIntentionForClosing}\r\n                >\r\n                  {\" \"}\r\n                  Close Session\r\n                </button>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <WsComments dbComments={props.resData.comments || []}></WsComments>\r\n    </>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container_box__style\":\"ConteinerBox_container_box__style__C8d7G\",\"fromStart\":\"ConteinerBox_fromStart__FCHBa\",\"fromEnd\":\"ConteinerBox_fromEnd__6CJVd\"};","import styles from \"./ConteinerBox.module.css\";\r\n\r\nexport default function ConteinerBox(props) {\r\n  return (\r\n    <div\r\n      className={`${styles.container_box__style} ${\r\n        props.fromStart && styles.fromStart\r\n      } ${props.fromEnd && styles.fromEnd}`}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Confirmation_btn__lddQ2\",\"modal_big_box__style\":\"Confirmation_modal_big_box__style__a-CgK\",\"confirm__style\":\"Confirmation_confirm__style__ij0BH\",\"reject__style\":\"Confirmation_reject__style__erAtf\"};","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport BackDrop from \"./BackDrop\";\r\nimport styles from \"./Confirmation.module.css\";\r\n\r\nexport default function ModalConfirmation(props) {\r\n  const confirmation = (answer) => {\r\n    props.onClick(answer);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {ReactDOM.createPortal(\r\n        <BackDrop onClick={props.onClick}></BackDrop>,\r\n        document.getElementById(\"backdrop-root\")\r\n      )}\r\n\r\n      <div className={styles.modal_big_box__style}>\r\n        <span>{props.title}</span>\r\n        <div>\r\n          <button\r\n            className={`${styles.btn} ${styles.confirm__style}`}\r\n            onClick={() => confirmation(true)}\r\n          >\r\n            Yes\r\n          </button>\r\n          <button className={`${styles.btn} ${styles.reject__style}`} onClick={() => confirmation(false)}>\r\n            No\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"session_all__style\":\"sessionUi_session_all__style__Lz5Nd\",\"user_session__style\":\"sessionUi_user_session__style__6n8Uy\",\"invited_session__style\":\"sessionUi_invited_session__style__DzoA8\",\"scheduled_session__style\":\"sessionUi_scheduled_session__style__MCB7e\",\"text__inside__style\":\"sessionUi_text__inside__style__IPShv\",\"info_about_session__style\":\"sessionUi_info_about_session__style__kQwwU\",\"countdown__style\":\"sessionUi_countdown__style__F+cQZ\",\"organiser__span__style\":\"sessionUi_organiser__span__style__-2bLP\",\"comment__input__style\":\"sessionUi_comment__input__style__QLLb6\",\"general_comment__style\":\"sessionUi_general_comment__style__PQvpl\",\"username__style\":\"sessionUi_username__style__MyuZe\",\"text__style\":\"sessionUi_text__style__ZSVuC\",\"sameuser__style\":\"sessionUi_sameuser__style__zs0da\",\"general_style\":\"sessionUi_general_style__G-JyT\",\"sameuser__bcccolor__style\":\"sessionUi_sameuser__bcccolor__style__N11UC\",\"diffuser__style\":\"sessionUi_diffuser__style__HEhWV\",\"diffuser__bcccolor__style\":\"sessionUi_diffuser__bcccolor__style__hFRd7\",\"schedule_buttons__style\":\"sessionUi_schedule_buttons__style__Dw-fb\",\"comment__big_box_holder\":\"sessionUi_comment__big_box_holder__smqUT\"};"],"names":["MySessions","useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","LoginContext","useState","resData","setResData","votesArray","setVotes","intentionSubmitVote","setIntentionSubmitVote","dateerror","setdateerror","userInfoToSubmit","setUserInfoToSubmit","hourforSession","setHoursforSession","navigate","useNavigate","url","window","location","href","split","useEffect","fetchFriends","process","Authorization","token","pushToThisArray","index","votes","length","push","dates","submitVote","answer","JSON","stringify","status","username","hours","id","userId","calendarId","as0verlay","header","onClick","title","selectedDatesFromDungonMaster","numbers","counted","reduce","acc","curr","mode","Math","max","Object","values","keys","filter","x","calendarButtonText","canCloseSession","onClickSubmit","info","CalendarReSize","size","useWindowSize","calendarSize","setCalendarsize","width","Comments","props","AlwaysScrollToBottom","elementRef","useRef","current","scrollIntoView","ref","stateComents","setStateComents","comments","wscomments","NewsBox","className","map","el","i","styles","thisUser","dangerouslySetInnerHTML","__html","comment","WsComments","ckEditorText","setckEditorText","dbComments","propsState","setPropsState","wsMessage","setWsMessage","ws_url","ws_backend_url","replace","client","W3CWebSocket","onopen","onmessage","e","data","parse","onerror","submitComment","trim","send","onChange","event","target","value","placeholder","label","SessionComponent","setValue","intentionForClosing","setIntentionForClosing","intentionForDelete","setIntentionForDelete","scheduledHours","setScheduledHour","userAlreadySelectedDates","timeStamp","time","timestamp","Date","getTime","toTimeStamp","scheduledFor","closeSession","deleteSession","LoadingSpinner","ModalError","ModalConfirmation","timeforvoting","date","dmStatus","hostStatus","creatorName","isDisabled","includes","useDarkMode","fontSize","isMultiSelector","style","options","name","menuPlacement","ConteinerBox","fromStart","fromEnd","children","confirmation","ReactDOM","BackDrop","document","getElementById"],"sourceRoot":""}