{"version":3,"file":"static/js/735.bd3df46a.chunk.js","mappings":"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","sources":["webpack://dnd-project/./src/components/MyProfile/MyProfile.module.css?9b5e","components/MyProfile/Legend.js","components/MyProfile/Edit.js","components/MyProfile/MyProfile.js","components/UI/EmptyPage.js","webpack://dnd-project/./src/components/UI/Confirmation.module.css?e1ca","components/UI/ModalConfirmation.js","webpack://dnd-project/./src/components/UI/FullMonsterDescription/mainstyling.module.css?0cf6","components/UI/FullMonsterDescription/Actions.js","components/UI/FullMonsterDescription/StatBlock/NameAndAlignment.js","components/UI/FullMonsterDescription/StatBlock/LifeArmorSpeed.js","components/UI/FullMonsterDescription/StatBlock/Stats.js","components/UI/FullMonsterDescription/StatBlock/General.js","components/UI/FullMonsterDescription/StatBlock/StatBlock.js","webpack://dnd-project/./src/components/UI/Border.module.css?aec6","components/UI/Border.js","components/UI/FullMonsterDescription/FullMonsterDescription.js","components/UI/ModalMonsterText.js","webpack://dnd-project/./src/components/UI/SuccesfulSubmission.module.css?1f84","components/UI/SuccessfulSubmission.js","components/UI/ModalSubmitSucces.js","components/Voting/Button.js","components/Voting/MainMonsterBox.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"red\":\"MyProfile_red__LqUtI\",\"green\":\"MyProfile_green__y5eUO\",\"grey\":\"MyProfile_grey__d2LBG\",\"legend__style\":\"MyProfile_legend__style__yuIcn\",\"legend_single_box\":\"MyProfile_legend_single_box__EhwY2\",\"legend_main_box__style\":\"MyProfile_legend_main_box__style__GS9MY\",\"edit_link__style\":\"MyProfile_edit_link__style__3FwXQ\",\"edit_button__style\":\"MyProfile_edit_button__style__XPsDl\",\"delete_btn__style\":\"MyProfile_delete_btn__style__fEYUw\",\"btn_load_more\":\"MyProfile_btn_load_more__9-kZt\",\"search_bar__style\":\"MyProfile_search_bar__style__iS-up\"};","import styles from \"./MyProfile.module.css\";\r\nexport default function Legend(props) {\r\n  return (\r\n    <div className={styles.legend_single_box}>\r\n      <div id={props.id} className={props.className}></div>\r\n      <label>{props.text}</label>\r\n    </div>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport styles from './MyProfile.module.css'\r\nexport default function Edit(props) {\r\n  return (\r\n    <Link className={`${styles.edit_link__style}`}\r\n    to={`/myProfile/Edit/${props.id}`}>\r\n      <button className={`${styles.edit_button__style} button`}>Edit</button>\r\n    </Link>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHttpClient } from \"../hooks/http-hook\";\r\nimport { LoginContext } from \"../store/login-context\";\r\nimport MainMonsterBox from \"../Voting/MainMonsterBox\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport styles from \"./MyProfile.module.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Legend from \"./Legend\";\r\nimport Edit from \"./Edit\";\r\nimport ModalConfirmation from \"../UI/ModalConfirmation\";\r\nimport ModalSubmitSucces from \"../UI/ModalSubmitSucces\";\r\nimport ModalError from \"../UI/ModalError\";\r\nimport EmptyPage from \"../UI/EmptyPage\";\r\nexport default function MyProfile() {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const login = useContext(LoginContext);\r\n  const [searchCondition, setSearchCondition] = useState(\"\");\r\n  const [myMonsters, setMyMonsters] = useState([]);\r\n  const [deleted, setDeleted] = useState(false);\r\n  const [clickDelete, setDeleteClick] = useState(false);\r\n  const [creatureToDelete, setCreatureToDelete] = useState(\"\");\r\n  const [limit, setLimit] = useState(20);\r\n  const navigate = useNavigate();\r\n  let timer;\r\n  const now = new Date().getTime();\r\n  useEffect(() => {\r\n    const fetchMonsters = async () => {\r\n      try {\r\n        const resData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + \"/myProfile\",\r\n          \"POST\",\r\n          JSON.stringify({\r\n            user: login.userId,\r\n            limit: limit,\r\n            name: searchCondition,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        setMyMonsters([...resData]);\r\n      } catch (err) {}\r\n    };\r\n    fetchMonsters();\r\n  }, [sendRequest, login.userId, limit, searchCondition]);\r\n\r\n  const nameSearch = (event) => {\r\n    if (timer) {\r\n      clearTimeout(timer);\r\n    }\r\n    timer = setTimeout(function () {\r\n      setSearchCondition(event.target.value);\r\n    }, 1000);\r\n  };\r\n\r\n  const errorHandler = () => {\r\n    clearError(null);\r\n  };\r\n  const deleteEncounter = (creatureId) => {\r\n    setDeleteClick(true);\r\n    setCreatureToDelete(creatureId);\r\n  };\r\n  const startDelete = async (answer) => {\r\n    if (answer === true) {\r\n      try {\r\n        setDeleteClick(false);\r\n        await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + `/myProfile/${creatureToDelete}`,\r\n          \"DELETE\",\r\n          null,\r\n          { Authorization: \"Bearer \" + login.token }\r\n        );\r\n        setDeleted(true);\r\n      } catch (err) {}\r\n    } else {\r\n      setDeleteClick(false);\r\n    }\r\n  };\r\n  const removeModal = () => {\r\n    navigate(\"/\");\r\n  };\r\n  const loadMore = () => {\r\n    setLimit(limit + 10);\r\n  };\r\n  return (\r\n    <>\r\n      {isLoading && <LoadingSpinner as0verlay></LoadingSpinner>}\r\n      {error && (\r\n        <ModalError\r\n          header=\"An Error Occurred\"\r\n          error={error}\r\n          onClick={errorHandler}\r\n        ></ModalError>\r\n      )}\r\n      {clickDelete && (\r\n        <ModalConfirmation\r\n          title=\"Are you shure you whant to delete this Creature?\"\r\n          onClick={startDelete}\r\n        ></ModalConfirmation>\r\n      )}\r\n      {deleted && (\r\n        <ModalSubmitSucces\r\n          onClick={removeModal}\r\n          title=\"Creature Deleted\"\r\n          text=\"Your creature has been deleted successfully\"\r\n        />\r\n      )}\r\n      <div className={styles.legend_main_box__style}>\r\n        <Legend\r\n          id=\"red\"\r\n          className={`${styles.legend__style} ${styles.red}`}\r\n          text=\"Rejected by the community. Some edits might be in order.\"\r\n        ></Legend>\r\n        <Legend\r\n          id=\"green\"\r\n          className={`${styles.legend__style} ${styles.green}`}\r\n          text=\"Accepted by the community.\"\r\n        ></Legend>\r\n        <Legend\r\n          id=\"grey\"\r\n          className={`${styles.legend__style} ${styles.grey}`}\r\n          text=\"Ongoing voting\"\r\n        ></Legend>\r\n        {myMonsters.length < 1 && (\r\n          <EmptyPage message=\"You haven't created any creatures yet.\"></EmptyPage>\r\n        )}\r\n      </div>\r\n      {myMonsters.length > 10 && (\r\n        <input\r\n          className={styles.search_bar__style}\r\n          onKeyUp={nameSearch}\r\n          placeholder=\"Search\"\r\n        ></input>\r\n      )}\r\n\r\n      {myMonsters.map((monster, i) => (\r\n        <MainMonsterBox\r\n          key={i}\r\n          className={\r\n            monster.timeforvoting > now\r\n              ? styles.grey\r\n              : monster.votes.number > 0 || monster.votes.number === undefined\r\n              ? styles.green\r\n              : styles.red\r\n          }\r\n          monsterStats={monster}\r\n        >\r\n          <Edit id={monster._id}></Edit>\r\n          <button\r\n            className={`${styles.delete_btn__style} ${styles.edit_button__style} button`}\r\n            onClick={() => deleteEncounter(monster._id)}\r\n          >\r\n            {\" \"}\r\n            Delete\r\n          </button>\r\n        </MainMonsterBox>\r\n      ))}\r\n      {myMonsters.length > 10 && (\r\n        <button className={`${styles.btn_load_more} button`} onClick={loadMore}>\r\n          Load More\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import \"./EmptyPage.css\"\r\n\r\nexport default function EmptyPage(props) {\r\n  return (\r\n    <div className=\"empty_encounter_box__style\">{props.message}</div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Confirmation_btn__lddQ2\",\"modal_big_box__style\":\"Confirmation_modal_big_box__style__a-CgK\",\"confirm__style\":\"Confirmation_confirm__style__ij0BH\",\"reject__style\":\"Confirmation_reject__style__erAtf\"};","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport BackDrop from \"./BackDrop\";\r\nimport styles from \"./Confirmation.module.css\";\r\n\r\nexport default function ModalConfirmation(props) {\r\n  const confirmation = (answer) => {\r\n    props.onClick(answer);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {ReactDOM.createPortal(\r\n        <BackDrop onClick={props.onClick}></BackDrop>,\r\n        document.getElementById(\"backdrop-root\")\r\n      )}\r\n\r\n      <div className={styles.modal_big_box__style}>\r\n        <span>{props.title}</span>\r\n        <div>\r\n          <button\r\n            className={`${styles.btn} ${styles.confirm__style}`}\r\n            onClick={() => confirmation(true)}\r\n          >\r\n            Yes\r\n          </button>\r\n          <button className={`${styles.btn} ${styles.reject__style}`} onClick={() => confirmation(false)}>\r\n            No\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"box_design\":\"mainstyling_box_design__ApoSj\",\"first_half\":\"mainstyling_first_half__M7AY+\",\"second_half\":\"mainstyling_second_half__jHDuo\",\"image_half\":\"mainstyling_image_half__UlMtG\",\"life_stiling\":\"mainstyling_life_stiling__shMQz\",\"leader\":\"mainstyling_leader__66LAX\",\"numbers\":\"mainstyling_numbers__-z7IG\",\"name_box\":\"mainstyling_name_box__7IyQY\",\"name_styling\":\"mainstyling_name_styling__f3oFh\",\"table__styling\":\"mainstyling_table__styling__tkwzK\",\"table__boxes\":\"mainstyling_table__boxes__1vq1g\",\"skills_style\":\"mainstyling_skills_style__OckZm\",\"action__styles\":\"mainstyling_action__styles__omMfM\",\"action_text__styles\":\"mainstyling_action_text__styles__eMzac\"};","import React from \"react\";\r\nimport styles from \"./mainstyling.module.css\"\r\nexport default function Actions(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <div className={styles.action__styles}>{props.name}</div>\r\n      <hr />\r\n      <div className={styles.action_text__styles} dangerouslySetInnerHTML={{ __html: props.actions }}></div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nimport styles from \"../mainstyling.module.css\"\r\n\r\n\r\nexport default function NameAndAlignment (props){\r\n        return(\r\n                <div className={styles.name_box}>\r\n                        <div className={styles.name_styling}>{props.name.toUpperCase()}</div>\r\n                        <div>{`${props.meta.size} ${props.meta.type}, ${props.meta.alignment}`}</div>\r\n                </div>\r\n        )\r\n}","import React from \"react\";\r\n\r\nimport styles from \"../mainstyling.module.css\";\r\n\r\nexport default function LifeArmorSpeed(props) {\r\n  return (\r\n    <div className={styles.picture_divide}>\r\n      <div className={styles.life_stiling}>\r\n        <div>\r\n          <div className={styles.leader}>Armor Class: </div>\r\n          <div className={styles.numbers}>{`${props.armor.value} ${props.armor.type}`}</div>\r\n        </div>\r\n        <div>\r\n          <div className={styles.leader}>Hit Points: </div>\r\n          <div className={styles.numbers}>{`${props.hp.hp} ${props.hp.dice}`}</div>\r\n        </div>\r\n        <div>\r\n          <div className={styles.leader}>Speed: </div>\r\n          <div className={styles.numbers}>{props.speed}</div>\r\n        </div>\r\n      </div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"../mainstyling.module.css\"\r\n\r\nexport default function Stats(props) {\r\n  return (\r\n    <div className={styles.table__styling}>\r\n      <div className={styles.table__boxes}>\r\n        <div>STR</div>\r\n        <div>{props.str}{props.str_mod}</div>\r\n      </div>\r\n      <div className={styles.table__boxes}>\r\n        <div>DEX</div>\r\n        <div>{props.dex}{props.dex_mod}</div>\r\n      </div>\r\n      <div className={styles.table__boxes}>\r\n        <div>CON</div>\r\n        <div>{props.con}{props.con_mod}</div>\r\n      </div>\r\n      <div className={styles.table__boxes}>\r\n        <div>INT</div>\r\n        <div>{props.int}{props.int_mod}</div>\r\n      </div>\r\n      <div className={styles.table__boxes}>\r\n        <div>WIS</div>\r\n        <div>{props.wis}{props.wis_mod}</div>\r\n      </div>\r\n      <div className={styles.table__boxes}>\r\n        <div>CHA</div>\r\n        <div>{props.cha}{props.cha_mod}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"../mainstyling.module.css\";\r\n\r\nexport default function General(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <GeneralStats\r\n        name=\"Saving Throws:\"\r\n        stat={props.saving_throw}\r\n      ></GeneralStats>\r\n      <GeneralStats name=\"Skills:\" stat={props.skill}></GeneralStats>\r\n      <GeneralStats name=\"Senses:\" stat={props.senses}></GeneralStats>\r\n      <GeneralStats\r\n        name=\"Condition Immunities: \"\r\n        stat={props.con}\r\n      ></GeneralStats>\r\n      <GeneralStats name=\"Damage Immunities: \" stat={props.dmg}></GeneralStats>\r\n      <GeneralStats name=\"Damage Resistances: \" stat={props.res}></GeneralStats>\r\n      <GeneralStats\r\n        name=\"Damage Vulnerabilities: \"\r\n        stat={props.vul}\r\n      ></GeneralStats>\r\n      <GeneralStats name=\"Languages: \" stat={props.lang}></GeneralStats>\r\n      <GeneralStats\r\n        name=\"Challenge: \"\r\n        stat={`${props.challenge.rating} ${props.challenge.xp}`}\r\n      ></GeneralStats>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst GeneralStats = (props) => {\r\n  return (\r\n    <div className={styles.table__styling}>\r\n      <div className={styles.skills_style}>{props.name} </div>\r\n      {props.stat}\r\n    </div>\r\n  );\r\n};\r\n","import NameAndAlignment from \"./NameAndAlignment\";\r\nimport LifeArmorSpeed from \"./LifeArmorSpeed\";\r\nimport Stats from \"./Stats\";\r\nimport General from \"./General\";\r\nimport Actions from \"../Actions\";\r\n\r\n\r\nexport default function StatBlock(props) {\r\n  return (\r\n    <>\r\n      <NameAndAlignment\r\n        name={props.monsterStats.name}\r\n        meta={props.monsterStats.meta}\r\n      />\r\n      <hr />\r\n      <LifeArmorSpeed\r\n        armor={props.monsterStats[\"Armor Class\"]}\r\n        hp={props.monsterStats[\"Hit Points\"]}\r\n        speed={props.monsterStats.Speed}\r\n        img={props.monsterStats.img_url}\r\n      />\r\n      <hr />\r\n      <Stats\r\n        str={props.monsterStats.STR}\r\n        str_mod={props.monsterStats.STR_mod}\r\n        dex={props.monsterStats.DEX}\r\n        dex_mod={props.monsterStats.DEX_mod}\r\n        con={props.monsterStats.CON}\r\n        con_mod={props.monsterStats.CON_mod}\r\n        int={props.monsterStats.INT}\r\n        int_mod={props.monsterStats.INT_mod}\r\n        wis={props.monsterStats.WIS}\r\n        wis_mod={props.monsterStats.WIS_mod}\r\n        cha={props.monsterStats.CHA}\r\n        cha_mod={props.monsterStats.CHA_mod}\r\n      />\r\n      <hr />\r\n      <General\r\n        saving_throw={props.monsterStats[\"Saving Throws\"]}\r\n        skill={props.monsterStats.Skills}\r\n        senses={props.monsterStats.Senses}\r\n        con={props.monsterStats[\"Condition Immunities\"]}\r\n        dmg={props.monsterStats[\"Damage Immunities\"]}\r\n        res={props.monsterStats[\"Damage Resistances\"]}\r\n        vul={props.monsterStats[\"Damage Vulnerabilities\"]}\r\n        lang={props.monsterStats.Languages}\r\n        challenge={props.monsterStats.Challenge}\r\n      />\r\n      {props.monsterStats.Traits && <Actions name='Traits' actions={props.monsterStats.Traits} />}\r\n      {props.monsterStats['Bonus Actions'] && <Actions name='Bonus Actions' actions={props.monsterStats['Bonus Actions']} />}\r\n      {props.monsterStats.Reactions && <Actions name='Reactions' actions={props.monsterStats.Reactions} />}\r\n    </>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"border__style\":\"Border_border__style__8I2we\"};","import styles from \"./Border.module.css\"\r\n\r\n export default function Border(){\r\n    return(\r\n\r\n        <div className={styles.border__style}></div>\r\n    )\r\n }","import React from \"react\";\r\nimport styles from \"./mainstyling.module.css\";\r\nimport Actions from \"./Actions\";\r\nimport StatBlock from \"./StatBlock/StatBlock\";\r\nimport Border from \"../Border\";\r\nexport default function FullMonsterDescription(props) {\r\n  const stopClick=()=>{\r\n    if(window.getSelection().type !== \"Range\"){\r\n      props.onClick(false)\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div onClick={stopClick} className={styles.box_design}>\r\n        <Border />\r\n        <div className={styles.first_half}>\r\n          <StatBlock monsterStats={props.monsterStats} />\r\n        </div>\r\n\r\n        <div className={styles.second_half}>\r\n          <Actions name=\"Actions\" actions={props.monsterStats.Actions} />\r\n          {props.monsterStats[\"Legendary Actions\"] && (\r\n            <Actions\r\n              name=\"Legendary Actions\"\r\n              actions={props.monsterStats[\"Legendary Actions\"]}\r\n            />\r\n          )}\r\n          {props.monsterStats.Reactions && (\r\n            <Actions name=\"Reactions\" actions={props.monsterStats.Reactions} />\r\n          )}\r\n        </div>\r\n\r\n        <div className={styles.image_half}>\r\n          {props.monsterStats.img_url && (\r\n            <img src={props.monsterStats.img_url} alt=\"monster\"></img>\r\n          )}\r\n          <div\r\n            dangerouslySetInnerHTML={{\r\n              __html: props.monsterStats.Characteristics,\r\n            }}\r\n          ></div>\r\n        </div>\r\n\r\n        <Border />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"," import React from \"react\"\r\n import ReactDOM from \"react-dom\"\r\nimport FullMonsterDescription from \"./FullMonsterDescription/FullMonsterDescription\"\r\nimport BackDrop from \"./BackDrop\"\r\n\r\n\r\n\r\n export default function ModalBack (props) {\r\n    return(\r\n        <React.Fragment>\r\n            {ReactDOM.createPortal(<BackDrop onClick={ props.onClick}></BackDrop>,document.getElementById(\"backdrop-root\"))}\r\n            {ReactDOM.createPortal(<FullMonsterDescription onClick={props.onClick} monsterStats={props.monsterStats}></FullMonsterDescription>,document.getElementById(\"overlay-root\"))}\r\n        </React.Fragment>\r\n    )\r\n }","// extracted by mini-css-extract-plugin\nexport default {\"modal_big_box__style\":\"SuccesfulSubmission_modal_big_box__style__CEnnF\",\"big_text__style\":\"SuccesfulSubmission_big_text__style__8ssXh\",\"text__style\":\"SuccesfulSubmission_text__style__SuHpA\",\"image__style\":\"SuccesfulSubmission_image__style__K3RZW\"};","import styles from \"./SuccesfulSubmission.module.css\";\r\nimport GreenMark from \"../../icons/green_check_mark.png\";\r\nexport default function SuccessfulSubmission(props) {\r\n  return (\r\n    <div onClick={() =>props.onClick(false)} className={styles.modal_big_box__style}>\r\n      <img className={styles.image__style} src={GreenMark} alt=\"check mark\"></img>\r\n      <span className={styles.big_text__style}>{props.title}</span>\r\n      <span className={styles.text__style}>\r\n       {props.text}\r\n      </span>\r\n    </div>\r\n  );\r\n}","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport BackDrop from \"./BackDrop\"\r\nimport SuccessfulSubmission from \"./SuccessfulSubmission\"\r\n\r\n\r\nexport default function ModalSubmitSucces (props) {\r\n   return(\r\n       <React.Fragment>\r\n           {ReactDOM.createPortal(<BackDrop onClick={ props.onClick}></BackDrop>,document.getElementById(\"backdrop-root\"))}\r\n           {ReactDOM.createPortal(<SuccessfulSubmission onClick={props.onClick} monsterStats={props.monsterStats} title={props.title} text={props.text}></SuccessfulSubmission>,document.getElementById(\"overlay-root\"))}\r\n       </React.Fragment>\r\n   )\r\n}","import React, { useContext } from \"react\";\r\nimport { LoginContext } from \"../store/login-context\";\r\nimport { useHttpClient } from \"../hooks/http-hook\";\r\nimport \"./MainMonsterBox.css\";\r\n\r\nexport default function Button(props) {\r\n  const login = useContext(LoginContext);\r\n  // console.log(props.votes);\r\n\r\n  const { sendRequest } = useHttpClient();\r\n  const color = props.votes.indexOf(login.userId) > -1 ? \"grey\" : props.className;\r\n\r\n  const cName = \"button_style \" + color;\r\n\r\n  const Vote = async () => {\r\n    if (props.votes.indexOf(login.userId) > -1) {\r\n    } else {\r\n      props.onClick(props.text, login.userId);\r\n\r\n      try {\r\n        await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + \"/voting\",\r\n          \"POST\",\r\n          JSON.stringify({\r\n            id: props.id,\r\n            uid: login.userId,\r\n            vote: props.text,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n      } catch (err) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>{props.number}</div>\r\n      <button onClick={Vote} className={cName}>\r\n        {props.text}\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport ModalMonsterText from \"../UI/ModalMonsterText\";\r\nimport \"./MainMonsterBox.css\";\r\nimport Button from \"./Button\";\r\nimport useWindowSize from \"../hooks/screensize-hook\";\r\n\r\nexport default function MainMonsterBox(props) {\r\n  const [isClicked, statusChecker] = useState(false);\r\n\r\n  const size = useWindowSize();\r\n  const cName = \"monster_voter_style \" + props.className;\r\n\r\n  const ReadFullText = () => {\r\n    statusChecker(true);\r\n  };\r\n  const removeModal = (status) => {\r\n    statusChecker(status);\r\n  };\r\n  return (\r\n    <>\r\n      <div className={cName}>\r\n        <div className=\"main_monster__info\">\r\n          {props.monsterStats.extraContent ? null : (\r\n            <img\r\n              className=\"image__style\"\r\n              src={`img/${props.monsterStats.meta.type.toLowerCase()}.jpg`}\r\n              alt={props.monsterStats.meta.type}\r\n              onError={({ currentTarget }) => {\r\n                currentTarget.onerror = null;\r\n                currentTarget.src =\r\n                  \"https://st.depositphotos.com/1167801/4561/i/950/depositphotos_45618803-stock-photo-question-mark-background.jpg\";\r\n              }}\r\n            />\r\n          )}\r\n          <div className=\"monster_name__style\">{props.monsterStats.name}</div>\r\n          {size.width > 600 && <div>{props.monsterStats.meta.size}</div>}\r\n          {size.width > 600 && <div>{props.monsterStats.meta.type}</div>}\r\n          {size.width > 600 && <div>{props.monsterStats.meta.alignment}</div>}\r\n          {size.width > 600 && (\r\n            <div>{`${props.monsterStats.Challenge.rating} ${props.monsterStats.Challenge.xp} `}</div>\r\n          )}\r\n          {props.monsterStats.extraContent ? (\r\n            <div>{props.monsterStats.extraContent.readMore}</div>\r\n          ) : (\r\n            <div className=\"read_button__style\" onClick={ReadFullText}>\r\n              Read More\r\n            </div>\r\n          )}\r\n        </div>\r\n        {props.voting === \"yes\" ? (\r\n          <div className=\"voting_booth\">\r\n            {props.monsterStats.extraContent ? (\r\n              <div>{props.monsterStats.extraContent.text}</div>\r\n            ) : (\r\n              <VotinBooth\r\n                votes={props.monsterStats.votes}\r\n                name={props.monsterStats.name}\r\n                id={props.monsterStats._id}\r\n              />\r\n            )}\r\n          </div>\r\n        ) : (\r\n          props.children\r\n        )}\r\n      </div>\r\n      {isClicked ? (\r\n        <ModalMonsterText\r\n          onClick={removeModal}\r\n          monsterStats={props.monsterStats}\r\n        ></ModalMonsterText>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\nconst VotinBooth = (props) => {\r\n  const [voteYes, setVoteYes] = useState(props.votes.yes);\r\n  const [voteNo, setVoteNo] = useState(props.votes.no);\r\n  const checkRemove = (text, id) => {\r\n    if (text === \"Yes\") {\r\n      const votes = voteNo.indexOf(id);\r\n\r\n      if (votes > -1) {\r\n        voteNo.splice(votes, 1);\r\n        setVoteNo([...voteNo]);\r\n      }\r\n\r\n      setVoteYes([...voteYes, id]);\r\n    } else if (text === \"No\") {\r\n      const votes = voteYes.indexOf(id);\r\n      if (votes > -1) {\r\n        voteYes.splice(votes, 1);\r\n        setVoteYes([...voteYes]);\r\n      }\r\n      setVoteNo([...voteNo, id]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={checkRemove}\r\n        name={props.name}\r\n        votes={voteYes}\r\n        number={voteYes.length}\r\n        id={props.id}\r\n        text=\"Yes\"\r\n        className=\"green\"\r\n      />\r\n      <Button\r\n        onClick={checkRemove}\r\n        name={props.name}\r\n        votes={voteNo}\r\n        number={voteNo.length}\r\n        id={props.id}\r\n        text=\"No\"\r\n        className=\"red\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n"],"names":["Legend","props","className","styles","id","text","Edit","to","MyProfile","timer","useHttpClient","isLoading","error","sendRequest","clearError","login","useContext","LoginContext","useState","searchCondition","setSearchCondition","myMonsters","setMyMonsters","deleted","setDeleted","clickDelete","setDeleteClick","creatureToDelete","setCreatureToDelete","limit","setLimit","navigate","useNavigate","now","Date","getTime","useEffect","fetchMonsters","process","JSON","stringify","user","userId","name","resData","startDelete","answer","Authorization","token","LoadingSpinner","as0verlay","ModalError","header","onClick","ModalConfirmation","title","ModalSubmitSucces","length","EmptyPage","message","onKeyUp","event","clearTimeout","setTimeout","target","value","placeholder","map","monster","i","MainMonsterBox","timeforvoting","votes","number","undefined","monsterStats","_id","creatureId","confirmation","ReactDOM","BackDrop","document","getElementById","Actions","dangerouslySetInnerHTML","__html","actions","NameAndAlignment","toUpperCase","meta","size","type","alignment","LifeArmorSpeed","armor","hp","dice","speed","Stats","str","str_mod","dex","dex_mod","con","con_mod","int","int_mod","wis","wis_mod","cha","cha_mod","General","GeneralStats","stat","saving_throw","skill","senses","dmg","res","vul","lang","challenge","rating","xp","StatBlock","Speed","img","img_url","STR","STR_mod","DEX","DEX_mod","CON","CON_mod","INT","INT_mod","WIS","WIS_mod","CHA","CHA_mod","Skills","Senses","Languages","Challenge","Traits","Reactions","Border","FullMonsterDescription","window","getSelection","src","alt","Characteristics","ModalBack","SuccessfulSubmission","GreenMark","Button","cName","indexOf","Vote","uid","vote","isClicked","statusChecker","useWindowSize","extraContent","toLowerCase","onError","currentTarget","onerror","width","readMore","voting","VotinBooth","children","ModalMonsterText","status","yes","voteYes","setVoteYes","no","voteNo","setVoteNo","checkRemove","splice"],"sourceRoot":""}