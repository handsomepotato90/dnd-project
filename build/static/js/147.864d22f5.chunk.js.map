{"version":3,"file":"static/js/147.864d22f5.chunk.js","mappings":"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","sources":["components/UI/EmptyPage.js","webpack://dnd-project/./src/components/UI/FullMonsterDescription/mainstyling.module.css?0cf6","components/UI/FullMonsterDescription/Actions.js","components/UI/FullMonsterDescription/StatBlock/NameAndAlignment.js","components/UI/FullMonsterDescription/StatBlock/LifeArmorSpeed.js","components/UI/FullMonsterDescription/StatBlock/Stats.js","components/UI/FullMonsterDescription/StatBlock/General.js","components/UI/FullMonsterDescription/StatBlock/StatBlock.js","webpack://dnd-project/./src/components/UI/Border.module.css?aec6","components/UI/Border.js","components/UI/FullMonsterDescription/FullMonsterDescription.js","components/UI/ModalMonsterText.js","components/Voting/Button.js","components/Voting/MainMonsterBox.js","webpack://dnd-project/./src/components/Voting/Voting.module.css?9f45","components/Voting/Voting.js"],"sourcesContent":["import \"./EmptyPage.css\"\r\n\r\nexport default function EmptyPage(props) {\r\n  return (\r\n    <div className=\"empty_encounter_box__style\">{props.message}</div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"box_design\":\"mainstyling_box_design__ApoSj\",\"first_half\":\"mainstyling_first_half__M7AY+\",\"second_half\":\"mainstyling_second_half__jHDuo\",\"image_half\":\"mainstyling_image_half__UlMtG\",\"life_stiling\":\"mainstyling_life_stiling__shMQz\",\"leader\":\"mainstyling_leader__66LAX\",\"numbers\":\"mainstyling_numbers__-z7IG\",\"name_box\":\"mainstyling_name_box__7IyQY\",\"name_styling\":\"mainstyling_name_styling__f3oFh\",\"table__styling\":\"mainstyling_table__styling__tkwzK\",\"table__boxes\":\"mainstyling_table__boxes__1vq1g\",\"skills_style\":\"mainstyling_skills_style__OckZm\",\"action__styles\":\"mainstyling_action__styles__omMfM\",\"action_text__styles\":\"mainstyling_action_text__styles__eMzac\"};","import React from \"react\";\r\nimport styles from \"./mainstyling.module.css\"\r\nexport default function Actions(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <div className={styles.action__styles}>{props.name}</div>\r\n      <hr />\r\n      <div className={styles.action_text__styles} dangerouslySetInnerHTML={{ __html: props.actions }}></div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nimport styles from \"../mainstyling.module.css\"\r\n\r\n\r\nexport default function NameAndAlignment (props){\r\n        return(\r\n                <div className={styles.name_box}>\r\n                        <div className={styles.name_styling}>{props.name.toUpperCase()}</div>\r\n                        <div>{`${props.meta.size} ${props.meta.type}, ${props.meta.alignment}`}</div>\r\n                </div>\r\n        )\r\n}","import React from \"react\";\r\n\r\nimport styles from \"../mainstyling.module.css\";\r\n\r\nexport default function LifeArmorSpeed(props) {\r\n  return (\r\n    <div className={styles.picture_divide}>\r\n      <div className={styles.life_stiling}>\r\n        <div>\r\n          <div className={styles.leader}>Armor Class: </div>\r\n          <div className={styles.numbers}>{`${props.armor.value} ${props.armor.type}`}</div>\r\n        </div>\r\n        <div>\r\n          <div className={styles.leader}>Hit Points: </div>\r\n          <div className={styles.numbers}>{`${props.hp.hp} ${props.hp.dice}`}</div>\r\n        </div>\r\n        <div>\r\n          <div className={styles.leader}>Speed: </div>\r\n          <div className={styles.numbers}>{props.speed}</div>\r\n        </div>\r\n      </div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"../mainstyling.module.css\"\r\n\r\nexport default function Stats(props) {\r\n  return (\r\n    <div className={styles.table__styling}>\r\n      <div className={styles.table__boxes}>\r\n        <div>STR</div>\r\n        <div>{props.str}{props.str_mod}</div>\r\n      </div>\r\n      <div className={styles.table__boxes}>\r\n        <div>DEX</div>\r\n        <div>{props.dex}{props.dex_mod}</div>\r\n      </div>\r\n      <div className={styles.table__boxes}>\r\n        <div>CON</div>\r\n        <div>{props.con}{props.con_mod}</div>\r\n      </div>\r\n      <div className={styles.table__boxes}>\r\n        <div>INT</div>\r\n        <div>{props.int}{props.int_mod}</div>\r\n      </div>\r\n      <div className={styles.table__boxes}>\r\n        <div>WIS</div>\r\n        <div>{props.wis}{props.wis_mod}</div>\r\n      </div>\r\n      <div className={styles.table__boxes}>\r\n        <div>CHA</div>\r\n        <div>{props.cha}{props.cha_mod}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"../mainstyling.module.css\";\r\n\r\nexport default function General(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <GeneralStats\r\n        name=\"Saving Throws:\"\r\n        stat={props.saving_throw}\r\n      ></GeneralStats>\r\n      <GeneralStats name=\"Skills:\" stat={props.skill}></GeneralStats>\r\n      <GeneralStats name=\"Senses:\" stat={props.senses}></GeneralStats>\r\n      <GeneralStats\r\n        name=\"Condition Immunities: \"\r\n        stat={props.con}\r\n      ></GeneralStats>\r\n      <GeneralStats name=\"Damage Immunities: \" stat={props.dmg}></GeneralStats>\r\n      <GeneralStats name=\"Damage Resistances: \" stat={props.res}></GeneralStats>\r\n      <GeneralStats\r\n        name=\"Damage Vulnerabilities: \"\r\n        stat={props.vul}\r\n      ></GeneralStats>\r\n      <GeneralStats name=\"Languages: \" stat={props.lang}></GeneralStats>\r\n      <GeneralStats\r\n        name=\"Challenge: \"\r\n        stat={`${props.challenge.rating} ${props.challenge.xp}`}\r\n      ></GeneralStats>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst GeneralStats = (props) => {\r\n  return (\r\n    <div className={styles.table__styling}>\r\n      <div className={styles.skills_style}>{props.name} </div>\r\n      {props.stat}\r\n    </div>\r\n  );\r\n};\r\n","import NameAndAlignment from \"./NameAndAlignment\";\r\nimport LifeArmorSpeed from \"./LifeArmorSpeed\";\r\nimport Stats from \"./Stats\";\r\nimport General from \"./General\";\r\nimport Actions from \"../Actions\";\r\n\r\n\r\nexport default function StatBlock(props) {\r\n  return (\r\n    <>\r\n      <NameAndAlignment\r\n        name={props.monsterStats.name}\r\n        meta={props.monsterStats.meta}\r\n      />\r\n      <hr />\r\n      <LifeArmorSpeed\r\n        armor={props.monsterStats[\"Armor Class\"]}\r\n        hp={props.monsterStats[\"Hit Points\"]}\r\n        speed={props.monsterStats.Speed}\r\n        img={props.monsterStats.img_url}\r\n      />\r\n      <hr />\r\n      <Stats\r\n        str={props.monsterStats.STR}\r\n        str_mod={props.monsterStats.STR_mod}\r\n        dex={props.monsterStats.DEX}\r\n        dex_mod={props.monsterStats.DEX_mod}\r\n        con={props.monsterStats.CON}\r\n        con_mod={props.monsterStats.CON_mod}\r\n        int={props.monsterStats.INT}\r\n        int_mod={props.monsterStats.INT_mod}\r\n        wis={props.monsterStats.WIS}\r\n        wis_mod={props.monsterStats.WIS_mod}\r\n        cha={props.monsterStats.CHA}\r\n        cha_mod={props.monsterStats.CHA_mod}\r\n      />\r\n      <hr />\r\n      <General\r\n        saving_throw={props.monsterStats[\"Saving Throws\"]}\r\n        skill={props.monsterStats.Skills}\r\n        senses={props.monsterStats.Senses}\r\n        con={props.monsterStats[\"Condition Immunities\"]}\r\n        dmg={props.monsterStats[\"Damage Immunities\"]}\r\n        res={props.monsterStats[\"Damage Resistances\"]}\r\n        vul={props.monsterStats[\"Damage Vulnerabilities\"]}\r\n        lang={props.monsterStats.Languages}\r\n        challenge={props.monsterStats.Challenge}\r\n      />\r\n      {props.monsterStats.Traits && <Actions name='Traits' actions={props.monsterStats.Traits} />}\r\n      {props.monsterStats['Bonus Actions'] && <Actions name='Bonus Actions' actions={props.monsterStats['Bonus Actions']} />}\r\n      {props.monsterStats.Reactions && <Actions name='Reactions' actions={props.monsterStats.Reactions} />}\r\n    </>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"border__style\":\"Border_border__style__8I2we\"};","import styles from \"./Border.module.css\"\r\n\r\n export default function Border(){\r\n    return(\r\n\r\n        <div className={styles.border__style}></div>\r\n    )\r\n }","import React from \"react\";\r\nimport styles from \"./mainstyling.module.css\";\r\nimport Actions from \"./Actions\";\r\nimport StatBlock from \"./StatBlock/StatBlock\";\r\nimport Border from \"../Border\";\r\nexport default function FullMonsterDescription(props) {\r\n  const stopClick=()=>{\r\n    if(window.getSelection().type !== \"Range\"){\r\n      props.onClick(false)\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div onClick={stopClick} className={styles.box_design}>\r\n        <Border />\r\n        <div className={styles.first_half}>\r\n          <StatBlock monsterStats={props.monsterStats} />\r\n        </div>\r\n\r\n        <div className={styles.second_half}>\r\n          <Actions name=\"Actions\" actions={props.monsterStats.Actions} />\r\n          {props.monsterStats[\"Legendary Actions\"] && (\r\n            <Actions\r\n              name=\"Legendary Actions\"\r\n              actions={props.monsterStats[\"Legendary Actions\"]}\r\n            />\r\n          )}\r\n          {props.monsterStats.Reactions && (\r\n            <Actions name=\"Reactions\" actions={props.monsterStats.Reactions} />\r\n          )}\r\n        </div>\r\n\r\n        <div className={styles.image_half}>\r\n          {props.monsterStats.img_url && (\r\n            <img src={props.monsterStats.img_url} alt=\"monster\"></img>\r\n          )}\r\n          <div\r\n            dangerouslySetInnerHTML={{\r\n              __html: props.monsterStats.Characteristics,\r\n            }}\r\n          ></div>\r\n        </div>\r\n\r\n        <Border />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"," import React from \"react\"\r\n import ReactDOM from \"react-dom\"\r\nimport FullMonsterDescription from \"./FullMonsterDescription/FullMonsterDescription\"\r\nimport BackDrop from \"./BackDrop\"\r\n\r\n\r\n\r\n export default function ModalBack (props) {\r\n    return(\r\n        <React.Fragment>\r\n            {ReactDOM.createPortal(<BackDrop onClick={ props.onClick}></BackDrop>,document.getElementById(\"backdrop-root\"))}\r\n            {ReactDOM.createPortal(<FullMonsterDescription onClick={props.onClick} monsterStats={props.monsterStats}></FullMonsterDescription>,document.getElementById(\"overlay-root\"))}\r\n        </React.Fragment>\r\n    )\r\n }","import React, { useContext } from \"react\";\r\nimport { LoginContext } from \"../store/login-context\";\r\nimport { useHttpClient } from \"../hooks/http-hook\";\r\nimport \"./MainMonsterBox.css\";\r\n\r\nexport default function Button(props) {\r\n  const login = useContext(LoginContext);\r\n  // console.log(props.votes);\r\n\r\n  const { sendRequest } = useHttpClient();\r\n  const color = props.votes.indexOf(login.userId) > -1 ? \"grey\" : props.className;\r\n\r\n  const cName = \"button_style \" + color;\r\n\r\n  const Vote = async () => {\r\n    if (props.votes.indexOf(login.userId) > -1) {\r\n    } else {\r\n      props.onClick(props.text, login.userId);\r\n\r\n      try {\r\n        await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + \"/voting\",\r\n          \"POST\",\r\n          JSON.stringify({\r\n            id: props.id,\r\n            uid: login.userId,\r\n            vote: props.text,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n      } catch (err) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>{props.number}</div>\r\n      <button onClick={Vote} className={cName}>\r\n        {props.text}\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport ModalMonsterText from \"../UI/ModalMonsterText\";\r\nimport \"./MainMonsterBox.css\";\r\nimport Button from \"./Button\";\r\nimport useWindowSize from \"../hooks/screensize-hook\";\r\n\r\nexport default function MainMonsterBox(props) {\r\n  const [isClicked, statusChecker] = useState(false);\r\n\r\n  const size = useWindowSize();\r\n  const cName = \"monster_voter_style \" + props.className;\r\n\r\n  const ReadFullText = () => {\r\n    statusChecker(true);\r\n  };\r\n  const removeModal = (status) => {\r\n    statusChecker(status);\r\n  };\r\n  return (\r\n    <>\r\n      <div className={cName}>\r\n        <div className=\"main_monster__info\">\r\n          {props.monsterStats.extraContent ? null : (\r\n            <img\r\n              className=\"image__style\"\r\n              src={`img/${props.monsterStats.meta.type.toLowerCase()}.jpg`}\r\n              alt={props.monsterStats.meta.type}\r\n              onError={({ currentTarget }) => {\r\n                currentTarget.onerror = null;\r\n                currentTarget.src =\r\n                  \"https://st.depositphotos.com/1167801/4561/i/950/depositphotos_45618803-stock-photo-question-mark-background.jpg\";\r\n              }}\r\n            />\r\n          )}\r\n          <div className=\"monster_name__style\">{props.monsterStats.name}</div>\r\n          {size.width > 600 && <div>{props.monsterStats.meta.size}</div>}\r\n          {size.width > 600 && <div>{props.monsterStats.meta.type}</div>}\r\n          {size.width > 600 && <div>{props.monsterStats.meta.alignment}</div>}\r\n          {size.width > 600 && (\r\n            <div>{`${props.monsterStats.Challenge.rating} ${props.monsterStats.Challenge.xp} `}</div>\r\n          )}\r\n          {props.monsterStats.extraContent ? (\r\n            <div>{props.monsterStats.extraContent.readMore}</div>\r\n          ) : (\r\n            <div className=\"read_button__style\" onClick={ReadFullText}>\r\n              Read More\r\n            </div>\r\n          )}\r\n        </div>\r\n        {props.voting === \"yes\" ? (\r\n          <div className=\"voting_booth\">\r\n            {props.monsterStats.extraContent ? (\r\n              <div>{props.monsterStats.extraContent.text}</div>\r\n            ) : (\r\n              <VotinBooth\r\n                votes={props.monsterStats.votes}\r\n                name={props.monsterStats.name}\r\n                id={props.monsterStats._id}\r\n              />\r\n            )}\r\n          </div>\r\n        ) : (\r\n          props.children\r\n        )}\r\n      </div>\r\n      {isClicked ? (\r\n        <ModalMonsterText\r\n          onClick={removeModal}\r\n          monsterStats={props.monsterStats}\r\n        ></ModalMonsterText>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\nconst VotinBooth = (props) => {\r\n  const [voteYes, setVoteYes] = useState(props.votes.yes);\r\n  const [voteNo, setVoteNo] = useState(props.votes.no);\r\n  const checkRemove = (text, id) => {\r\n    if (text === \"Yes\") {\r\n      const votes = voteNo.indexOf(id);\r\n\r\n      if (votes > -1) {\r\n        voteNo.splice(votes, 1);\r\n        setVoteNo([...voteNo]);\r\n      }\r\n\r\n      setVoteYes([...voteYes, id]);\r\n    } else if (text === \"No\") {\r\n      const votes = voteYes.indexOf(id);\r\n      if (votes > -1) {\r\n        voteYes.splice(votes, 1);\r\n        setVoteYes([...voteYes]);\r\n      }\r\n      setVoteNo([...voteNo, id]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={checkRemove}\r\n        name={props.name}\r\n        votes={voteYes}\r\n        number={voteYes.length}\r\n        id={props.id}\r\n        text=\"Yes\"\r\n        className=\"green\"\r\n      />\r\n      <Button\r\n        onClick={checkRemove}\r\n        name={props.name}\r\n        votes={voteNo}\r\n        number={voteNo.length}\r\n        id={props.id}\r\n        text=\"No\"\r\n        className=\"red\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"main_head__text_color\":\"Voting_main_head__text_color__6Qv7G\"};","import React, { useState, useEffect } from \"react\";\r\nimport MainMonsterBox from \"./MainMonsterBox\";\r\nimport { useHttpClient } from \"../hooks/http-hook\";\r\nimport styles from \"./Voting.module.css\";\r\nimport EmptyPage from \"../UI/EmptyPage\";\r\n\r\nexport default function Voting() {\r\n  const [monsters, setMonsters] = useState([]);\r\n  const { sendRequest } = useHttpClient();\r\n\r\n  useEffect(() => {\r\n    const fetchMonsters = async () => {\r\n      try {\r\n        const resData = await sendRequest(process.env.REACT_APP_BACKEND_URL + \"/voting\");\r\n        setMonsters([...resData]);\r\n      } catch (err) {}\r\n    };\r\n    fetchMonsters()\r\n  },[sendRequest]);\r\n\r\n\r\n  \r\n  const defaultBoxLabels = {\r\n    name: \"Name\",\r\n\r\n    meta: {\r\n      size: \"Size\",\r\n      type:\"Type\",\r\n      alignment: \"Alignment\", \r\n    },\r\n    Challenge: {rating:\"Challenge\", xp:\"Rating\"},\r\n    extraContent: {\r\n      readMore: \"\",\r\n      positiveVotes: \"\",\r\n      negativeVotes: \"\",\r\n      text: \"Vote\",\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <MainMonsterBox\r\n        className={styles.main_head__text_color}\r\n        monsterStats={defaultBoxLabels}\r\n        voting=\"yes\"\r\n      ></MainMonsterBox>\r\n      {monsters.length < 1 && <EmptyPage message=\"There are no new submitted cretures at this time.\"></EmptyPage>}\r\n      {monsters.map((monster, i) => (\r\n        <MainMonsterBox\r\n          key={i}\r\n          monsterStats={monster}\r\n          voting=\"yes\"\r\n        ></MainMonsterBox>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n"],"names":["EmptyPage","props","className","message","Actions","styles","name","dangerouslySetInnerHTML","__html","actions","NameAndAlignment","toUpperCase","meta","size","type","alignment","LifeArmorSpeed","armor","value","hp","dice","speed","Stats","str","str_mod","dex","dex_mod","con","con_mod","int","int_mod","wis","wis_mod","cha","cha_mod","General","GeneralStats","stat","saving_throw","skill","senses","dmg","res","vul","lang","challenge","rating","xp","StatBlock","monsterStats","Speed","img","img_url","STR","STR_mod","DEX","DEX_mod","CON","CON_mod","INT","INT_mod","WIS","WIS_mod","CHA","CHA_mod","Skills","Senses","Languages","Challenge","Traits","Reactions","Border","FullMonsterDescription","onClick","window","getSelection","src","alt","Characteristics","ModalBack","ReactDOM","BackDrop","document","getElementById","Button","login","useContext","LoginContext","sendRequest","useHttpClient","cName","votes","indexOf","userId","Vote","text","process","JSON","stringify","id","uid","vote","number","MainMonsterBox","useState","isClicked","statusChecker","useWindowSize","extraContent","toLowerCase","onError","currentTarget","onerror","width","readMore","voting","VotinBooth","_id","children","ModalMonsterText","status","yes","voteYes","setVoteYes","no","voteNo","setVoteNo","checkRemove","splice","length","Voting","monsters","setMonsters","useEffect","fetchMonsters","resData","positiveVotes","negativeVotes","map","monster","i"],"sourceRoot":""}