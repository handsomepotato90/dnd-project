{"version":3,"file":"static/js/955.439444e3.chunk.js","mappings":"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","sources":["components/MyProfile/ChangePassword.js","components/MyProfile/ChangeUserName.js","components/MyProfile/ChangeMail.js","components/MyProfile/MyProfileGeneral.js","webpack://dnd-project/./src/components/UI/ConteinerBox.module.css?cb44","components/UI/ConteinerBox.js","webpack://dnd-project/./src/components/UI/Confirmation.module.css?e1ca","components/UI/ModalConfirmation.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport NewsBox from \"../UI/NewsBox\";\r\nimport Input from \"../form-elements/Input\";\r\nimport { useForm } from \"../hooks/form-hook\";\r\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../util/validators\";\r\nimport Button from \"../form-elements/Button\";\r\nimport { useHttpClient } from \"../hooks/http-hook\";\r\nimport ModalError from \"../UI/ModalError\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport ModalConfirmation from \"../UI/ModalConfirmation\";\r\n\r\nexport default function ChangePassword(props) {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [intentionForSubmit, setintentionForSubmit] = useState(false);\r\n  const [passwordError, setpasswordError] = useState(false);\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      password: { value: \"\", isValid: false },\r\n      re_password: { value: \"\", isValid: false },\r\n    },\r\n    true\r\n  );\r\n  const errorHandler = () => {\r\n    clearError(null);\r\n  };\r\n  const passwordErrorHandler = () => {\r\n    setpasswordError(false);\r\n  };\r\n  const confirmedSubmision = async (answer) => {\r\n    if (answer === false) {\r\n      setintentionForSubmit(false);\r\n      return;\r\n    }\r\n    if (\r\n      formState.inputs.password.value !== formState.inputs.re_password.value\r\n    ) {\r\n      setpasswordError(true);\r\n      setintentionForSubmit(false);\r\n\r\n      return;\r\n    }\r\n    try {\r\n      setintentionForSubmit(false);\r\n\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + \"/myProfile/change_password\",\r\n        \"POST\",\r\n        JSON.stringify({\r\n          password: formState.inputs.password.value,\r\n          re_password: formState.inputs.re_password.value,\r\n          uId: props.ids.userId,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n    } catch (err) {}\r\n    props.ids.logout();\r\n  };\r\n  const authSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    setintentionForSubmit(true);\r\n  };\r\n  return (\r\n    <div>\r\n      {isLoading && <LoadingSpinner as0verlay></LoadingSpinner>}\r\n      {error && (\r\n        <ModalError\r\n          header=\"An Error Occurred\"\r\n          error={error}\r\n          onClick={errorHandler}\r\n        ></ModalError>\r\n      )}\r\n      {passwordError && (\r\n        <ModalError\r\n          header=\"Passwords don't match.\"\r\n          // error={error}\r\n          onClick={passwordErrorHandler}\r\n        ></ModalError>\r\n      )}\r\n      {intentionForSubmit && (\r\n        <ModalConfirmation\r\n          title={`Are you shure that you want to Change your Password.`}\r\n          onClick={confirmedSubmision}\r\n        ></ModalConfirmation>\r\n      )}\r\n      {props.children}\r\n      <NewsBox>\r\n        <form onSubmit={authSubmitHandler}>\r\n          <Input\r\n            element=\"input\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            label=\"New Password:\"\r\n            errorText=\"*Password must be at least five(5) characters\"\r\n            validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(6)]}\r\n            onInput={inputHandler}\r\n          ></Input>\r\n          <Input\r\n            element=\"input\"\r\n            id=\"re_password\"\r\n            type=\"password\"\r\n            label=\"Re-Password:\"\r\n            errorText=\"*Password must be at least five(5) characters\"\r\n            validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(6)]}\r\n            onInput={inputHandler}\r\n          ></Input>\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            Change Password\r\n          </Button>\r\n        </form>\r\n      </NewsBox>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useContext } from \"react\";\r\nimport NewsBox from \"../UI/NewsBox\";\r\nimport Input from \"../form-elements/Input\";\r\nimport Button from \"../form-elements/Button\";\r\nimport { useForm } from \"../hooks/form-hook\";\r\nimport ModalError from \"../UI/ModalError\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport ModalConfirmation from \"../UI/ModalConfirmation\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { LoginContext } from \"../store/login-context\";\r\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../util/validators\";\r\n\r\nimport { useHttpClient } from \"../hooks/http-hook\";\r\n\r\nexport default function ChangeUserName(props) {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [intentionForSubmit, setintentionForSubmit] = useState(false);\r\n  const auth = useContext(LoginContext);\r\n\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      u_name: { value: \"\", isValid: false },\r\n    },\r\n    true\r\n  );\r\n  const navigate = useNavigate();\r\n\r\n  const errorHandler = () => {\r\n    clearError(null);\r\n  };\r\n  const confirmedSubmision = async (answer) => {\r\n    if (answer === false) {\r\n      setintentionForSubmit(false);\r\n      return;\r\n    }\r\n    try {\r\n      setintentionForSubmit(false);\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + \"/myProfile/change_username\",\r\n        \"POST\",\r\n        JSON.stringify({\r\n          name: formState.inputs.u_name.value,\r\n          uId: props.ids,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      // navigate(`/`);\r\n      auth.login(auth.userId, formState.inputs.u_name.value, auth.token);\r\n    } catch (err) {}\r\n  };\r\n  const submitUserNameChange = (event) => {\r\n    event.preventDefault();\r\n    setintentionForSubmit(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isLoading && <LoadingSpinner as0verlay></LoadingSpinner>}\r\n      {error && (\r\n        <ModalError\r\n          header=\"An Error Occurred\"\r\n          error={error}\r\n          onClick={errorHandler}\r\n        ></ModalError>\r\n      )}\r\n      {intentionForSubmit && (\r\n        <ModalConfirmation\r\n          title={`Are you shure that you want to Change your User name to ${formState.inputs.u_name.value}.`}\r\n          onClick={confirmedSubmision}\r\n        ></ModalConfirmation>\r\n      )}\r\n      {props.children}\r\n      <NewsBox>\r\n        <form onSubmit={submitUserNameChange}>\r\n          <Input\r\n            element=\"input\"\r\n            id=\"u_name\"\r\n            type=\"text\"\r\n            label=\"Username:\"\r\n            errorText=\"*Username must be at least five(5) characters\"\r\n            validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(3)]}\r\n            onInput={inputHandler}\r\n          ></Input>\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            Change Username\r\n          </Button>\r\n        </form>\r\n      </NewsBox>\r\n    </div>\r\n  );\r\n}\r\n","import NewsBox from \"../UI/NewsBox\";\r\nimport Input from \"../form-elements/Input\";\r\nimport { useForm } from \"../hooks/form-hook\";\r\nimport { VALIDATOR_REQUIRE, VALIDATOR_EMAIL } from \"../util/validators\";\r\nimport Button from \"../form-elements/Button\";\r\nimport { useHttpClient } from \"../hooks/http-hook\";\r\n\r\nexport default function ChangeMail(props) {\r\n  const { sendRequest } = useHttpClient();\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      email: { value: \"\", isValid: false },\r\n    },\r\n    true\r\n  );\r\n\r\n  const authSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + \"/change_mail\",\r\n        \"POST\",\r\n        JSON.stringify({\r\n          email: formState.inputs.email.value,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {props.children}\r\n      <NewsBox>\r\n        <form onSubmit={authSubmitHandler}>\r\n          <Input\r\n            element=\"input\"\r\n            id=\"email\"\r\n            type=\"email\"\r\n            label=\"E-Mail:\"\r\n            validators={[VALIDATOR_EMAIL(), VALIDATOR_REQUIRE()]}\r\n            onInput={inputHandler}\r\n          ></Input>\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            Change E-Mail\r\n          </Button>\r\n        </form>\r\n      </NewsBox>\r\n    </div>\r\n  );\r\n}\r\n","import { useContext } from \"react\";\r\nimport ConteinerBox from \"../UI/ConteinerBox\";\r\nimport ChangePassword from \"./ChangePassword\";\r\nimport ChangeUserName from \"./ChangeUserName\";\r\nimport ChangeMail from \"./ChangeMail\";\r\nimport { LoginContext } from \"../store/login-context\";\r\n\r\nimport \"./MyProfile.css\";\r\n\r\nexport default function MyProfileGeneral() {\r\n  const context = useContext(LoginContext);\r\n\r\n  return (\r\n    <ConteinerBox >\r\n      <ChangeUserName uname={context.username} ids={context.userId}>\r\n        <span className=\"text_box__style\">Change Username</span>\r\n      </ChangeUserName>\r\n      <ChangePassword ids={context}>\r\n        <span className=\"text_box__style\">Change Password</span>\r\n      </ChangePassword>\r\n      <ChangeMail ids={context.userId}>\r\n        <span className=\"text_box__style\">\r\n          Change E-Mail <span className=\"red_text\">(Coming soon)</span>\r\n        </span>\r\n      </ChangeMail>\r\n    </ConteinerBox>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container_box__style\":\"ConteinerBox_container_box__style__C8d7G\",\"fromStart\":\"ConteinerBox_fromStart__FCHBa\",\"fromEnd\":\"ConteinerBox_fromEnd__6CJVd\"};","import styles from \"./ConteinerBox.module.css\";\r\n\r\nexport default function ConteinerBox(props) {\r\n  return (\r\n    <div\r\n      className={`${styles.container_box__style} ${\r\n        props.fromStart && styles.fromStart\r\n      } ${props.fromEnd && styles.fromEnd}`}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Confirmation_btn__lddQ2\",\"modal_big_box__style\":\"Confirmation_modal_big_box__style__a-CgK\",\"confirm__style\":\"Confirmation_confirm__style__ij0BH\",\"reject__style\":\"Confirmation_reject__style__erAtf\"};","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport BackDrop from \"./BackDrop\";\r\nimport styles from \"./Confirmation.module.css\";\r\n\r\nexport default function ModalConfirmation(props) {\r\n  const confirmation = (answer) => {\r\n    props.onClick(answer);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {ReactDOM.createPortal(\r\n        <BackDrop onClick={props.onClick}></BackDrop>,\r\n        document.getElementById(\"backdrop-root\")\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <div className={styles.modal_big_box__style}>\r\n          <span>{props.title}</span>\r\n          <div>\r\n            <button\r\n              className={`${styles.btn} ${styles.confirm__style}`}\r\n              onClick={() => confirmation(true)}\r\n            >\r\n              Yes\r\n            </button>\r\n            <button\r\n              className={`${styles.btn} ${styles.reject__style}`}\r\n              onClick={() => confirmation(false)}\r\n            >\r\n              No\r\n            </button>\r\n          </div>\r\n        </div>,\r\n        document.getElementById(\"overlay-root\")\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n"],"names":["ChangePassword","props","useHttpClient","isLoading","error","sendRequest","clearError","useState","intentionForSubmit","setintentionForSubmit","passwordError","setpasswordError","useForm","password","value","isValid","re_password","formState","inputHandler","confirmedSubmision","answer","inputs","process","JSON","stringify","uId","ids","userId","logout","LoadingSpinner","as0verlay","ModalError","header","onClick","ModalConfirmation","title","children","NewsBox","onSubmit","event","preventDefault","Input","element","id","type","label","errorText","validators","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","onInput","Button","disabled","ChangeUserName","auth","useContext","LoginContext","u_name","useNavigate","name","login","token","ChangeMail","email","authSubmitHandler","VALIDATOR_EMAIL","MyProfileGeneral","context","ConteinerBox","uname","username","className","styles","fromStart","fromEnd","confirmation","ReactDOM","BackDrop","document","getElementById"],"sourceRoot":""}