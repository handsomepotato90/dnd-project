{"version":3,"file":"static/js/400.b23a0e51.chunk.js","mappings":"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","sources":["../node_modules/autobind-decorator/lib/index.js","../node_modules/react-input-range/src/js/index.js","../node_modules/react-input-range/src/js/input-range/default-class-names.js","../node_modules/react-input-range/src/js/input-range/input-range.jsx","../node_modules/react-input-range/src/js/input-range/key-codes.js","../node_modules/react-input-range/src/js/input-range/label.jsx","../node_modules/react-input-range/src/js/input-range/range-prop-type.js","../node_modules/react-input-range/src/js/input-range/slider.jsx","../node_modules/react-input-range/src/js/input-range/track.jsx","../node_modules/react-input-range/src/js/input-range/value-prop-type.js","../node_modules/react-input-range/src/js/input-range/value-transformer.js","../node_modules/react-input-range/src/js/utils/captialize.js","../node_modules/react-input-range/src/js/utils/clamp.js","../node_modules/react-input-range/src/js/utils/distance-to.js","../node_modules/react-input-range/src/js/utils/index.js","../node_modules/react-input-range/src/js/utils/is-defined.js","../node_modules/react-input-range/src/js/utils/is-number.js","../node_modules/react-input-range/src/js/utils/is-object.js","../node_modules/react-input-range/src/js/utils/length.js"],"sourcesContent":["/**\n * @copyright 2015, Andrey Popp <8mayday@gmail.com>\n *\n * The decorator may be used on classes or methods\n * ```\n * @autobind\n * class FullBound {}\n *\n * class PartBound {\n *   @autobind\n *   method () {}\n * }\n * ```\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = autobind;\n\nfunction autobind() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (args.length === 1) {\n    return boundClass.apply(undefined, args);\n  } else {\n    return boundMethod.apply(undefined, args);\n  }\n}\n\n/**\n * Use boundMethod to bind all methods on the target.prototype\n */\nfunction boundClass(target) {\n  // (Using reflect to get all keys including symbols)\n  var keys = undefined;\n  // Use Reflect if exists\n  if (typeof Reflect !== 'undefined' && typeof Reflect.ownKeys === 'function') {\n    keys = Reflect.ownKeys(target.prototype);\n  } else {\n    keys = Object.getOwnPropertyNames(target.prototype);\n    // use symbols if support is provided\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      keys = keys.concat(Object.getOwnPropertySymbols(target.prototype));\n    }\n  }\n\n  keys.forEach(function (key) {\n    // Ignore special case target method\n    if (key === 'constructor') {\n      return;\n    }\n\n    var descriptor = Object.getOwnPropertyDescriptor(target.prototype, key);\n\n    // Only methods need binding\n    if (typeof descriptor.value === 'function') {\n      Object.defineProperty(target.prototype, key, boundMethod(target, key, descriptor));\n    }\n  });\n  return target;\n}\n\n/**\n * Return a descriptor removing the value and returning a getter\n * The getter will return a .bind version of the function\n * and memoize the result against a symbol on the instance\n */\nfunction boundMethod(target, key, descriptor) {\n  var fn = descriptor.value;\n\n  if (typeof fn !== 'function') {\n    throw new Error('@autobind decorator can only be applied to methods not: ' + typeof fn);\n  }\n\n  // In IE11 calling Object.defineProperty has a side-effect of evaluating the\n  // getter for the property which is being replaced. This causes infinite\n  // recursion and an \"Out of stack space\" error.\n  var definingProperty = false;\n\n  return {\n    configurable: true,\n    get: function get() {\n      if (definingProperty || this === target.prototype || this.hasOwnProperty(key)) {\n        return fn;\n      }\n\n      var boundFn = fn.bind(this);\n      definingProperty = true;\n      Object.defineProperty(this, key, {\n        value: boundFn,\n        configurable: true,\n        writable: true\n      });\n      definingProperty = false;\n      return boundFn;\n    }\n  };\n}\nmodule.exports = exports['default'];\n","import InputRange from './input-range/input-range';\n\n/**\n * @ignore\n * @typedef {Object} ClientRect\n * @property {number} height\n * @property {number} left\n * @property {number} top\n * @property {number} width\n */\n\n/**\n * @typedef {Object} InputRangeClassNames\n * @property {string} activeTrack\n * @property {string} disabledInputRange\n * @property {string} inputRange\n * @property {string} labelContainer\n * @property {string} maxLabel\n * @property {string} minLabel\n * @property {string} slider\n * @property {string} sliderContainer\n * @property {string} track\n * @property {string} valueLabel\n */\n\n/**\n * @typedef {Function} LabelFormatter\n * @param {number} value\n * @param {string} type\n * @return {string}\n */\n\n/**\n * @ignore\n * @typedef {Object} Point\n * @property {number} x\n * @property {number} y\n */\n\n/**\n * @typedef {Object} Range\n * @property {number} min - Min value\n * @property {number} max - Max value\n */\n\nexport default InputRange;\n","/**\n * Default CSS class names\n * @ignore\n * @type {InputRangeClassNames}\n */\nconst DEFAULT_CLASS_NAMES = {\n  activeTrack: 'input-range__track input-range__track--active',\n  disabledInputRange: 'input-range input-range--disabled',\n  inputRange: 'input-range',\n  labelContainer: 'input-range__label-container',\n  maxLabel: 'input-range__label input-range__label--max',\n  minLabel: 'input-range__label input-range__label--min',\n  slider: 'input-range__slider',\n  sliderContainer: 'input-range__slider-container',\n  track: 'input-range__track input-range__track--background',\n  valueLabel: 'input-range__label input-range__label--value',\n};\n\nexport default DEFAULT_CLASS_NAMES;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'autobind-decorator';\nimport * as valueTransformer from './value-transformer';\nimport DEFAULT_CLASS_NAMES from './default-class-names';\nimport Label from './label';\nimport rangePropType from './range-prop-type';\nimport valuePropType from './value-prop-type';\nimport Slider from './slider';\nimport Track from './track';\nimport { captialize, distanceTo, isDefined, isObject, length } from '../utils';\nimport { DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, UP_ARROW } from './key-codes';\n\n/**\n * A React component that allows users to input numeric values within a range\n * by dragging its sliders.\n */\nexport default class InputRange extends React.Component {\n  /**\n   * @ignore\n   * @override\n   * @return {Object}\n   */\n  static get propTypes() {\n    return {\n      allowSameValues: PropTypes.bool,\n      ariaLabelledby: PropTypes.string,\n      ariaControls: PropTypes.string,\n      classNames: PropTypes.objectOf(PropTypes.string),\n      disabled: PropTypes.bool,\n      draggableTrack: PropTypes.bool,\n      formatLabel: PropTypes.func,\n      maxValue: rangePropType,\n      minValue: rangePropType,\n      name: PropTypes.string,\n      onChangeStart: PropTypes.func,\n      onChange: PropTypes.func.isRequired,\n      onChangeComplete: PropTypes.func,\n      step: PropTypes.number,\n      value: valuePropType,\n    };\n  }\n\n  /**\n   * @ignore\n   * @override\n   * @return {Object}\n   */\n  static get defaultProps() {\n    return {\n      allowSameValues: false,\n      classNames: DEFAULT_CLASS_NAMES,\n      disabled: false,\n      maxValue: 10,\n      minValue: 0,\n      step: 1,\n    };\n  }\n\n  /**\n   * @param {Object} props\n   * @param {boolean} [props.allowSameValues]\n   * @param {string} [props.ariaLabelledby]\n   * @param {string} [props.ariaControls]\n   * @param {InputRangeClassNames} [props.classNames]\n   * @param {boolean} [props.disabled = false]\n   * @param {Function} [props.formatLabel]\n   * @param {number|Range} [props.maxValue = 10]\n   * @param {number|Range} [props.minValue = 0]\n   * @param {string} [props.name]\n   * @param {string} props.onChange\n   * @param {Function} [props.onChangeComplete]\n   * @param {Function} [props.onChangeStart]\n   * @param {number} [props.step = 1]\n   * @param {number|Range} props.value\n   */\n  constructor(props) {\n    super(props);\n\n    /**\n     * @private\n     * @type {?number}\n     */\n    this.startValue = null;\n\n    /**\n     * @private\n     * @type {?Component}\n     */\n    this.node = null;\n\n    /**\n     * @private\n     * @type {?Component}\n     */\n    this.trackNode = null;\n\n    /**\n     * @private\n     * @type {bool}\n     */\n    this.isSliderDragging = false;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.lastKeyMoved = null;\n  }\n\n  /**\n   * @ignore\n   * @override\n   * @return {void}\n   */\n  componentWillUnmount() {\n    this.removeDocumentMouseUpListener();\n    this.removeDocumentTouchEndListener();\n  }\n\n  /**\n   * Return the CSS class name of the component\n   * @private\n   * @return {string}\n   */\n  getComponentClassName() {\n    if (!this.props.disabled) {\n      return this.props.classNames.inputRange;\n    }\n\n    return this.props.classNames.disabledInputRange;\n  }\n\n  /**\n   * Return the bounding rect of the track\n   * @private\n   * @return {ClientRect}\n   */\n  getTrackClientRect() {\n    return this.trackNode.getClientRect();\n  }\n\n  /**\n   * Return the slider key closest to a point\n   * @private\n   * @param {Point} position\n   * @return {string}\n   */\n  getKeyByPosition(position) {\n    const values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n    const positions = valueTransformer.getPositionsFromValues(values, this.props.minValue, this.props.maxValue, this.getTrackClientRect());\n\n    if (this.isMultiValue()) {\n      const distanceToMin = distanceTo(position, positions.min);\n      const distanceToMax = distanceTo(position, positions.max);\n\n      if (distanceToMin < distanceToMax) {\n        return 'min';\n      }\n    }\n\n    return 'max';\n  }\n\n  /**\n   * Return all the slider keys\n   * @private\n   * @return {string[]}\n   */\n  getKeys() {\n    if (this.isMultiValue()) {\n      return ['min', 'max'];\n    }\n\n    return ['max'];\n  }\n\n  /**\n   * Return true if the difference between the new and the current value is\n   * greater or equal to the step amount of the component\n   * @private\n   * @param {Range} values\n   * @return {boolean}\n   */\n  hasStepDifference(values) {\n    const currentValues = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n\n    return length(values.min, currentValues.min) >= this.props.step ||\n           length(values.max, currentValues.max) >= this.props.step;\n  }\n\n  /**\n   * Return true if the component accepts a min and max value\n   * @private\n   * @return {boolean}\n   */\n  isMultiValue() {\n    return isObject(this.props.value);\n  }\n\n  /**\n   * Return true if the range is within the max and min value of the component\n   * @private\n   * @param {Range} values\n   * @return {boolean}\n   */\n  isWithinRange(values) {\n    if (this.isMultiValue()) {\n      return values.min >= this.props.minValue &&\n             values.max <= this.props.maxValue &&\n             this.props.allowSameValues\n              ? values.min <= values.max\n              : values.min < values.max;\n    }\n\n    return values.max >= this.props.minValue && values.max <= this.props.maxValue;\n  }\n\n  /**\n   * Return true if the new value should trigger a render\n   * @private\n   * @param {Range} values\n   * @return {boolean}\n   */\n  shouldUpdate(values) {\n    return this.isWithinRange(values) && this.hasStepDifference(values);\n  }\n\n  /**\n   * Update the position of a slider\n   * @private\n   * @param {string} key\n   * @param {Point} position\n   * @return {void}\n   */\n  updatePosition(key, position) {\n    const values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n    const positions = valueTransformer.getPositionsFromValues(values, this.props.minValue, this.props.maxValue, this.getTrackClientRect());\n\n    positions[key] = position;\n    this.lastKeyMoved = key;\n\n    this.updatePositions(positions);\n  }\n\n  /**\n   * Update the positions of multiple sliders\n   * @private\n   * @param {Object} positions\n   * @param {Point} positions.min\n   * @param {Point} positions.max\n   * @return {void}\n   */\n  updatePositions(positions) {\n    const values = {\n      min: valueTransformer.getValueFromPosition(positions.min, this.props.minValue, this.props.maxValue, this.getTrackClientRect()),\n      max: valueTransformer.getValueFromPosition(positions.max, this.props.minValue, this.props.maxValue, this.getTrackClientRect()),\n    };\n\n    const transformedValues = {\n      min: valueTransformer.getStepValueFromValue(values.min, this.props.step),\n      max: valueTransformer.getStepValueFromValue(values.max, this.props.step),\n    };\n\n    this.updateValues(transformedValues);\n  }\n\n  /**\n   * Update the value of a slider\n   * @private\n   * @param {string} key\n   * @param {number} value\n   * @return {void}\n   */\n  updateValue(key, value) {\n    const values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n\n    values[key] = value;\n\n    this.updateValues(values);\n  }\n\n  /**\n   * Update the values of multiple sliders\n   * @private\n   * @param {Range|number} values\n   * @return {void}\n   */\n  updateValues(values) {\n    if (!this.shouldUpdate(values)) {\n      return;\n    }\n\n    this.props.onChange(this.isMultiValue() ? values : values.max);\n  }\n\n  /**\n   * Increment the value of a slider by key name\n   * @private\n   * @param {string} key\n   * @return {void}\n   */\n  incrementValue(key) {\n    const values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n    const value = values[key] + this.props.step;\n\n    this.updateValue(key, value);\n  }\n\n  /**\n   * Decrement the value of a slider by key name\n   * @private\n   * @param {string} key\n   * @return {void}\n   */\n  decrementValue(key) {\n    const values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n    const value = values[key] - this.props.step;\n\n    this.updateValue(key, value);\n  }\n\n  /**\n   * Listen to mouseup event\n   * @private\n   * @return {void}\n   */\n  addDocumentMouseUpListener() {\n    this.removeDocumentMouseUpListener();\n    this.node.ownerDocument.addEventListener('mouseup', this.handleMouseUp);\n  }\n\n  /**\n   * Listen to touchend event\n   * @private\n   * @return {void}\n   */\n  addDocumentTouchEndListener() {\n    this.removeDocumentTouchEndListener();\n    this.node.ownerDocument.addEventListener('touchend', this.handleTouchEnd);\n  }\n\n  /**\n   * Stop listening to mouseup event\n   * @private\n   * @return {void}\n   */\n  removeDocumentMouseUpListener() {\n    this.node.ownerDocument.removeEventListener('mouseup', this.handleMouseUp);\n  }\n\n  /**\n   * Stop listening to touchend event\n   * @private\n   * @return {void}\n   */\n  removeDocumentTouchEndListener() {\n    this.node.ownerDocument.removeEventListener('touchend', this.handleTouchEnd);\n  }\n\n  /**\n   * Handle any \"mousemove\" event received by the slider\n   * @private\n   * @param {SyntheticEvent} event\n   * @param {string} key\n   * @return {void}\n   */\n  @autobind\n  handleSliderDrag(event, key) {\n    if (this.props.disabled) {\n      return;\n    }\n\n    const position = valueTransformer.getPositionFromEvent(event, this.getTrackClientRect());\n    this.isSliderDragging = true;\n    requestAnimationFrame(() => this.updatePosition(key, position));\n  }\n\n  /**\n   * Handle any \"mousemove\" event received by the track\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleTrackDrag(event, prevEvent) {\n    if (this.props.disabled || !this.props.draggableTrack || this.isSliderDragging) {\n      return;\n    }\n\n    const {\n      maxValue,\n      minValue,\n      value: { max, min },\n    } = this.props;\n\n    const position = valueTransformer.getPositionFromEvent(event, this.getTrackClientRect());\n    const value = valueTransformer.getValueFromPosition(position, minValue, maxValue, this.getTrackClientRect());\n    const stepValue = valueTransformer.getStepValueFromValue(value, this.props.step);\n\n    const prevPosition = valueTransformer.getPositionFromEvent(prevEvent, this.getTrackClientRect());\n    const prevValue = valueTransformer.getValueFromPosition(prevPosition, minValue, maxValue, this.getTrackClientRect());\n    const prevStepValue = valueTransformer.getStepValueFromValue(prevValue, this.props.step);\n\n    const offset = prevStepValue - stepValue;\n\n    const transformedValues = {\n      min: min - offset,\n      max: max - offset,\n    };\n\n    this.updateValues(transformedValues);\n  }\n\n  /**\n   * Handle any \"keydown\" event received by the slider\n   * @private\n   * @param {SyntheticEvent} event\n   * @param {string} key\n   * @return {void}\n   */\n  @autobind\n  handleSliderKeyDown(event, key) {\n    if (this.props.disabled) {\n      return;\n    }\n\n    switch (event.keyCode) {\n    case LEFT_ARROW:\n    case DOWN_ARROW:\n      event.preventDefault();\n      this.decrementValue(key);\n      break;\n\n    case RIGHT_ARROW:\n    case UP_ARROW:\n      event.preventDefault();\n      this.incrementValue(key);\n      break;\n\n    default:\n      break;\n    }\n  }\n\n  /**\n   * Handle any \"mousedown\" event received by the track\n   * @private\n   * @param {SyntheticEvent} event\n   * @param {Point} position\n   * @return {void}\n   */\n  @autobind\n  handleTrackMouseDown(event, position) {\n    if (this.props.disabled) {\n      return;\n    }\n\n    const {\n      maxValue,\n      minValue,\n      value: { max, min },\n    } = this.props;\n\n    event.preventDefault();\n\n    const value = valueTransformer.getValueFromPosition(position, minValue, maxValue, this.getTrackClientRect());\n    const stepValue = valueTransformer.getStepValueFromValue(value, this.props.step);\n\n    if (!this.props.draggableTrack || stepValue > max || stepValue < min) {\n      this.updatePosition(this.getKeyByPosition(position), position);\n    }\n  }\n\n  /**\n   * Handle the start of any mouse/touch event\n   * @private\n   * @return {void}\n   */\n  @autobind\n  handleInteractionStart() {\n    if (this.props.onChangeStart) {\n      this.props.onChangeStart(this.props.value);\n    }\n\n    if (this.props.onChangeComplete && !isDefined(this.startValue)) {\n      this.startValue = this.props.value;\n    }\n  }\n\n  /**\n   * Handle the end of any mouse/touch event\n   * @private\n   * @return {void}\n   */\n  @autobind\n  handleInteractionEnd() {\n    if (this.isSliderDragging) {\n      this.isSliderDragging = false;\n    }\n\n    if (!this.props.onChangeComplete || !isDefined(this.startValue)) {\n      return;\n    }\n\n    if (this.startValue !== this.props.value) {\n      this.props.onChangeComplete(this.props.value);\n    }\n\n    this.startValue = null;\n  }\n\n  /**\n   * Handle any \"keydown\" event received by the component\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleKeyDown(event) {\n    this.handleInteractionStart(event);\n  }\n\n  /**\n   * Handle any \"keyup\" event received by the component\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleKeyUp(event) {\n    this.handleInteractionEnd(event);\n  }\n\n  /**\n   * Handle any \"mousedown\" event received by the component\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleMouseDown(event) {\n    this.handleInteractionStart(event);\n    this.addDocumentMouseUpListener();\n  }\n\n  /**\n   * Handle any \"mouseup\" event received by the component\n   * @private\n   * @param {SyntheticEvent} event\n   */\n  @autobind\n  handleMouseUp(event) {\n    this.handleInteractionEnd(event);\n    this.removeDocumentMouseUpListener();\n  }\n\n  /**\n   * Handle any \"touchstart\" event received by the component\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleTouchStart(event) {\n    this.handleInteractionStart(event);\n    this.addDocumentTouchEndListener();\n  }\n\n  /**\n   * Handle any \"touchend\" event received by the component\n   * @private\n   * @param {SyntheticEvent} event\n   */\n  @autobind\n  handleTouchEnd(event) {\n    this.handleInteractionEnd(event);\n    this.removeDocumentTouchEndListener();\n  }\n\n  /**\n   * Return JSX of sliders\n   * @private\n   * @return {JSX.Element}\n   */\n  renderSliders() {\n    const values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n    const percentages = valueTransformer.getPercentagesFromValues(values, this.props.minValue, this.props.maxValue);\n    const keys = this.props.allowSameValues &&\n      this.lastKeyMoved === 'min'\n      ? this.getKeys().reverse()\n      : this.getKeys();\n\n    return keys.map((key) => {\n      const value = values[key];\n      const percentage = percentages[key];\n\n      let { maxValue, minValue } = this.props;\n\n      if (key === 'min') {\n        maxValue = values.max;\n      } else {\n        minValue = values.min;\n      }\n\n      const slider = (\n        <Slider\n          ariaLabelledby={this.props.ariaLabelledby}\n          ariaControls={this.props.ariaControls}\n          classNames={this.props.classNames}\n          formatLabel={this.props.formatLabel}\n          key={key}\n          maxValue={maxValue}\n          minValue={minValue}\n          onSliderDrag={this.handleSliderDrag}\n          onSliderKeyDown={this.handleSliderKeyDown}\n          percentage={percentage}\n          type={key}\n          value={value} />\n      );\n\n      return slider;\n    });\n  }\n\n  /**\n   * Return JSX of hidden inputs\n   * @private\n   * @return {JSX.Element}\n   */\n  renderHiddenInputs() {\n    if (!this.props.name) {\n      return [];\n    }\n\n    const isMultiValue = this.isMultiValue();\n    const values = valueTransformer.getValueFromProps(this.props, isMultiValue);\n\n    return this.getKeys().map((key) => {\n      const value = values[key];\n      const name = isMultiValue ? `${this.props.name}${captialize(key)}` : this.props.name;\n\n      return (\n        <input key={key} type=\"hidden\" name={name} value={value} />\n      );\n    });\n  }\n\n  /**\n   * @ignore\n   * @override\n   * @return {JSX.Element}\n   */\n  render() {\n    const componentClassName = this.getComponentClassName();\n    const values = valueTransformer.getValueFromProps(this.props, this.isMultiValue());\n    const percentages = valueTransformer.getPercentagesFromValues(values, this.props.minValue, this.props.maxValue);\n\n    return (\n      <div\n        aria-disabled={this.props.disabled}\n        ref={(node) => { this.node = node; }}\n        className={componentClassName}\n        onKeyDown={this.handleKeyDown}\n        onKeyUp={this.handleKeyUp}\n        onMouseDown={this.handleMouseDown}\n        onTouchStart={this.handleTouchStart}>\n        <Label\n          classNames={this.props.classNames}\n          formatLabel={this.props.formatLabel}\n          type=\"min\">\n          {this.props.minValue}\n        </Label>\n\n        <Track\n          classNames={this.props.classNames}\n          draggableTrack={this.props.draggableTrack}\n          ref={(trackNode) => { this.trackNode = trackNode; }}\n          percentages={percentages}\n          onTrackDrag={this.handleTrackDrag}\n          onTrackMouseDown={this.handleTrackMouseDown}>\n\n          {this.renderSliders()}\n        </Track>\n\n        <Label\n          classNames={this.props.classNames}\n          formatLabel={this.props.formatLabel}\n          type=\"max\">\n          {this.props.maxValue}\n        </Label>\n\n        {this.renderHiddenInputs()}\n      </div>\n    );\n  }\n}\n","/** @ignore */\nexport const DOWN_ARROW = 40;\n\n/** @ignore */\nexport const LEFT_ARROW = 37;\n\n/** @ignore */\nexport const RIGHT_ARROW = 39;\n\n/** @ignore */\nexport const UP_ARROW = 38;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * @ignore\n * @param {Object} props\n * @param {InputRangeClassNames} props.classNames\n * @param {Function} props.formatLabel\n * @param {string} props.type\n */\nexport default function Label(props) {\n  const labelValue = props.formatLabel ? props.formatLabel(props.children, props.type) : props.children;\n\n  return (\n    <span className={props.classNames[`${props.type}Label`]}>\n      <span className={props.classNames.labelContainer}>\n        {labelValue}\n      </span>\n    </span>\n  );\n}\n\n/**\n * @type {Object}\n * @property {Function} children\n * @property {Function} classNames\n * @property {Function} formatLabel\n * @property {Function} type\n */\nLabel.propTypes = {\n  children: PropTypes.node.isRequired,\n  classNames: PropTypes.objectOf(PropTypes.string).isRequired,\n  formatLabel: PropTypes.func,\n  type: PropTypes.string.isRequired,\n};\n","import { isNumber } from '../utils';\n\n/**\n * @ignore\n * @param {Object} props - React component props\n * @return {?Error} Return Error if validation fails\n */\nexport default function rangePropType(props) {\n  const { maxValue, minValue } = props;\n\n  if (!isNumber(minValue) || !isNumber(maxValue)) {\n    return new Error('\"minValue\" and \"maxValue\" must be a number');\n  }\n\n  if (minValue >= maxValue) {\n    return new Error('\"minValue\" must be smaller than \"maxValue\"');\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'autobind-decorator';\nimport Label from './label';\n\n/**\n * @ignore\n */\nexport default class Slider extends React.Component {\n  /**\n   * Accepted propTypes of Slider\n   * @override\n   * @return {Object}\n   * @property {Function} ariaLabelledby\n   * @property {Function} ariaControls\n   * @property {Function} className\n   * @property {Function} formatLabel\n   * @property {Function} maxValue\n   * @property {Function} minValue\n   * @property {Function} onSliderDrag\n   * @property {Function} onSliderKeyDown\n   * @property {Function} percentage\n   * @property {Function} type\n   * @property {Function} value\n   */\n  static get propTypes() {\n    return {\n      ariaLabelledby: PropTypes.string,\n      ariaControls: PropTypes.string,\n      classNames: PropTypes.objectOf(PropTypes.string).isRequired,\n      formatLabel: PropTypes.func,\n      maxValue: PropTypes.number,\n      minValue: PropTypes.number,\n      onSliderDrag: PropTypes.func.isRequired,\n      onSliderKeyDown: PropTypes.func.isRequired,\n      percentage: PropTypes.number.isRequired,\n      type: PropTypes.string.isRequired,\n      value: PropTypes.number.isRequired,\n    };\n  }\n\n  /**\n   * @param {Object} props\n   * @param {string} [props.ariaLabelledby]\n   * @param {string} [props.ariaControls]\n   * @param {InputRangeClassNames} props.classNames\n   * @param {Function} [props.formatLabel]\n   * @param {number} [props.maxValue]\n   * @param {number} [props.minValue]\n   * @param {Function} props.onSliderKeyDown\n   * @param {Function} props.onSliderDrag\n   * @param {number} props.percentage\n   * @param {number} props.type\n   * @param {number} props.value\n   */\n  constructor(props) {\n    super(props);\n\n    /**\n     * @private\n     * @type {?Component}\n     */\n    this.node = null;\n  }\n\n  /**\n   * @ignore\n   * @override\n   * @return {void}\n   */\n  componentWillUnmount() {\n    this.removeDocumentMouseMoveListener();\n    this.removeDocumentMouseUpListener();\n    this.removeDocumentTouchEndListener();\n    this.removeDocumentTouchMoveListener();\n  }\n\n  /**\n   * @private\n   * @return {Object}\n   */\n  getStyle() {\n    const perc = (this.props.percentage || 0) * 100;\n    const style = {\n      position: 'absolute',\n      left: `${perc}%`,\n    };\n\n    return style;\n  }\n\n  /**\n   * Listen to mousemove event\n   * @private\n   * @return {void}\n   */\n  addDocumentMouseMoveListener() {\n    this.removeDocumentMouseMoveListener();\n    this.node.ownerDocument.addEventListener('mousemove', this.handleMouseMove);\n  }\n\n  /**\n   * Listen to mouseup event\n   * @private\n   * @return {void}\n   */\n  addDocumentMouseUpListener() {\n    this.removeDocumentMouseUpListener();\n    this.node.ownerDocument.addEventListener('mouseup', this.handleMouseUp);\n  }\n\n  /**\n   * Listen to touchmove event\n   * @private\n   * @return {void}\n   */\n  addDocumentTouchMoveListener() {\n    this.removeDocumentTouchMoveListener();\n    this.node.ownerDocument.addEventListener('touchmove', this.handleTouchMove);\n  }\n\n  /**\n   * Listen to touchend event\n   * @private\n   * @return {void}\n   */\n  addDocumentTouchEndListener() {\n    this.removeDocumentTouchEndListener();\n    this.node.ownerDocument.addEventListener('touchend', this.handleTouchEnd);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  removeDocumentMouseMoveListener() {\n    this.node.ownerDocument.removeEventListener('mousemove', this.handleMouseMove);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  removeDocumentMouseUpListener() {\n    this.node.ownerDocument.removeEventListener('mouseup', this.handleMouseUp);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  removeDocumentTouchMoveListener() {\n    this.node.ownerDocument.removeEventListener('touchmove', this.handleTouchMove);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  removeDocumentTouchEndListener() {\n    this.node.ownerDocument.removeEventListener('touchend', this.handleTouchEnd);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  @autobind\n  handleMouseDown() {\n    this.addDocumentMouseMoveListener();\n    this.addDocumentMouseUpListener();\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  @autobind\n  handleMouseUp() {\n    this.removeDocumentMouseMoveListener();\n    this.removeDocumentMouseUpListener();\n  }\n\n  /**\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleMouseMove(event) {\n    this.props.onSliderDrag(event, this.props.type);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  @autobind\n  handleTouchStart() {\n    this.addDocumentTouchEndListener();\n    this.addDocumentTouchMoveListener();\n  }\n\n  /**\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleTouchMove(event) {\n    this.props.onSliderDrag(event, this.props.type);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  @autobind\n  handleTouchEnd() {\n    this.removeDocumentTouchMoveListener();\n    this.removeDocumentTouchEndListener();\n  }\n\n  /**\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleKeyDown(event) {\n    this.props.onSliderKeyDown(event, this.props.type);\n  }\n\n  /**\n   * @override\n   * @return {JSX.Element}\n   */\n  render() {\n    const style = this.getStyle();\n\n    return (\n      <span\n        className={this.props.classNames.sliderContainer}\n        ref={(node) => { this.node = node; }}\n        style={style}>\n        <Label\n          classNames={this.props.classNames}\n          formatLabel={this.props.formatLabel}\n          type=\"value\">\n          {this.props.value}\n        </Label>\n\n        <div\n          aria-labelledby={this.props.ariaLabelledby}\n          aria-controls={this.props.ariaControls}\n          aria-valuemax={this.props.maxValue}\n          aria-valuemin={this.props.minValue}\n          aria-valuenow={this.props.value}\n          className={this.props.classNames.slider}\n          draggable=\"false\"\n          onKeyDown={this.handleKeyDown}\n          onMouseDown={this.handleMouseDown}\n          onTouchStart={this.handleTouchStart}\n          role=\"slider\"\n          tabIndex=\"0\" />\n      </span>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'autobind-decorator';\n\n/**\n * @ignore\n */\nexport default class Track extends React.Component {\n  /**\n   * @override\n   * @return {Object}\n   * @property {Function} children\n   * @property {Function} classNames\n   * @property {Boolean} draggableTrack\n   * @property {Function} onTrackDrag\n   * @property {Function} onTrackMouseDown\n   * @property {Function} percentages\n   */\n  static get propTypes() {\n    return {\n      children: PropTypes.node.isRequired,\n      classNames: PropTypes.objectOf(PropTypes.string).isRequired,\n      draggableTrack: PropTypes.bool,\n      onTrackDrag: PropTypes.func,\n      onTrackMouseDown: PropTypes.func.isRequired,\n      percentages: PropTypes.objectOf(PropTypes.number).isRequired,\n    };\n  }\n\n  /**\n   * @param {Object} props\n   * @param {InputRangeClassNames} props.classNames\n   * @param {Boolean} props.draggableTrack\n   * @param {Function} props.onTrackDrag\n   * @param {Function} props.onTrackMouseDown\n   * @param {number} props.percentages\n   */\n  constructor(props) {\n    super(props);\n\n    /**\n     * @private\n     * @type {?Component}\n     */\n    this.node = null;\n    this.trackDragEvent = null;\n  }\n\n  /**\n   * @private\n   * @return {ClientRect}\n   */\n  getClientRect() {\n    return this.node.getBoundingClientRect();\n  }\n\n  /**\n   * @private\n   * @return {Object} CSS styles\n   */\n  getActiveTrackStyle() {\n    const width = `${(this.props.percentages.max - this.props.percentages.min) * 100}%`;\n    const left = `${this.props.percentages.min * 100}%`;\n\n    return { left, width };\n  }\n\n  /**\n   * Listen to mousemove event\n   * @private\n   * @return {void}\n   */\n  addDocumentMouseMoveListener() {\n    this.removeDocumentMouseMoveListener();\n    this.node.ownerDocument.addEventListener('mousemove', this.handleMouseMove);\n  }\n\n  /**\n   * Listen to mouseup event\n   * @private\n   * @return {void}\n   */\n  addDocumentMouseUpListener() {\n    this.removeDocumentMouseUpListener();\n    this.node.ownerDocument.addEventListener('mouseup', this.handleMouseUp);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  removeDocumentMouseMoveListener() {\n    this.node.ownerDocument.removeEventListener('mousemove', this.handleMouseMove);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  removeDocumentMouseUpListener() {\n    this.node.ownerDocument.removeEventListener('mouseup', this.handleMouseUp);\n  }\n\n  /**\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleMouseMove(event) {\n    if (!this.props.draggableTrack) {\n      return;\n    }\n\n    if (this.trackDragEvent !== null) {\n      this.props.onTrackDrag(event, this.trackDragEvent);\n    }\n\n    this.trackDragEvent = event;\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  @autobind\n  handleMouseUp() {\n    if (!this.props.draggableTrack) {\n      return;\n    }\n\n    this.removeDocumentMouseMoveListener();\n    this.removeDocumentMouseUpListener();\n    this.trackDragEvent = null;\n  }\n\n  /**\n   * @private\n   * @param {SyntheticEvent} event - User event\n   */\n  @autobind\n  handleMouseDown(event) {\n    const clientX = event.touches ? event.touches[0].clientX : event.clientX;\n    const trackClientRect = this.getClientRect();\n    const position = {\n      x: clientX - trackClientRect.left,\n      y: 0,\n    };\n\n    this.props.onTrackMouseDown(event, position);\n\n    if (this.props.draggableTrack) {\n      this.addDocumentMouseMoveListener();\n      this.addDocumentMouseUpListener();\n    }\n  }\n\n  /**\n   * @private\n   * @param {SyntheticEvent} event - User event\n   */\n  @autobind\n  handleTouchStart(event) {\n    event.preventDefault();\n\n    this.handleMouseDown(event);\n  }\n\n  /**\n   * @override\n   * @return {JSX.Element}\n   */\n  render() {\n    const activeTrackStyle = this.getActiveTrackStyle();\n\n    return (\n      <div\n        className={this.props.classNames.track}\n        onMouseDown={this.handleMouseDown}\n        onTouchStart={this.handleTouchStart}\n        ref={(node) => { this.node = node; }}>\n        <div\n          style={activeTrackStyle}\n          className={this.props.classNames.activeTrack} />\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","import { isNumber, isObject } from '../utils';\n\n/**\n * @ignore\n * @param {Object} props\n * @return {?Error} Return Error if validation fails\n */\nexport default function valuePropType(props, propName) {\n  const { maxValue, minValue } = props;\n  const value = props[propName];\n\n  if (!isNumber(value) && (!isObject(value) || !isNumber(value.min) || !isNumber(value.max))) {\n    return new Error(`\"${propName}\" must be a number or a range object`);\n  }\n\n  if (isNumber(value) && (value < minValue || value > maxValue)) {\n    return new Error(`\"${propName}\" must be in between \"minValue\" and \"maxValue\"`);\n  }\n\n  if (isObject(value) && (value.min < minValue || value.min > maxValue || value.max < minValue || value.max > maxValue)) {\n    return new Error(`\"${propName}\" must be in between \"minValue\" and \"maxValue\"`);\n  }\n}\n","import { clamp } from '../utils';\n\n/**\n * Convert a point into a percentage value\n * @ignore\n * @param {Point} position\n * @param {ClientRect} clientRect\n * @return {number} Percentage value\n */\nexport function getPercentageFromPosition(position, clientRect) {\n  const length = clientRect.width;\n  const sizePerc = position.x / length;\n\n  return sizePerc || 0;\n}\n\n/**\n * Convert a point into a model value\n * @ignore\n * @param {Point} position\n * @param {number} minValue\n * @param {number} maxValue\n * @param {ClientRect} clientRect\n * @return {number}\n */\nexport function getValueFromPosition(position, minValue, maxValue, clientRect) {\n  const sizePerc = getPercentageFromPosition(position, clientRect);\n  const valueDiff = maxValue - minValue;\n\n  return minValue + (valueDiff * sizePerc);\n}\n\n/**\n * Convert props into a range value\n * @ignore\n * @param {Object} props\n * @param {boolean} isMultiValue\n * @return {Range}\n */\nexport function getValueFromProps(props, isMultiValue) {\n  if (isMultiValue) {\n    return { ...props.value };\n  }\n\n  return {\n    min: props.minValue,\n    max: props.value,\n  };\n}\n\n/**\n * Convert a model value into a percentage value\n * @ignore\n * @param {number} value\n * @param {number} minValue\n * @param {number} maxValue\n * @return {number}\n */\nexport function getPercentageFromValue(value, minValue, maxValue) {\n  const validValue = clamp(value, minValue, maxValue);\n  const valueDiff = maxValue - minValue;\n  const valuePerc = (validValue - minValue) / valueDiff;\n\n  return valuePerc || 0;\n}\n\n/**\n * Convert model values into percentage values\n * @ignore\n * @param {Range} values\n * @param {number} minValue\n * @param {number} maxValue\n * @return {Range}\n */\nexport function getPercentagesFromValues(values, minValue, maxValue) {\n  return {\n    min: getPercentageFromValue(values.min, minValue, maxValue),\n    max: getPercentageFromValue(values.max, minValue, maxValue),\n  };\n}\n\n/**\n * Convert a value into a point\n * @ignore\n * @param {number} value\n * @param {number} minValue\n * @param {number} maxValue\n * @param {ClientRect} clientRect\n * @return {Point} Position\n */\nexport function getPositionFromValue(value, minValue, maxValue, clientRect) {\n  const length = clientRect.width;\n  const valuePerc = getPercentageFromValue(value, minValue, maxValue);\n  const positionValue = valuePerc * length;\n\n  return {\n    x: positionValue,\n    y: 0,\n  };\n}\n\n/**\n * Convert a range of values into points\n * @ignore\n * @param {Range} values\n * @param {number} minValue\n * @param {number} maxValue\n * @param {ClientRect} clientRect\n * @return {Range}\n */\nexport function getPositionsFromValues(values, minValue, maxValue, clientRect) {\n  return {\n    min: getPositionFromValue(values.min, minValue, maxValue, clientRect),\n    max: getPositionFromValue(values.max, minValue, maxValue, clientRect),\n  };\n}\n\n/**\n * Convert an event into a point\n * @ignore\n * @param {Event} event\n * @param {ClientRect} clientRect\n * @return {Point}\n */\nexport function getPositionFromEvent(event, clientRect) {\n  const length = clientRect.width;\n  const { clientX } = event.touches ? event.touches[0] : event;\n\n  return {\n    x: clamp(clientX - clientRect.left, 0, length),\n    y: 0,\n  };\n}\n\n/**\n * Convert a value into a step value\n * @ignore\n * @param {number} value\n * @param {number} valuePerStep\n * @return {number}\n */\nexport function getStepValueFromValue(value, valuePerStep) {\n  return Math.round(value / valuePerStep) * valuePerStep;\n}\n","/**\n * Captialize a string\n * @ignore\n * @param {string} string\n * @return {string}\n */\nexport default function captialize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n","/**\n * Clamp a value between a min and max value\n * @ignore\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\nexport default function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n","/**\n * Calculate the distance between pointA and pointB\n * @ignore\n * @param {Point} pointA\n * @param {Point} pointB\n * @return {number} Distance\n */\nexport default function distanceTo(pointA, pointB) {\n  const xDiff = (pointB.x - pointA.x) ** 2;\n  const yDiff = (pointB.y - pointA.y) ** 2;\n\n  return Math.sqrt(xDiff + yDiff);\n}\n","export { default as captialize } from './captialize';\nexport { default as clamp } from './clamp';\nexport { default as distanceTo } from './distance-to';\nexport { default as isDefined } from './is-defined';\nexport { default as isNumber } from './is-number';\nexport { default as isObject } from './is-object';\nexport { default as length } from './length';\n","/**\n * Check if a value is defined\n * @ignore\n * @param {*} value\n * @return {boolean}\n */\nexport default function isDefined(value) {\n  return value !== undefined && value !== null;\n}\n","/**\n * Check if a value is a number\n * @ignore\n * @param {*} value\n * @return {boolean}\n */\nexport default function isNumber(value) {\n  return typeof value === 'number';\n}\n","/**\n * Check if a value is an object\n * @ignore\n * @param {*} value\n * @return {boolean}\n */\nexport default function isObject(value) {\n  return value !== null && typeof value === 'object';\n}\n","/**\n * Calculate the absolute difference between two numbers\n * @ignore\n * @param {number} numA\n * @param {number} numB\n * @return {number}\n */\nexport default function length(numA, numB) {\n  return Math.abs(numA - numB);\n}\n"],"names":["boundClass","target","keys","undefined","Reflect","ownKeys","prototype","Object","getOwnPropertyNames","getOwnPropertySymbols","concat","forEach","key","descriptor","getOwnPropertyDescriptor","value","defineProperty","boundMethod","fn","Error","definingProperty","configurable","get","this","hasOwnProperty","boundFn","bind","writable","exports","_len","arguments","length","args","Array","_key","apply","module","activeTrack","disabledInputRange","inputRange","labelContainer","maxLabel","minLabel","slider","sliderContainer","track","valueLabel","valueTransformer","InputRange","props","_classCallCheck","_this","startValue","node","trackNode","isSliderDragging","lastKeyMoved","allowSameValues","_propTypes2","bool","ariaLabelledby","string","ariaControls","classNames","objectOf","disabled","draggableTrack","formatLabel","func","maxValue","minValue","name","onChangeStart","onChange","isRequired","onChangeComplete","step","number","removeDocumentMouseUpListener","removeDocumentTouchEndListener","getClientRect","position","values","getValueFromProps","isMultiValue","positions","getPositionsFromValues","getTrackClientRect","distanceTo","min","max","currentValues","isObject","isWithinRange","hasStepDifference","updatePositions","getValueFromPosition","transformedValues","getStepValueFromValue","updateValues","shouldUpdate","updateValue","ownerDocument","addEventListener","handleMouseUp","handleTouchEnd","removeEventListener","event","getPositionFromEvent","requestAnimationFrame","_this2","updatePosition","prevEvent","stepValue","prevPosition","prevValue","offset","keyCode","preventDefault","decrementValue","incrementValue","getKeyByPosition","isDefined","handleInteractionStart","handleInteractionEnd","addDocumentMouseUpListener","addDocumentTouchEndListener","percentages","getPercentagesFromValues","getKeys","reverse","map","percentage","_this3","_react2","onSliderDrag","handleSliderDrag","onSliderKeyDown","handleSliderKeyDown","type","_this4","captialize","componentClassName","getComponentClassName","ref","_this5","className","onKeyDown","handleKeyDown","onKeyUp","handleKeyUp","onMouseDown","handleMouseDown","onTouchStart","handleTouchStart","onTrackDrag","handleTrackDrag","onTrackMouseDown","handleTrackMouseDown","renderSliders","renderHiddenInputs","Component","DOWN_ARROW","LEFT_ARROW","RIGHT_ARROW","UP_ARROW","Label","labelValue","children","propTypes","isNumber","Slider","removeDocumentMouseMoveListener","removeDocumentTouchMoveListener","left","handleMouseMove","handleTouchMove","addDocumentMouseMoveListener","addDocumentTouchMoveListener","style","getStyle","draggable","role","tabIndex","Track","trackDragEvent","getBoundingClientRect","width","x","touches","clientX","y","activeTrackStyle","getActiveTrackStyle","propName","getPercentageFromPosition","clientRect","sizePerc","getPercentageFromValue","getPositionFromValue","clamp","valuePerStep","Math","round","charAt","toUpperCase","slice","pointA","pointB","xDiff","yDiff","sqrt","default","numA","numB","abs"],"sourceRoot":""}