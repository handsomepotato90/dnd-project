{"version":3,"file":"static/js/897.075a2bd3.chunk.js","mappings":"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","sources":["webpack://dnd-project/./src/components/MyEncounters/EncounterUI/EncounterUI.module.css?e001","components/MyEncounters/EncounterUI/AutoRollInitiative.js","components/MyEncounters/EncounterUI/Initiative.js","components/MyEncounters/EncounterModals.js","webpack://dnd-project/./src/components/UI/PopUpOnClick.module.css?d5c3","components/UI/PopUpOnClick.js","components/MyEncounters/EncounterUI/HealthPool.js","webpack://dnd-project/./src/components/UI/FullMonsterDescription/mainstyling.module.css?0cf6","components/UI/FullMonsterDescription/Actions.js","components/UI/FullMonsterDescription/StatBlock/NameAndAlignment.js","components/UI/FullMonsterDescription/StatBlock/LifeArmorSpeed.js","components/UI/FullMonsterDescription/StatBlock/Stats.js","components/UI/FullMonsterDescription/StatBlock/General.js","components/UI/FullMonsterDescription/StatBlock/StatBlock.js","webpack://dnd-project/./src/components/UI/Border.module.css?aec6","components/UI/Border.js","components/UI/FullMonsterDescription/FullMonsterDescription.js","components/UI/ModalMonsterText.js","components/MyEncounters/MonsterBattleBox.js","webpack://dnd-project/./src/components/UI/ConteinerBox.module.css?cb44","components/UI/ConteinerBox.js","components/UI/ImageComponent.js","webpack://dnd-project/./src/components/MyEncounters/BattleScreen.module.css?cb5e"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"auto_roll_button__style\":\"EncounterUI_auto_roll_button__style__AA0T-\"};","import styles from \"./EncounterUI.module.css\"\r\n\r\nexport default function AutoRollInitiative(props){\r\n    const dexterityModifire = parseInt(props.dexMod.replace(/[()]/g, ''), 10);\r\n    const rollInitiative = () =>{\r\n        const randomRoll = Math.floor(Math.random() * 20)\r\n        props.onClick(randomRoll+ 1 + dexterityModifire )\r\n    }\r\n    return(\r\n        <span className={`${styles.auto_roll_button__style}`} onClick={rollInitiative}>Auto Roll</span>\r\n        )\r\n}","import React, { useState,useEffect } from \"react\";\r\nimport AutoRollInitiative from \"./AutoRollInitiative\";\r\n\r\nimport styles from \"../BattleScreen.module.css\";\r\n\r\nexport default function Initiative(props) {\r\n  const [initiative, initiativeHanler] = useState(props.initiative);\r\n\r\n  const initiativeSetter = (event) => {\r\n    initiativeHanler(event.target.value);\r\n  };\r\n  const randomInitiative = (init) => {\r\n    initiativeHanler(init);\r\n  };\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <span className={styles.text__style}>INITIATIVE:</span>\r\n      <div className={styles.input__wraper}>\r\n        <input\r\n          // placeholder={initiative}\r\n          onChange={initiativeSetter}\r\n          className={` ${styles.input__style}`}\r\n          value={initiative}\r\n        ></input>\r\n      </div>\r\n      {props.dexMod ? (\r\n        <AutoRollInitiative\r\n          dexMod={props.dexMod}\r\n          onClick={randomInitiative}\r\n        ></AutoRollInitiative>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import styles from \"./BattleScreen.module.css\";\r\n\r\nexport default function ImmunityesModal(props) {\r\n  return (\r\n    <div\r\n      className={styles.modal__style}\r\n      style={{ width: `${props.width}`, height: `${props.height}` }}\r\n    >\r\n      {\" \"}\r\n      <div className={styles.resandvun_text__style}>\r\n        <span className={styles.red_condition}>Damage Immunity: </span>\r\n        <span className={`${styles.condition__txt__style}`}>{props.dmgI}</span>\r\n      </div>\r\n      <div className={styles.resandvun_text__style}>\r\n        <span className={styles.red_condition}>Condition Immunity:</span>\r\n        <span className={`${styles.condition__txt__style} `}>{props.conI}</span>\r\n      </div>\r\n      <div className={styles.resandvun_text__style}>\r\n        <span className={styles.orange_condition}>Damage Resistance:</span>\r\n        <span className={`${styles.condition__txt__style} `}>{props.dmgR}</span>\r\n      </div>\r\n      <div className={styles.resandvun_text__style}>\r\n        <span className={styles.green_condition}>Damage Vulnerability:</span>\r\n        <span className={`${styles.condition__txt__style} `}>{props.dmgV}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport function StatsModal(props) {\r\n  return (\r\n    <div\r\n      className={styles.modal__style}\r\n      style={{ width: `${props.width}`, height: `${props.height}` }}\r\n    >\r\n      <div class={styles.detail__style}>\r\n        <span className=\"overflowing\">\r\n          <span>Name: </span>\r\n          {props.stats.name}\r\n        </span>\r\n        <span>\r\n          <span>Size: </span>\r\n          {props.stats.meta.size}\r\n        </span>\r\n        <span>\r\n          <span>Type: </span>\r\n          {props.stats.meta.type}\r\n        </span>\r\n        <span className=\"overflowing\">\r\n          <span>Alignment: </span>\r\n          {props.stats.meta.alignment}\r\n        </span>\r\n        <span>\r\n          <span>CR: </span>\r\n          {props.stats[\"Challenge\"].rating}\r\n          {props.stats[\"Challenge\"].xp}\r\n        </span>\r\n        <span>\r\n          <span>AC: </span>\r\n          {props.stats[\"Armor Class\"].value}\r\n          {props.stats[\"Armor Class\"].type}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport function DeathModal(props) {\r\n  return (\r\n    <div\r\n      className={styles.modal__style}\r\n      style={{ width: `${props.width}`, height: `${props.height}` }}\r\n    >\r\n      <span className={styles.death_modal_text___style}>DEAD</span>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"popup__flyout\":\"PopUpOnClick_popup__flyout__S+WBq\",\"popup__style\":\"PopUpOnClick_popup__style__9VZEe\",\"arrow__wrapper\":\"PopUpOnClick_arrow__wrapper__xLTXE\",\"arrow__style\":\"PopUpOnClick_arrow__style__Lxcnd\"};","import { useEffect, useRef } from \"react\";\r\n\r\nimport styles from \"./PopUpOnClick.module.css\";\r\n\r\nexport default function PopUpOnClick(props) {\r\n  const componentRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (componentRef.current && !componentRef.current.contains(event.target)) {\r\n        props.onBlur(false);\r\n    }\r\n\r\n  };\r\n  return (\r\n    <div\r\n      ref={componentRef}\r\n      className={`${styles.popup__style} ${styles.popup__flyout}`}\r\n    >\r\n      <div\r\n        className={styles.arrow__wrapper}\r\n        style={{ bottom: \"calc(100% - 100px)\", right: \"100%\" }}\r\n      >\r\n        <div\r\n          className={styles.arrow__style}\r\n          style={{\r\n            borderTopColor: \"transparent\",\r\n            borderRightColor: \"transparent\",\r\n          }}\r\n        ></div>\r\n      </div>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport PopUpOnClick from \"../../UI/PopUpOnClick\";\r\nimport styles from \"../BattleScreen.module.css\";\r\n\r\nexport default function HealthPool(props) {\r\n  const [health, healthHandler] = useState(props.hp);\r\n  const [calculate, calculateHanler] = useState(0);\r\n  const [playerMaxHp, setPcMaxHealth] = useState(props.hp);\r\n  const [clikedPlayerMaxHealtInput, setCliket] = useState(false);\r\n\r\n  const hpTarget = !props.player ? props.hp : playerMaxHp;\r\n\r\n  const givePlayerHp = () => {\r\n    setCliket(true);\r\n  };\r\n  const setPcHp = (value) => {\r\n    setCliket(value);\r\n  };\r\n  const givePlayerHealth = (event) => {\r\n    healthHandler(event.target.value);\r\n    setPcMaxHealth(event.target.value);\r\n  };\r\n\r\n  const calculateThis = (event) => {\r\n    calculateHanler(event.target.value);\r\n  };\r\n  const addNow = () => {\r\n    healthHandler(parseInt(health) + parseInt(calculate));\r\n\r\n    if (parseInt(health) + parseInt(calculate) > hpTarget) {\r\n      healthHandler(hpTarget);\r\n    }\r\n    calculateHanler(0);\r\n  };\r\n  const subtractNow = () => {\r\n    healthHandler(parseInt(health) - parseInt(calculate));\r\n\r\n    if (parseInt(health) - parseInt(calculate) <= 0) {\r\n      props.onChange(true);\r\n    }\r\n    calculateHanler(0);\r\n  };\r\n  return (\r\n    <>\r\n      <div\r\n        className={`${styles.text__style} ${styles.health__styling}`}\r\n        onClick={givePlayerHp}\r\n      >\r\n        <span>HP: </span>\r\n        {\r\n          <span>\r\n            {`${health} / `}\r\n            <span>{hpTarget}</span>\r\n          </span>\r\n        }\r\n      </div>\r\n      {/* <div> */}\r\n      {clikedPlayerMaxHealtInput && (\r\n        <PopUpOnClick onBlur={setPcHp}>\r\n          <button\r\n            onClick={addNow}\r\n            disabled={calculate === 0 ? true : false}\r\n            className={`button ${styles.text__style} ${\r\n              calculate === 0 ? `${styles.disabled_button}` : styles.heal_button\r\n            }`}\r\n          >\r\n            Heal\r\n          </button>\r\n          <div className={styles.input__wraper}>\r\n            <input\r\n              onChange={calculateThis}\r\n              className={` ${styles.input__style}`}\r\n              value={calculate}\r\n            ></input>\r\n          </div>\r\n          <button\r\n            onClick={subtractNow}\r\n            disabled={calculate === 0 ? true : false}\r\n            className={`button ${styles.text__style} ${\r\n              calculate === 0\r\n                ? `${styles.disabled_button}`\r\n                : styles.damage_button\r\n            }`}\r\n          >\r\n            Damage\r\n          </button>\r\n\r\n          {props.player && (\r\n            <>\r\n              <span className={`${styles.text__style}`}>MAX HP OVERRIDE</span>\r\n              <div className={styles.input__wraper}>\r\n                <input\r\n                  onChange={givePlayerHealth}\r\n                  value={playerMaxHp}\r\n                  className={`${styles.input__style}`}\r\n                ></input>\r\n              </div>\r\n            </>\r\n          )}\r\n        </PopUpOnClick>\r\n      )}\r\n\r\n      {/* </div> */}\r\n    </>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"box_design\":\"mainstyling_box_design__ApoSj\",\"first_half\":\"mainstyling_first_half__M7AY+\",\"second_half\":\"mainstyling_second_half__jHDuo\",\"image_half\":\"mainstyling_image_half__UlMtG\",\"life_stiling\":\"mainstyling_life_stiling__shMQz\",\"leader\":\"mainstyling_leader__66LAX\",\"numbers\":\"mainstyling_numbers__-z7IG\",\"name_box\":\"mainstyling_name_box__7IyQY\",\"name_styling\":\"mainstyling_name_styling__f3oFh\",\"table__styling\":\"mainstyling_table__styling__tkwzK\",\"table__boxes\":\"mainstyling_table__boxes__1vq1g\",\"skills_style\":\"mainstyling_skills_style__OckZm\",\"action__styles\":\"mainstyling_action__styles__omMfM\",\"action_text__styles\":\"mainstyling_action_text__styles__eMzac\"};","import React from \"react\";\r\nimport styles from \"./mainstyling.module.css\"\r\nexport default function Actions(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <div className={styles.action__styles}>{props.name}</div>\r\n      <hr />\r\n      <div className={styles.action_text__styles} dangerouslySetInnerHTML={{ __html: props.actions }}></div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nimport styles from \"../mainstyling.module.css\"\r\n\r\n\r\nexport default function NameAndAlignment (props){\r\n        return(\r\n                <div className={styles.name_box}>\r\n                        <div className={styles.name_styling}>{props.name.toUpperCase()}</div>\r\n                        <div>{`${props.meta.size} ${props.meta.type}, ${props.meta.alignment}`}</div>\r\n                </div>\r\n        )\r\n}","import React from \"react\";\r\n\r\nimport styles from \"../mainstyling.module.css\";\r\n\r\nexport default function LifeArmorSpeed(props) {\r\n  return (\r\n    <div className={styles.picture_divide}>\r\n      <div className={styles.life_stiling}>\r\n        <div>\r\n          <div className={styles.leader}>Armor Class: </div>\r\n          <div className={styles.numbers}>{`${props.armor.value} ${props.armor.type}`}</div>\r\n        </div>\r\n        <div>\r\n          <div className={styles.leader}>Hit Points: </div>\r\n          <div className={styles.numbers}>{`${props.hp.hp} ${props.hp.dice}`}</div>\r\n        </div>\r\n        <div>\r\n          <div className={styles.leader}>Speed: </div>\r\n          <div className={styles.numbers}>{props.speed}</div>\r\n        </div>\r\n      </div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"../mainstyling.module.css\"\r\n\r\nexport default function Stats(props) {\r\n  return (\r\n    <div className={styles.table__styling}>\r\n      <div className={styles.table__boxes}>\r\n        <div>STR</div>\r\n        <div>{props.str}{props.str_mod}</div>\r\n      </div>\r\n      <div className={styles.table__boxes}>\r\n        <div>DEX</div>\r\n        <div>{props.dex}{props.dex_mod}</div>\r\n      </div>\r\n      <div className={styles.table__boxes}>\r\n        <div>CON</div>\r\n        <div>{props.con}{props.con_mod}</div>\r\n      </div>\r\n      <div className={styles.table__boxes}>\r\n        <div>INT</div>\r\n        <div>{props.int}{props.int_mod}</div>\r\n      </div>\r\n      <div className={styles.table__boxes}>\r\n        <div>WIS</div>\r\n        <div>{props.wis}{props.wis_mod}</div>\r\n      </div>\r\n      <div className={styles.table__boxes}>\r\n        <div>CHA</div>\r\n        <div>{props.cha}{props.cha_mod}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"../mainstyling.module.css\";\r\n\r\nexport default function General(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <GeneralStats\r\n        name=\"Saving Throws:\"\r\n        stat={props.saving_throw}\r\n      ></GeneralStats>\r\n      <GeneralStats name=\"Skills:\" stat={props.skill}></GeneralStats>\r\n      <GeneralStats name=\"Senses:\" stat={props.senses}></GeneralStats>\r\n      <GeneralStats\r\n        name=\"Condition Immunities: \"\r\n        stat={props.con}\r\n      ></GeneralStats>\r\n      <GeneralStats name=\"Damage Immunities: \" stat={props.dmg}></GeneralStats>\r\n      <GeneralStats name=\"Damage Resistances: \" stat={props.res}></GeneralStats>\r\n      <GeneralStats\r\n        name=\"Damage Vulnerabilities: \"\r\n        stat={props.vul}\r\n      ></GeneralStats>\r\n      <GeneralStats name=\"Languages: \" stat={props.lang}></GeneralStats>\r\n      <GeneralStats\r\n        name=\"Challenge: \"\r\n        stat={`${props.challenge.rating} ${props.challenge.xp}`}\r\n      ></GeneralStats>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst GeneralStats = (props) => {\r\n  return (\r\n    <div className={styles.table__styling}>\r\n      <div className={styles.skills_style}>{props.name} </div>\r\n      {props.stat}\r\n    </div>\r\n  );\r\n};\r\n","import NameAndAlignment from \"./NameAndAlignment\";\r\nimport LifeArmorSpeed from \"./LifeArmorSpeed\";\r\nimport Stats from \"./Stats\";\r\nimport General from \"./General\";\r\nimport Actions from \"../Actions\";\r\n\r\n\r\nexport default function StatBlock(props) {\r\n  return (\r\n    <>\r\n      <NameAndAlignment\r\n        name={props.monsterStats.name}\r\n        meta={props.monsterStats.meta}\r\n      />\r\n      <hr />\r\n      <LifeArmorSpeed\r\n        armor={props.monsterStats[\"Armor Class\"]}\r\n        hp={props.monsterStats[\"Hit Points\"]}\r\n        speed={props.monsterStats.Speed}\r\n        img={props.monsterStats.img_url}\r\n      />\r\n      <hr />\r\n      <Stats\r\n        str={props.monsterStats.STR}\r\n        str_mod={props.monsterStats.STR_mod}\r\n        dex={props.monsterStats.DEX}\r\n        dex_mod={props.monsterStats.DEX_mod}\r\n        con={props.monsterStats.CON}\r\n        con_mod={props.monsterStats.CON_mod}\r\n        int={props.monsterStats.INT}\r\n        int_mod={props.monsterStats.INT_mod}\r\n        wis={props.monsterStats.WIS}\r\n        wis_mod={props.monsterStats.WIS_mod}\r\n        cha={props.monsterStats.CHA}\r\n        cha_mod={props.monsterStats.CHA_mod}\r\n      />\r\n      <hr />\r\n      <General\r\n        saving_throw={props.monsterStats[\"Saving Throws\"]}\r\n        skill={props.monsterStats.Skills}\r\n        senses={props.monsterStats.Senses}\r\n        con={props.monsterStats[\"Condition Immunities\"]}\r\n        dmg={props.monsterStats[\"Damage Immunities\"]}\r\n        res={props.monsterStats[\"Damage Resistances\"]}\r\n        vul={props.monsterStats[\"Damage Vulnerabilities\"]}\r\n        lang={props.monsterStats.Languages}\r\n        challenge={props.monsterStats.Challenge}\r\n      />\r\n      {props.monsterStats.Traits && <Actions name='Traits' actions={props.monsterStats.Traits} />}\r\n      {props.monsterStats['Bonus Actions'] && <Actions name='Bonus Actions' actions={props.monsterStats['Bonus Actions']} />}\r\n      {/* {props.monsterStats.Reactions && <Actions name='Reactions' actions={props.monsterStats.Reactions} />} */}\r\n    </>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"border__style\":\"Border_border__style__8I2we\"};","import styles from \"./Border.module.css\"\r\n\r\n export default function Border(){\r\n    return(\r\n\r\n        <div className={styles.border__style}></div>\r\n    )\r\n }","import React from \"react\";\r\nimport styles from \"./mainstyling.module.css\";\r\nimport Actions from \"./Actions\";\r\nimport StatBlock from \"./StatBlock/StatBlock\";\r\nimport Border from \"../Border\";\r\nexport default function FullMonsterDescription(props) {\r\n  const stopClick=()=>{\r\n    if(window.getSelection().type !== \"Range\"){\r\n      props.onClick(false)\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div onClick={stopClick} className={styles.box_design}>\r\n        <Border />\r\n        <div className={styles.first_half}>\r\n          <StatBlock monsterStats={props.monsterStats} />\r\n        </div>\r\n\r\n        <div className={styles.second_half}>\r\n          <Actions name=\"Actions\" actions={props.monsterStats.Actions} />\r\n          {props.monsterStats[\"Legendary Actions\"] && (\r\n            <Actions\r\n              name=\"Legendary Actions\"\r\n              actions={props.monsterStats[\"Legendary Actions\"]}\r\n            />\r\n          )}\r\n          {props.monsterStats.Reactions && (\r\n            <Actions name=\"Reactions\" actions={props.monsterStats.Reactions} />\r\n          )}\r\n        </div>\r\n\r\n        <div className={styles.image_half}>\r\n          {props.monsterStats.img_url && (\r\n            <img src={props.monsterStats.img_url} alt=\"monster\"></img>\r\n          )}\r\n          <div\r\n            dangerouslySetInnerHTML={{\r\n              __html: props.monsterStats.Characteristics,\r\n            }}\r\n          ></div>\r\n        </div>\r\n\r\n        <Border />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"," import React from \"react\"\r\n import ReactDOM from \"react-dom\"\r\nimport FullMonsterDescription from \"./FullMonsterDescription/FullMonsterDescription\"\r\nimport BackDrop from \"./BackDrop\"\r\n\r\n\r\n\r\n export default function ModalBack (props) {\r\n    return(\r\n        <React.Fragment>\r\n            {ReactDOM.createPortal(<BackDrop onClick={ props.onClick}></BackDrop>,document.getElementById(\"backdrop-root\"))}\r\n            {ReactDOM.createPortal(<FullMonsterDescription onClick={props.onClick} monsterStats={props.monsterStats}></FullMonsterDescription>,document.getElementById(\"overlay-root\"))}\r\n        </React.Fragment>\r\n    )\r\n }","import React, { useState } from \"react\";\r\nimport ImmunityesModal, { DeathModal, StatsModal } from \"./EncounterModals\";\r\nimport HealthPool from \"./EncounterUI/HealthPool\";\r\nimport Initiative from \"./EncounterUI/Initiative\";\r\nimport ModalMonsterText from \"../UI/ModalMonsterText\";\r\nimport ImageComponent from \"../UI/ImageComponent\";\r\n\r\nimport styles from \"./BattleScreen.module.css\";\r\n\r\n//if you are providing 2 children elements (boolean):\r\n// childrenTopAndBottom={false}\r\n//\r\n// If you need the side bar with the stats and health calculations (boolean):\r\n// battleSideBar={false}\r\n//\r\n//creature object you need to provide\r\n// stats={monster}\r\n//\r\n//Modal with the stats of the creature (Name,AC, etc.)\r\n// modalStats={true}\r\n//\r\n//Size for the element\r\n// width=\"250px\"\r\n// height=\"250px\"\r\n\r\nexport default function MonsterBattleBox(props) {\r\n  const [isShown, setIsShown] = useState(false);\r\n  const [isDead, setDead] = useState(false);\r\n  const [isRead, setReading] = useState(false);\r\n  const [playerArmorClass, setPlayerArmorClass] = useState(true);\r\n  const [playerGivenAc, setPlayerGivenAc] = useState(0);\r\n\r\n  // const openInputToGiveAc = () => {\r\n  //   setPlayerArmorClass(false);\r\n  // };\r\n  const rememberAcValue = () => {\r\n    setPlayerArmorClass(true);\r\n  };\r\n  const giveArmorClass = (event) => {\r\n    setPlayerGivenAc(event.target.value);\r\n  };\r\n  const deathTraker = (state) => {\r\n    setDead(state);\r\n    setIsShown(false);\r\n  };\r\n\r\n  const renderModal = () => {\r\n    setReading(true);\r\n  };\r\n  const removeModal = (state) => {\r\n    setReading(state);\r\n  };\r\n  return (\r\n    <div className={styles.battle_box}>\r\n      {!props.stats.level && isRead && (\r\n        <ModalMonsterText\r\n          onClick={removeModal}\r\n          monsterStats={props.stats}\r\n        ></ModalMonsterText>\r\n      )}\r\n\r\n      {!props.stats.level ? (\r\n        <div style={{ textAlign: \"right\" }}>\r\n          {/*######################## MONSTER NAME ####################### */}\r\n          {props.childrenTopAndBottom ? props.children[0] : props.children}\r\n\r\n          <div\r\n            onClick={renderModal}\r\n            className={`${styles.encounter_box__style} `}\r\n            style={{ width: `${props.width}`, height: `${props.height}` }}\r\n            onMouseEnter={() => setIsShown(true)}\r\n            onMouseLeave={() => setIsShown(false)}\r\n          >\r\n            {(isDead && (\r\n              <DeathModal\r\n                width={props.width}\r\n                height={props.height}\r\n              ></DeathModal>\r\n            )) ||\r\n              (isShown && !props.modalStats ? (\r\n                <ImmunityesModal\r\n                  width={props.width}\r\n                  height={props.height}\r\n                  conI={props.stats[\"Condition Immunities\"]}\r\n                  dmgI={props.stats[\"Damage Immunities\"]}\r\n                  dmgR={props.stats[\"Damage Resistances\"]}\r\n                  dmgV={props.stats[\"Damage Vulnerabilities\"]}\r\n                ></ImmunityesModal>\r\n              ) : (\r\n                isShown &&\r\n                props.modalStats && (\r\n                  <StatsModal\r\n                    stats={props.stats}\r\n                    width={props.width}\r\n                    height={props.height}\r\n                  ></StatsModal>\r\n                )\r\n              ))}\r\n            <ImageComponent\r\n              size=\"large\"\r\n              src={props.stats.img_url}\r\n              alt=\"monster\"\r\n            ></ImageComponent>\r\n          </div>\r\n          {props.childrenTopAndBottom ? props.children[1] : null}\r\n        </div>\r\n      ) : (\r\n        //PC battle box\r\n        <div\r\n          className={styles.encounter_box__style}\r\n          style={{ width: `${props.width}`, height: `${props.height}` }}\r\n        >\r\n          {isDead && (\r\n            <DeathModal width={props.width} height={props.height}></DeathModal>\r\n          )}\r\n\r\n          <div\r\n            className={styles.content_pc__style}\r\n            style={{ width: `${props.width}`, height: `${props.height}` }}\r\n          >\r\n            <input\r\n              className={styles.input_pc__style}\r\n              placeholder=\" PC NAME\"\r\n            ></input>\r\n            <span></span>\r\n            <span className={styles.level__style}>\r\n              Level:{props.stats.level}\r\n            </span>\r\n          </div>\r\n\r\n          {\r\n            <ImageComponent\r\n              size=\"large\"\r\n              src=\"https://doubleproficiency.com/wp-content/uploads/2018/02/mega-fantasy-avatar-kronis.png\"\r\n              alt=\"player\"\r\n            ></ImageComponent>\r\n          }\r\n        </div>\r\n      )}\r\n      {!props.battleSideBar || (\r\n        <div className={styles.stat_battle_box}>\r\n          <div>\r\n            <span className={`${styles.text__style} ${styles.health__styling}`}>AC: {!props.stats.level && props.stats[\"Armor Class\"].value } </span>\r\n            {props.stats.level &&\r\n            \r\n              <div className={styles.input__wraper}>\r\n                <input\r\n                  autoFocus={true}\r\n                  onChange={giveArmorClass}\r\n                  onBlur={rememberAcValue}\r\n                  className={`${styles.input__style}`}\r\n                  value={playerGivenAc}\r\n                ></input>\r\n              </div>\r\n            }\r\n          </div>\r\n          {!props.stats.level ? (\r\n            <>\r\n              <HealthPool\r\n                onChange={deathTraker}\r\n                hp={props.stats[\"Hit Points\"].hp}\r\n              ></HealthPool>\r\n              <Initiative initiative= {props.stats.initiative} dexMod={props.stats.DEX_mod}></Initiative>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <HealthPool\r\n                onChange={deathTraker}\r\n                player=\"player\"\r\n                hp={0}\r\n              ></HealthPool>\r\n              <Initiative initiative= {props.stats.initiative}></Initiative>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container_box__style\":\"ConteinerBox_container_box__style__C8d7G\"};","import styles from \"./ConteinerBox.module.css\"\r\n\r\nexport default function ConteinerBox(props){\r\n    return(\r\n        <div className={styles.container_box__style}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}","import \"./ImageComponent.css\";\r\n\r\n// classNames for image size\r\n// image__small width 20%\r\n// image__large Width 100%\r\n\r\nexport default function ImageComponent(props) {\r\n  return (\r\n    <img\r\n      className={`${props.size}`}\r\n      src={props.src}\r\n      alt={props.alt}\r\n    ></img>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"battle_box\":\"BattleScreen_battle_box__qnZwN\",\"stat_battle_box\":\"BattleScreen_stat_battle_box__iL3qz\",\"encounter_box__style\":\"BattleScreen_encounter_box__style__UIhFr\",\"disabled_button\":\"BattleScreen_disabled_button__YntVp\",\"heal_button\":\"BattleScreen_heal_button__4700Z\",\"damage_button\":\"BattleScreen_damage_button__gOTWd\",\"image__style\":\"BattleScreen_image__style__6wmZK\",\"encounter_name__style\":\"BattleScreen_encounter_name__style__BVcii\",\"text__style\":\"BattleScreen_text__style__UOkfW\",\"health__styling\":\"BattleScreen_health__styling__8iDYl\",\"modal__style\":\"BattleScreen_modal__style__Bq0UX\",\"detail__style\":\"BattleScreen_detail__style__0sTuU\",\"resandvun_text__style\":\"BattleScreen_resandvun_text__style__m81w+\",\"condition__txt__style\":\"BattleScreen_condition__txt__style__GAqtZ\",\"red_condition\":\"BattleScreen_red_condition__CxmvQ\",\"green_condition\":\"BattleScreen_green_condition__Z57GV\",\"orange_condition\":\"BattleScreen_orange_condition__2iRT3\",\"input__wraper\":\"BattleScreen_input__wraper__NOssV\",\"input__style\":\"BattleScreen_input__style__XsIQX\",\"subm_subt__style\":\"BattleScreen_subm_subt__style__8yzBN\",\"death_modal_text___style\":\"BattleScreen_death_modal_text___style__TWYmR\",\"delete_btn__holder\":\"BattleScreen_delete_btn__holder__EWu2i\",\"delete_btn__style\":\"BattleScreen_delete_btn__style__IuzZX\",\"content_pc__style\":\"BattleScreen_content_pc__style__0yK5Y\",\"input_pc__style\":\"BattleScreen_input_pc__style__hWkqu\",\"level__style\":\"BattleScreen_level__style__NQwsj\",\"pc_level__style\":\"BattleScreen_pc_level__style__ZiJ31\"};"],"names":["AutoRollInitiative","props","dexterityModifire","parseInt","dexMod","replace","className","styles","onClick","randomRoll","Math","floor","random","Initiative","useState","initiative","initiativeHanler","onChange","event","target","value","init","ImmunityesModal","style","width","height","dmgI","conI","dmgR","dmgV","StatsModal","class","stats","name","meta","size","type","alignment","rating","xp","DeathModal","PopUpOnClick","componentRef","useRef","useEffect","document","addEventListener","handleClickOutside","removeEventListener","current","contains","onBlur","ref","bottom","right","borderTopColor","borderRightColor","children","HealthPool","hp","health","healthHandler","calculate","calculateHanler","playerMaxHp","setPcMaxHealth","clikedPlayerMaxHealtInput","setCliket","hpTarget","player","disabled","Actions","dangerouslySetInnerHTML","__html","actions","NameAndAlignment","toUpperCase","LifeArmorSpeed","armor","dice","speed","Stats","str","str_mod","dex","dex_mod","con","con_mod","int","int_mod","wis","wis_mod","cha","cha_mod","General","GeneralStats","stat","saving_throw","skill","senses","dmg","res","vul","lang","challenge","StatBlock","monsterStats","Speed","img","img_url","STR","STR_mod","DEX","DEX_mod","CON","CON_mod","INT","INT_mod","WIS","WIS_mod","CHA","CHA_mod","Skills","Senses","Languages","Challenge","Traits","Border","FullMonsterDescription","window","getSelection","Reactions","src","alt","Characteristics","ModalBack","ReactDOM","BackDrop","getElementById","MonsterBattleBox","isShown","setIsShown","isDead","setDead","isRead","setReading","setPlayerArmorClass","playerGivenAc","setPlayerGivenAc","deathTraker","state","level","placeholder","ImageComponent","textAlign","childrenTopAndBottom","onMouseEnter","onMouseLeave","modalStats","battleSideBar","autoFocus","ConteinerBox"],"sourceRoot":""}