{"version":3,"file":"static/js/374.90d8c4e8.chunk.js","mappings":"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","sources":["components/MyEncounters/EncounterModals.js","components/MyEncounters/EncounterUI/HealthPool.js","components/MyEncounters/EncounterUI/Initiative.js","webpack://dnd-project/./src/components/UI/FullMonsterDescription/mainstyling.module.css?0cf6","components/UI/FullMonsterDescription/Actions.js","components/UI/FullMonsterDescription/StatBlock/NameAndAlignment.js","components/UI/FullMonsterDescription/StatBlock/LifeArmorSpeed.js","components/UI/FullMonsterDescription/StatBlock/Stats.js","components/UI/FullMonsterDescription/StatBlock/General.js","components/UI/FullMonsterDescription/StatBlock/StatBlock.js","webpack://dnd-project/./src/components/UI/Border.module.css?aec6","components/UI/Border.js","components/UI/FullMonsterDescription/FullMonsterDescription.js","components/UI/ModalMonsterText.js","components/MyEncounters/MonsterBattleBox.js","components/UI/ImageComponent.js","webpack://dnd-project/./src/components/MyEncounters/BattleScreen.module.css?cb5e"],"sourcesContent":["import styles from \"./BattleScreen.module.css\";\r\n\r\nexport default function ImmunityesModal(props) {\r\n  return (\r\n    <div\r\n      className={styles.modal__style}\r\n      style={{ width: `${props.width}`, height: `${props.height}` }}\r\n    >\r\n      {\" \"}\r\n      <div className={styles.resandvun_text__style}>\r\n        <span className={styles.red_condition}>Damage Immunity: </span>\r\n        <span className={`${styles.condition__txt__style}`}>{props.dmgI}</span>\r\n      </div>\r\n      <div className={styles.resandvun_text__style}>\r\n        <span className={styles.red_condition}>Condition Immunity:</span>\r\n        <span className={`${styles.condition__txt__style} `}>{props.conI}</span>\r\n      </div>\r\n      <div className={styles.resandvun_text__style}>\r\n        <span className={styles.orange_condition}>Damage Resistance:</span>\r\n        <span className={`${styles.condition__txt__style} `}>{props.dmgR}</span>\r\n      </div>\r\n      <div className={styles.resandvun_text__style}>\r\n        <span className={styles.green_condition}>Damage Vulnerability:</span>\r\n        <span className={`${styles.condition__txt__style} `}>{props.dmgV}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport function StatsModal(props) {\r\n  return (\r\n    <div\r\n      className={styles.modal__style}\r\n      style={{ width: `${props.width}`, height: `${props.height}` }}\r\n    >\r\n      <div class={styles.detail__style}>\r\n        <span>\r\n          <span>Name: </span>\r\n          {props.stats.name}\r\n        </span>\r\n        <span>\r\n          <span>Size: </span>\r\n          {props.stats.meta.size}\r\n        </span>\r\n        <span>\r\n          <span>Type: </span>\r\n          {props.stats.meta.type}\r\n        </span>\r\n        <span>\r\n          <span>Alignment: </span>\r\n          {props.stats.meta.alignment}\r\n        </span>\r\n        <span>\r\n          <span>CR: </span>\r\n          {props.stats[\"Challenge\"].rating}\r\n          {props.stats[\"Challenge\"].xp}\r\n        </span>\r\n        <span>\r\n          <span>AC: </span>\r\n          {props.stats[\"Armor Class\"].value}\r\n          {props.stats[\"Armor Class\"].type}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport function DeathModal(props) {\r\n  return (\r\n    <div\r\n      className={styles.modal__style}\r\n      style={{ width: `${props.width}`, height: `${props.height}` }}\r\n    >\r\n      <span className={styles.death_modal_text___style}>DEAD</span>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport styles from \"../BattleScreen.module.css\";\r\n\r\nexport default function HealthPool(props) {\r\n  const [health, healthHandler] = useState(props.hp);\r\n  const [calculate, calculateHanler] = useState(0);\r\n  const [playerMaxHp,setPcMaxHealth] = useState(props.hp)\r\n  const [clikedPlayerMaxHealtInput,setCliket] = useState(false)\r\n\r\n  const hpTarget = !props.player ? props.hp : playerMaxHp\r\n\r\n  const givePlayerHp = () =>{\r\n    setCliket(true)\r\n  }\r\n  const setPcHp = () =>{\r\n    setCliket(false)\r\n  }\r\n  const givePlayerHealth = (event) =>{\r\n    healthHandler(event.target.value)\r\n    setPcMaxHealth(event.target.value)\r\n  }\r\n\r\n  const calculateThis = (event) => {\r\n    calculateHanler(event.target.value);\r\n  };\r\n  const addNow = () => {\r\n    console.log(health)\r\n    console.log(calculate)\r\n    healthHandler(parseInt(health) + parseInt(calculate));\r\n    console.log(health)\r\n\r\n    if (parseInt(health) + parseInt(calculate) > hpTarget) {\r\n      healthHandler(hpTarget)\r\n    }\r\n    calculateHanler(0);\r\n  };\r\n  const subtractNow = () => {\r\n    healthHandler(parseInt(health) - parseInt(calculate));\r\n\r\n    if (parseInt(health) - parseInt(calculate) <= 0) {\r\n      props.onChange(true);\r\n    }\r\n    calculateHanler(0);\r\n  };\r\n  return (\r\n    <>\r\n      <div className={styles.health__styling}>\r\n        <span className={`${styles.stat_text__style}}`}>HP: </span>\r\n        {(<span className={styles.stat_text__style}>{`${health} / `}</span>)} \r\n       {(!clikedPlayerMaxHealtInput ? <span onClick={props.player && givePlayerHp } className={styles.stat_text__style}>{hpTarget}</span> : <input autoFocus=\"true\" onBlur={setPcHp} onChange={givePlayerHealth} value={playerMaxHp}></input>)}\r\n      </div>\r\n      {/* <div> */}\r\n        <button\r\n          onClick={addNow}\r\n          className={`${styles.subm_subt__style} ${styles.add}`}\r\n        >\r\n          Heal\r\n        </button>\r\n        <input\r\n          onChange={calculateThis}\r\n          className={`${styles.stat_text__style} ${styles.input__style}`}\r\n          value={calculate}\r\n        ></input>\r\n        <button\r\n          onClick={subtractNow}\r\n          className={`${styles.subm_subt__style} ${styles.subtract}`}\r\n        >\r\n          Damage\r\n        </button>\r\n      {/* </div> */}\r\n    </>\r\n  );\r\n}\r\n","import React, {useState} from \"react\";\r\nimport styles from \"../BattleScreen.module.css\";\r\n\r\nexport default function Initiative() {\r\n  const [initiative, initiativeHanler] = useState();\r\n\r\n  const initiativeSetter = (event) => {\r\n    initiativeHanler(event.target.value);\r\n  };\r\n  return (\r\n    <>\r\n      <span className={styles.stat_text__style}>INIT:</span>\r\n      <input\r\n        placeholder=\"0\"\r\n        onChange={initiativeSetter}\r\n        className={`${styles.stat_text__style} ${styles.input__style}`}\r\n        value={initiative}\r\n      ></input>\r\n    </>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"box_design\":\"mainstyling_box_design__ApoSj\",\"first_half\":\"mainstyling_first_half__M7AY+\",\"second_half\":\"mainstyling_second_half__jHDuo\",\"image_half\":\"mainstyling_image_half__UlMtG\",\"life_stiling\":\"mainstyling_life_stiling__shMQz\",\"leader\":\"mainstyling_leader__66LAX\",\"numbers\":\"mainstyling_numbers__-z7IG\",\"name_box\":\"mainstyling_name_box__7IyQY\",\"name_styling\":\"mainstyling_name_styling__f3oFh\",\"table__styling\":\"mainstyling_table__styling__tkwzK\",\"table__boxes\":\"mainstyling_table__boxes__1vq1g\",\"skills_style\":\"mainstyling_skills_style__OckZm\",\"action__styles\":\"mainstyling_action__styles__omMfM\",\"action_text__styles\":\"mainstyling_action_text__styles__eMzac\"};","import React from \"react\";\r\nimport styles from \"./mainstyling.module.css\"\r\nexport default function Actions(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <div className={styles.action__styles}>{props.name}</div>\r\n      <hr />\r\n      <div className={styles.action_text__styles} dangerouslySetInnerHTML={{ __html: props.actions }}></div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nimport styles from \"../mainstyling.module.css\"\r\n\r\n\r\nexport default function NameAndAlignment (props){\r\n        return(\r\n                <div className={styles.name_box}>\r\n                        <div className={styles.name_styling}>{props.name.toUpperCase()}</div>\r\n                        <div>{`${props.meta.size} ${props.meta.type}, ${props.meta.alignment}`}</div>\r\n                </div>\r\n        )\r\n}","import React from \"react\";\r\n\r\nimport styles from \"../mainstyling.module.css\";\r\n\r\nexport default function LifeArmorSpeed(props) {\r\n  return (\r\n    <div className={styles.picture_divide}>\r\n      <div className={styles.life_stiling}>\r\n        <div>\r\n          <div className={styles.leader}>Armor Class: </div>\r\n          <div className={styles.numbers}>{`${props.armor.value} ${props.armor.type}`}</div>\r\n        </div>\r\n        <div>\r\n          <div className={styles.leader}>Hit Points: </div>\r\n          <div className={styles.numbers}>{`${props.hp.hp} ${props.hp.dice}`}</div>\r\n        </div>\r\n        <div>\r\n          <div className={styles.leader}>Speed: </div>\r\n          <div className={styles.numbers}>{props.speed}</div>\r\n        </div>\r\n      </div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"../mainstyling.module.css\"\r\n\r\nexport default function Stats(props) {\r\n  return (\r\n    <div className={styles.table__styling}>\r\n      <div className={styles.table__boxes}>\r\n        <div>STR</div>\r\n        <div>{props.str}{props.str_mod}</div>\r\n      </div>\r\n      <div className={styles.table__boxes}>\r\n        <div>DEX</div>\r\n        <div>{props.dex}{props.dex_mod}</div>\r\n      </div>\r\n      <div className={styles.table__boxes}>\r\n        <div>CON</div>\r\n        <div>{props.con}{props.con_mod}</div>\r\n      </div>\r\n      <div className={styles.table__boxes}>\r\n        <div>INT</div>\r\n        <div>{props.int}{props.int_mod}</div>\r\n      </div>\r\n      <div className={styles.table__boxes}>\r\n        <div>WIS</div>\r\n        <div>{props.wis}{props.wis_mod}</div>\r\n      </div>\r\n      <div className={styles.table__boxes}>\r\n        <div>CHA</div>\r\n        <div>{props.cha}{props.cha_mod}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"../mainstyling.module.css\";\r\n\r\nexport default function General(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <GeneralStats\r\n        name=\"Saving Throws:\"\r\n        stat={props.saving_throw}\r\n      ></GeneralStats>\r\n      <GeneralStats name=\"Skills:\" stat={props.skill}></GeneralStats>\r\n      <GeneralStats name=\"Senses:\" stat={props.senses}></GeneralStats>\r\n      <GeneralStats\r\n        name=\"Condition Immunities: \"\r\n        stat={props.con}\r\n      ></GeneralStats>\r\n      <GeneralStats name=\"Damage Immunities: \" stat={props.dmg}></GeneralStats>\r\n      <GeneralStats name=\"Damage Resistances: \" stat={props.res}></GeneralStats>\r\n      <GeneralStats\r\n        name=\"Damage Vulnerabilities: \"\r\n        stat={props.vul}\r\n      ></GeneralStats>\r\n      <GeneralStats name=\"Languages: \" stat={props.lang}></GeneralStats>\r\n      <GeneralStats\r\n        name=\"Challenge: \"\r\n        stat={`${props.challenge.rating} ${props.challenge.xp}`}\r\n      ></GeneralStats>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst GeneralStats = (props) => {\r\n  return (\r\n    <div className={styles.table__styling}>\r\n      <div className={styles.skills_style}>{props.name} </div>\r\n      {props.stat}\r\n    </div>\r\n  );\r\n};\r\n","import NameAndAlignment from \"./NameAndAlignment\";\r\nimport LifeArmorSpeed from \"./LifeArmorSpeed\";\r\nimport Stats from \"./Stats\";\r\nimport General from \"./General\";\r\nimport Actions from \"../Actions\";\r\n\r\n\r\nexport default function StatBlock(props) {\r\n  return (\r\n    <>\r\n      <NameAndAlignment\r\n        name={props.monsterStats.name}\r\n        meta={props.monsterStats.meta}\r\n      />\r\n      <hr />\r\n      <LifeArmorSpeed\r\n        armor={props.monsterStats[\"Armor Class\"]}\r\n        hp={props.monsterStats[\"Hit Points\"]}\r\n        speed={props.monsterStats.Speed}\r\n        img={props.monsterStats.img_url}\r\n      />\r\n      <hr />\r\n      <Stats\r\n        str={props.monsterStats.STR}\r\n        str_mod={props.monsterStats.STR_mod}\r\n        dex={props.monsterStats.DEX}\r\n        dex_mod={props.monsterStats.DEX_mod}\r\n        con={props.monsterStats.CON}\r\n        con_mod={props.monsterStats.CON_mod}\r\n        int={props.monsterStats.INT}\r\n        int_mod={props.monsterStats.INT_mod}\r\n        wis={props.monsterStats.WIS}\r\n        wis_mod={props.monsterStats.WIS_mod}\r\n        cha={props.monsterStats.CHA}\r\n        cha_mod={props.monsterStats.CHA_mod}\r\n      />\r\n      <hr />\r\n      <General\r\n        saving_throw={props.monsterStats[\"Saving Throws\"]}\r\n        skill={props.monsterStats.Skills}\r\n        senses={props.monsterStats.Senses}\r\n        con={props.monsterStats[\"Condition Immunities\"]}\r\n        dmg={props.monsterStats[\"Damage Immunities\"]}\r\n        res={props.monsterStats[\"Damage Resistances\"]}\r\n        vul={props.monsterStats[\"Damage Vulnerabilities\"]}\r\n        lang={props.monsterStats.Languages}\r\n        challenge={props.monsterStats.Challenge}\r\n      />\r\n      {props.monsterStats.Traits && <Actions name='Traits' actions={props.monsterStats.Traits} />}\r\n      {props.monsterStats['Bonus Actions'] && <Actions name='Bonus Actions' actions={props.monsterStats['Bonus Actions']} />}\r\n      {/* {props.monsterStats.Reactions && <Actions name='Reactions' actions={props.monsterStats.Reactions} />} */}\r\n    </>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"border__style\":\"Border_border__style__8I2we\"};","import styles from \"./Border.module.css\"\r\n\r\n export default function Border(){\r\n    return(\r\n\r\n        <div className={styles.border__style}></div>\r\n    )\r\n }","import React from \"react\";\r\nimport styles from \"./mainstyling.module.css\";\r\nimport Actions from \"./Actions\";\r\nimport StatBlock from \"./StatBlock/StatBlock\";\r\nimport Border from \"../Border\";\r\nexport default function FullMonsterDescription(props) {\r\n  const stopClick=()=>{\r\n    if(window.getSelection().type !== \"Range\"){\r\n      props.onClick(false)\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div onClick={stopClick} className={styles.box_design}>\r\n        <Border />\r\n        <div className={styles.first_half}>\r\n          <StatBlock monsterStats={props.monsterStats} />\r\n        </div>\r\n\r\n        <div className={styles.second_half}>\r\n          <Actions name=\"Actions\" actions={props.monsterStats.Actions} />\r\n          {props.monsterStats[\"Legendary Actions\"] && (\r\n            <Actions\r\n              name=\"Legendary Actions\"\r\n              actions={props.monsterStats[\"Legendary Actions\"]}\r\n            />\r\n          )}\r\n          {props.monsterStats.Reactions && (\r\n            <Actions name=\"Reactions\" actions={props.monsterStats.Reactions} />\r\n          )}\r\n        </div>\r\n\r\n        <div className={styles.image_half}>\r\n          {props.monsterStats.img_url && (\r\n            <img src={props.monsterStats.img_url} alt=\"monster\"></img>\r\n          )}\r\n          <div\r\n            dangerouslySetInnerHTML={{\r\n              __html: props.monsterStats.Characteristics,\r\n            }}\r\n          ></div>\r\n        </div>\r\n\r\n        <Border />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"," import React from \"react\"\r\n import ReactDOM from \"react-dom\"\r\nimport FullMonsterDescription from \"./FullMonsterDescription/FullMonsterDescription\"\r\nimport BackDrop from \"./BackDrop\"\r\n\r\n\r\n\r\n export default function ModalBack (props) {\r\n    return(\r\n        <React.Fragment>\r\n            {ReactDOM.createPortal(<BackDrop onClick={ props.onClick}></BackDrop>,document.getElementById(\"backdrop-root\"))}\r\n            {ReactDOM.createPortal(<FullMonsterDescription onClick={props.onClick} monsterStats={props.monsterStats}></FullMonsterDescription>,document.getElementById(\"overlay-root\"))}\r\n        </React.Fragment>\r\n    )\r\n }","import React, { useState } from \"react\";\r\nimport ImmunityesModal, { DeathModal, StatsModal } from \"./EncounterModals\";\r\nimport HealthPool from \"./EncounterUI/HealthPool\";\r\nimport Initiative from \"./EncounterUI/Initiative\";\r\nimport ModalMonsterText from \"../UI/ModalMonsterText\";\r\nimport ImageComponent from \"../UI/ImageComponent\";\r\n\r\nimport styles from \"./BattleScreen.module.css\";\r\n\r\nexport default function MonsterBattleBox(props) {\r\n  const [isShown, setIsShown] = useState(false);\r\n  const [isDead, setDead] = useState(false);\r\n  const [isRead, setReading] = useState(false);\r\n  const [playerArmorClass, setPlayerArmorClass] = useState(true);\r\n  const [playerGivenAc, setPlayerGivenAc] = useState(0);\r\n\r\n  const openInputToGiveAc = () => {\r\n    setPlayerArmorClass(false);\r\n  };\r\n  const rememberAcValue = () => {\r\n    setPlayerArmorClass(true);\r\n  };\r\n  const giveArmorClass = (event) => {\r\n    setPlayerGivenAc(event.target.value);\r\n  };\r\n  const deathTraker = (state) => {\r\n    setDead(state);\r\n    setIsShown(false);\r\n  };\r\n\r\n  const renderModal = () => {\r\n    setReading(true);\r\n  };\r\n  const removeModal = (state) => {\r\n    setReading(state);\r\n  };\r\n  return (\r\n    <div className={styles.battle_box}>\r\n      {!props.pleyers && isRead && (\r\n        <ModalMonsterText\r\n          onClick={removeModal}\r\n          monsterStats={props.stats}\r\n        ></ModalMonsterText>\r\n      )}\r\n\r\n      {!props.players ? (\r\n        <div style={{ textAlign: \"right\" }}>\r\n          {/*######################## MONSTER NAME ####################### */}\r\n          {props.childrenTopAndBottom ? props.children[0] : props.children}\r\n\r\n          <div\r\n            onClick={renderModal}\r\n            className={`${styles.encounter_box__style} `}\r\n            style={{ width: `${props.width}`, height: `${props.height}` }}\r\n            onMouseEnter={() => setIsShown(true)}\r\n            onMouseLeave={() => setIsShown(false)}\r\n          >\r\n            {(isDead && (\r\n              <DeathModal\r\n                width={props.width}\r\n                height={props.height}\r\n              ></DeathModal>\r\n            )) ||\r\n              (isShown && !props.modalStats ? (\r\n                <ImmunityesModal\r\n                  width={props.width}\r\n                  height={props.height}\r\n                  conI={props.stats[\"Condition Immunities\"]}\r\n                  dmgI={props.stats[\"Damage Immunities\"]}\r\n                  dmgR={props.stats[\"Damage Resistances\"]}\r\n                  dmgV={props.stats[\"Damage Vulnerabilities\"]}\r\n                ></ImmunityesModal>\r\n              ) : (\r\n                isShown &&\r\n                props.modalStats && (\r\n                  <StatsModal\r\n                    stats={props.stats}\r\n                    width={props.width}\r\n                    height={props.height}\r\n                  ></StatsModal>\r\n                )\r\n              ))}\r\n            <ImageComponent\r\n              size=\"large\"\r\n              src={props.stats.img_url}\r\n              alt=\"monster\"\r\n            ></ImageComponent>\r\n          </div>\r\n          {props.childrenTopAndBottom ? props.children[1] : null}\r\n        </div>\r\n      ) : (\r\n        //PC battle box\r\n        <div\r\n          className={styles.encounter_box__style}\r\n          style={{ width: `${props.width}`, height: `${props.height}` }}\r\n        >\r\n          {isDead && (\r\n            <DeathModal width={props.width} height={props.height}></DeathModal>\r\n          )}\r\n\r\n          <div\r\n            className={styles.content_pc__style}\r\n            style={{ width: `${props.width}`, height: `${props.height}` }}\r\n          >\r\n            <input\r\n              className={styles.input_pc__style}\r\n              placeholder=\" PC NAME\"\r\n            ></input>\r\n            <span></span>\r\n            <span className={styles.level__style}>\r\n              Level:{props.players.level}\r\n            </span>\r\n          </div>\r\n\r\n          {\r\n            <ImageComponent\r\n              size=\"large\"\r\n              src=\"https://doubleproficiency.com/wp-content/uploads/2018/02/mega-fantasy-avatar-kronis.png\"\r\n              alt=\"player\"\r\n            ></ImageComponent>\r\n          }\r\n        </div>\r\n      )}\r\n      {!props.battleSideBar || (\r\n        <div className={styles.stat_battle_box}>\r\n          <div>\r\n            <span className={styles.stat_text__style}>AC: </span>\r\n            {!props.players ? (\r\n              <span className={styles.stat_text__style}>\r\n                {props.stats[\"Armor Class\"].value}\r\n              </span>\r\n            ) : playerArmorClass ? (\r\n              <span\r\n                onClick={openInputToGiveAc}\r\n                className={styles.stat_text__style}\r\n              >\r\n                {playerGivenAc}\r\n              </span>\r\n            ) : (\r\n              <input\r\n                autoFocus={true}\r\n                onChange={giveArmorClass}\r\n                onBlur={rememberAcValue}\r\n                className={styles.stat_text__style}\r\n                value={playerGivenAc}\r\n              ></input>\r\n            )}\r\n          </div>\r\n          {!props.players ? (\r\n            <HealthPool\r\n              onChange={deathTraker}\r\n              hp={props.stats[\"Hit Points\"].hp}\r\n            ></HealthPool>\r\n          ) : (\r\n            <HealthPool\r\n              onChange={deathTraker}\r\n              player=\"player\"\r\n              hp={0}\r\n            ></HealthPool>\r\n          )}\r\n\r\n          <Initiative></Initiative>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import \"./ImageComponent.css\";\r\n\r\n// classNames for image size\r\n// image__small width 20%\r\n// image__large Width 100%\r\n\r\nexport default function ImageComponent(props) {\r\n  return (\r\n    <img\r\n      className={`${props.size}`}\r\n      src={props.src}\r\n      alt={props.alt}\r\n    ></img>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"display__style\":\"BattleScreen_display__style__Foewj\",\"battle_box\":\"BattleScreen_battle_box__qnZwN\",\"stat_battle_box\":\"BattleScreen_stat_battle_box__iL3qz\",\"encounter_box__style\":\"BattleScreen_encounter_box__style__UIhFr\",\"image__style\":\"BattleScreen_image__style__6wmZK\",\"encounter_name__style\":\"BattleScreen_encounter_name__style__BVcii\",\"stat_text__style\":\"BattleScreen_stat_text__style__s2i0y\",\"health__styling\":\"BattleScreen_health__styling__8iDYl\",\"modal__style\":\"BattleScreen_modal__style__Bq0UX\",\"detail__style\":\"BattleScreen_detail__style__0sTuU\",\"resandvun_text__style\":\"BattleScreen_resandvun_text__style__m81w+\",\"condition__txt__style\":\"BattleScreen_condition__txt__style__GAqtZ\",\"red_condition\":\"BattleScreen_red_condition__CxmvQ\",\"green_condition\":\"BattleScreen_green_condition__Z57GV\",\"orange_condition\":\"BattleScreen_orange_condition__2iRT3\",\"input__style\":\"BattleScreen_input__style__XsIQX\",\"add\":\"BattleScreen_add__X54v0\",\"subtract\":\"BattleScreen_subtract__aIDUE\",\"subm_subt__style\":\"BattleScreen_subm_subt__style__8yzBN\",\"death_modal_text___style\":\"BattleScreen_death_modal_text___style__TWYmR\",\"delete_btn__holder\":\"BattleScreen_delete_btn__holder__EWu2i\",\"delete_btn__style\":\"BattleScreen_delete_btn__style__IuzZX\",\"content_pc__style\":\"BattleScreen_content_pc__style__0yK5Y\",\"input_pc__style\":\"BattleScreen_input_pc__style__hWkqu\",\"level__style\":\"BattleScreen_level__style__NQwsj\",\"pc_level__style\":\"BattleScreen_pc_level__style__ZiJ31\"};"],"names":["ImmunityesModal","props","className","styles","style","width","height","dmgI","conI","dmgR","dmgV","StatsModal","class","stats","name","meta","size","type","alignment","rating","xp","value","DeathModal","HealthPool","useState","hp","health","healthHandler","calculate","calculateHanler","playerMaxHp","setPcMaxHealth","clikedPlayerMaxHealtInput","setCliket","hpTarget","player","autoFocus","onBlur","onChange","event","target","onClick","console","log","parseInt","Initiative","initiative","initiativeHanler","placeholder","Actions","dangerouslySetInnerHTML","__html","actions","NameAndAlignment","toUpperCase","LifeArmorSpeed","armor","dice","speed","Stats","str","str_mod","dex","dex_mod","con","con_mod","int","int_mod","wis","wis_mod","cha","cha_mod","General","GeneralStats","stat","saving_throw","skill","senses","dmg","res","vul","lang","challenge","StatBlock","monsterStats","Speed","img","img_url","STR","STR_mod","DEX","DEX_mod","CON","CON_mod","INT","INT_mod","WIS","WIS_mod","CHA","CHA_mod","Skills","Senses","Languages","Challenge","Traits","Border","FullMonsterDescription","window","getSelection","Reactions","src","alt","Characteristics","ModalBack","ReactDOM","BackDrop","document","getElementById","MonsterBattleBox","isShown","setIsShown","isDead","setDead","isRead","setReading","playerArmorClass","setPlayerArmorClass","playerGivenAc","setPlayerGivenAc","deathTraker","state","pleyers","players","level","ImageComponent","textAlign","childrenTopAndBottom","children","onMouseEnter","onMouseLeave","modalStats","battleSideBar"],"sourceRoot":""}