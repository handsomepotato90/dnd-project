{"version":3,"file":"static/js/773.a34d78e8.chunk.js","mappings":"uLAEe,SAASA,EAAgBC,GACtC,OACE,iBAAKC,UAAWC,EAAAA,EAAAA,aAAhB,UACG,KACD,iBAAKD,UAAWC,EAAAA,EAAAA,sBAAhB,WACE,iBAAMD,UAAWC,EAAAA,EAAAA,cAAjB,gCACA,iBAAMD,UAAS,UAAKC,EAAAA,EAAAA,uBAApB,SAAqDF,EAAMG,WAE7D,iBAAKF,UAAWC,EAAAA,EAAAA,sBAAhB,WACE,iBAAMD,UAAWC,EAAAA,EAAAA,cAAjB,kCACA,iBAAMD,UAAS,UAAKC,EAAAA,EAAAA,sBAAL,KAAf,SAAsDF,EAAMI,WAE9D,iBAAKH,UAAWC,EAAAA,EAAAA,sBAAhB,WACE,iBAAMD,UAAWC,EAAAA,EAAAA,iBAAjB,iCACA,iBAAMD,UAAS,UAAKC,EAAAA,EAAAA,sBAAL,KAAf,SAAsDF,EAAMK,WAE9D,iBAAKJ,UAAWC,EAAAA,EAAAA,sBAAhB,WACE,iBAAMD,UAAWC,EAAAA,EAAAA,gBAAjB,oCACA,iBAAMD,UAAS,UAAKC,EAAAA,EAAAA,sBAAL,KAAf,SAAsDF,EAAMM,YAInE,CACM,SAASC,EAAWP,GACzB,OACE,gBAAKC,UAAWC,EAAAA,EAAAA,aAAhB,UACE,iBAAKM,MAAON,EAAAA,EAAAA,cAAZ,WACE,6BAAM,qCAAoBF,EAAMS,MAAMC,SACtC,6BAAM,qCAAoBV,EAAMS,MAAME,KAAKC,SAC3C,6BAAM,qCAAoBZ,EAAMS,MAAME,KAAKE,SAC3C,6BAAM,0CAAyBb,EAAMS,MAAME,KAAKG,cAChD,6BAAM,mCAAkBd,EAAMS,MAAN,UAAyBM,OAASf,EAAMS,MAAN,UAAyBO,OACnF,6BAAM,mCAAkBhB,EAAMS,MAAM,eAAeQ,MAAQjB,EAAMS,MAAM,eAAeI,YAI7F,CACM,SAASK,IACd,OACE,gBAAKjB,UAAWC,EAAAA,EAAAA,aAAhB,UACE,iBAAMD,UAAWC,EAAAA,EAAAA,yBAAjB,mBAGL,CC1Cc,SAASiB,EAAWnB,GACjC,OAAgCoB,EAAAA,EAAAA,UAASpB,EAAMqB,IAA/C,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAqCH,EAAAA,EAAAA,UAAS,GAA9C,eAAOI,EAAP,KAAkBC,EAAlB,KACA,GAAqCL,EAAAA,EAAAA,UAASpB,EAAMqB,IAApD,eAAOK,EAAP,KAAmBC,EAAnB,KACA,GAA8CP,EAAAA,EAAAA,WAAS,GAAvD,eAAOQ,EAAP,KAAiCC,EAAjC,KAEMC,EAAY9B,EAAM+B,OAAoBL,EAAX1B,EAAMqB,GAmCvC,OACE,iCACE,iBAAKpB,UAAWC,EAAAA,EAAAA,gBAAhB,WACE,iBAAMD,UAAS,UAAKC,EAAAA,EAAAA,iBAAL,KAAf,mBACE,iBAAMD,UAAWC,EAAAA,EAAAA,iBAAjB,mBAA8CoB,EAA9C,SACAM,GAAkI,kBAAOI,UAAU,OAAOC,OAnClJ,WACdJ,GAAU,EACX,EAiCkLK,SAhC1J,SAACC,GACxBZ,EAAcY,EAAMC,OAAOnB,OAC3BU,EAAeQ,EAAMC,OAAOnB,MAC7B,EA6B8MA,MAAOS,KAAlL,iBAAMW,QAASrC,EAAM+B,QAtCpC,WACnBF,GAAU,EACX,EAoCiF5B,UAAWC,EAAAA,EAAAA,iBAAzD,SAAmF4B,QAGjH,mBACEO,QA5BO,WACbC,QAAQC,IAAIjB,GACZgB,QAAQC,IAAIf,GACZD,EAAciB,SAASlB,GAAUkB,SAAShB,IAC1Cc,QAAQC,IAAIjB,GAERkB,SAASlB,GAAUkB,SAAShB,GAAaM,GAC3CP,EAAcO,GAEhBL,EAAgB,EACjB,EAmBOxB,UAAS,UAAKC,EAAAA,EAAAA,iBAAL,YAAgCA,EAAAA,EAAAA,KAF3C,mBAMA,kBACEgC,SArCc,SAACC,GACrBV,EAAgBU,EAAMC,OAAOnB,MAC9B,EAoCOhB,UAAS,UAAKC,EAAAA,EAAAA,iBAAL,YAAgCA,EAAAA,EAAAA,cACzCe,MAAOO,KAET,mBACEa,QA5BY,WAClBd,EAAciB,SAASlB,GAAUkB,SAAShB,IAEtCgB,SAASlB,GAAUkB,SAAShB,IAAc,GAC5CxB,EAAMkC,UAAS,GAEjBT,EAAgB,EACjB,EAsBOxB,UAAS,UAAKC,EAAAA,EAAAA,iBAAL,YAAgCA,EAAAA,EAAAA,UAF3C,sBASP,CCrEc,SAASuC,IACtB,OAAuCrB,EAAAA,EAAAA,YAAvC,eAAOsB,EAAP,KAAmBC,EAAnB,KAKA,OACE,iCACE,iBAAM1C,UAAWC,EAAAA,EAAAA,iBAAjB,oBACA,kBACE0C,YAAY,IACZV,SARmB,SAACC,GACxBQ,EAAiBR,EAAMC,OAAOnB,MAC/B,EAOKhB,UAAS,UAAKC,EAAAA,EAAAA,iBAAL,YAAgCA,EAAAA,EAAAA,cACzCe,MAAOyB,MAId,C,cCbc,SAASG,EAAiB7C,GACvC,OAA8BoB,EAAAA,EAAAA,WAAS,GAAvC,eAAO0B,EAAP,KAAgBC,EAAhB,KACA,GAA0B3B,EAAAA,EAAAA,WAAS,GAAnC,eAAO4B,EAAP,KAAeC,EAAf,KACA,GAA6B7B,EAAAA,EAAAA,WAAS,GAAtC,eAAO8B,EAAP,KAAeC,EAAf,KACA,GAAgD/B,EAAAA,EAAAA,WAAS,GAAzD,eAAOgC,EAAP,KAAyBC,EAAzB,KACA,GAA0CjC,EAAAA,EAAAA,UAAS,GAAnD,eAAOkC,EAAP,KAAsBC,EAAtB,KAWMC,EAAc,SAACC,GACnBR,EAAQQ,GACRV,GAAW,EACZ,EAQD,OACE,iBAAK9C,UAAWC,EAAAA,EAAAA,WAAhB,WACIF,EAAM0D,SAAWR,IACjB,SAACS,EAAA,EAAD,CACEtB,QAPY,SAACoB,GACnBN,EAAWM,EACZ,EAMOG,aAAc5D,EAAMS,QAItBT,EAAM6D,SAqCN,iBAAK5D,UAAWC,EAAAA,EAAAA,qBAAhB,UACG8C,IAAU,SAAC9B,EAAD,KAET,kBACE0B,YAAY,WACZ3C,UAAS,UAAKC,EAAAA,EAAAA,sBAAL,aAAsCA,EAAAA,EAAAA,kBAGnD,gBACED,UAAS,UAAKC,EAAAA,EAAAA,sBAAL,aAAsCA,EAAAA,EAAAA,iBADjD,qBAGS,0BAAOF,EAAM6D,QAAQC,YAI5B,gBACE7D,UAAWC,EAAAA,EAAAA,aACX6D,IAAI,0FACJC,IAAI,eAtDV,iBAAKC,MAAO,CAAEC,UAAW,SAAzB,UAEIlE,EAAMmE,OAASnE,EAAMoE,SAAS,GAAKpE,EAAMoE,UAE3C,iBACE/B,QArBU,WAClBc,GAAW,EACZ,EAoBSlD,UAAS,UAAKC,EAAAA,EAAAA,qBAAL,KACT+D,MAAO,CAAEI,MAAM,GAAD,OAAKrE,EAAMqE,OAASC,OAAO,GAAD,OAAKtE,EAAMsE,SACnDC,aAAc,kBAAMxB,GAAW,EAAjB,EACdyB,aAAc,kBAAMzB,GAAW,EAAjB,EALhB,UAOIC,IAAU,SAAC9B,EAAD,MACT4B,IAAY9C,EAAMyE,YACjB,SAAC1E,EAAD,CACEK,KAAMJ,EAAMS,MAAM,wBAClBN,KAAMH,EAAMS,MAAM,qBAClBJ,KAAML,EAAMS,MAAM,sBAClBH,KAAMN,EAAMS,MAAM,4BAGpBqC,GACA9C,EAAMyE,aACJ,SAAClE,EAAD,CAAYE,MAAOT,EAAMS,UAI/B,gBACER,UAAWC,EAAAA,EAAAA,aACX6D,IAAK/D,EAAMS,MAAMiE,QACjBV,IAAI,eAGPhE,EAAMmE,OAASnE,EAAMoE,SAAS,GAAK,QA2BvCpE,EAAM2E,UACL,iBAAK1E,UAAWC,EAAAA,EAAAA,gBAAhB,WACE,4BACE,iBAAMD,UAAWC,EAAAA,EAAAA,iBAAjB,kBACEF,EAAM6D,QAIJT,GACF,iBACEf,QAnGY,WACxBgB,GAAoB,EACrB,EAkGapD,UAAWC,EAAAA,EAAAA,iBAFb,SAIGoD,KAGH,kBACEtB,WAAW,EACXE,SArGS,SAACC,GACtBoB,EAAiBpB,EAAMC,OAAOnB,MAC/B,EAoGagB,OAzGU,WACtBoB,GAAoB,EACrB,EAwGapD,UAAWC,EAAAA,EAAAA,iBACXe,MAAOqC,KAhBT,iBAAMrD,UAAWC,EAAAA,EAAAA,iBAAjB,SACGF,EAAMS,MAAM,eAAeQ,WAmBhCjB,EAAM6D,SAMN,SAAC1C,EAAD,CACEe,SAAUsB,EACVzB,OAAO,SACPV,GAAI,KARN,SAACF,EAAD,CACEe,SAAUsB,EACVnC,GAAIrB,EAAMS,MAAM,cAAcY,MAUlC,SAACoB,EAAD,SAKT,C,+ECjJD,GAAgB,WAAa,gCAAgC,WAAa,gCAAgC,YAAc,iCAAiC,WAAa,gCAAgC,aAAe,kCAAkC,OAAS,4BAA4B,QAAU,6BAA6B,SAAW,8BAA8B,aAAe,kCAAkC,eAAiB,oCAAoC,aAAe,kCAAkC,aAAe,kCAAkC,eAAiB,oCAAoC,oBAAsB,0C,SCChnB,SAASmC,EAAQ5E,GAC9B,OACE,UAAC,WAAD,YACE,gBAAKC,UAAWC,EAAAA,eAAhB,SAAwCF,EAAMU,QAC9C,mBACA,gBAAKT,UAAWC,EAAAA,oBAA4B2E,wBAAyB,CAAEC,OAAQ9E,EAAM+E,aAG1F,CCJc,SAASC,EAAkBhF,GAClC,OACQ,iBAAKC,UAAWC,EAAAA,SAAhB,WACQ,gBAAKD,UAAWC,EAAAA,aAAhB,SAAsCF,EAAMU,KAAKuE,iBACjD,mCAASjF,EAAMW,KAAKC,KAApB,YAA4BZ,EAAMW,KAAKE,KAAvC,aAAgDb,EAAMW,KAAKG,eAGlF,CCTc,SAASoE,EAAelF,GACrC,OACE,iBAAKC,UAAWC,EAAAA,eAAhB,WACE,iBAAKD,UAAWC,EAAAA,aAAhB,WACE,4BACE,gBAAKD,UAAWC,EAAAA,OAAhB,4BACA,gBAAKD,UAAWC,EAAAA,QAAhB,mBAAoCF,EAAMmF,MAAMlE,MAAhD,YAAyDjB,EAAMmF,MAAMtE,YAEvE,4BACE,gBAAKZ,UAAWC,EAAAA,OAAhB,2BACA,gBAAKD,UAAWC,EAAAA,QAAhB,mBAAoCF,EAAMqB,GAAGA,GAA7C,YAAmDrB,EAAMqB,GAAG+D,YAE9D,4BACE,gBAAKnF,UAAWC,EAAAA,OAAhB,sBACA,gBAAKD,UAAWC,EAAAA,QAAhB,SAAiCF,EAAMqF,eAG3C,qBAGL,CCrBc,SAASC,EAAMtF,GAC5B,OACE,iBAAKC,UAAWC,EAAAA,eAAhB,WACE,iBAAKD,UAAWC,EAAAA,aAAhB,WACE,kCACA,2BAAMF,EAAMuF,IAAKvF,EAAMwF,eAEzB,iBAAKvF,UAAWC,EAAAA,aAAhB,WACE,kCACA,2BAAMF,EAAMyF,IAAKzF,EAAM0F,eAEzB,iBAAKzF,UAAWC,EAAAA,aAAhB,WACE,kCACA,2BAAMF,EAAM2F,IAAK3F,EAAM4F,eAEzB,iBAAK3F,UAAWC,EAAAA,aAAhB,WACE,kCACA,2BAAMF,EAAM6F,IAAK7F,EAAM8F,eAEzB,iBAAK7F,UAAWC,EAAAA,aAAhB,WACE,kCACA,2BAAMF,EAAM+F,IAAK/F,EAAMgG,eAEzB,iBAAK/F,UAAWC,EAAAA,aAAhB,WACE,kCACA,2BAAMF,EAAMiG,IAAKjG,EAAMkG,gBAI9B,CC7Bc,SAASC,EAAQnG,GAC9B,OACE,UAAC,WAAD,YACE,SAACoG,EAAD,CACE1F,KAAK,iBACL2F,KAAMrG,EAAMsG,gBAEd,SAACF,EAAD,CAAc1F,KAAK,UAAU2F,KAAMrG,EAAMuG,SACzC,SAACH,EAAD,CAAc1F,KAAK,UAAU2F,KAAMrG,EAAMwG,UACzC,SAACJ,EAAD,CACE1F,KAAK,yBACL2F,KAAMrG,EAAM2F,OAEd,SAACS,EAAD,CAAc1F,KAAK,sBAAsB2F,KAAMrG,EAAMyG,OACrD,SAACL,EAAD,CAAc1F,KAAK,uBAAuB2F,KAAMrG,EAAM0G,OACtD,SAACN,EAAD,CACE1F,KAAK,2BACL2F,KAAMrG,EAAM2G,OAEd,SAACP,EAAD,CAAc1F,KAAK,cAAc2F,KAAMrG,EAAM4G,QAC7C,SAACR,EAAD,CACE1F,KAAK,cACL2F,KAAI,UAAKrG,EAAM6G,UAAU9F,OAArB,YAA+Bf,EAAM6G,UAAU7F,QAI1D,CAED,IAAMoF,EAAe,SAACpG,GACpB,OACE,iBAAKC,UAAWC,EAAAA,eAAhB,WACE,iBAAKD,UAAWC,EAAAA,aAAhB,UAAsCF,EAAMU,KAA5C,OACCV,EAAMqG,OAGZ,EC/Bc,SAASS,EAAU9G,GAChC,OACE,iCACE,SAACgF,EAAD,CACEtE,KAAMV,EAAM4D,aAAalD,KACzBC,KAAMX,EAAM4D,aAAajD,QAE3B,mBACA,SAACuE,EAAD,CACEC,MAAOnF,EAAM4D,aAAa,eAC1BvC,GAAIrB,EAAM4D,aAAa,cACvByB,MAAOrF,EAAM4D,aAAamD,MAC1BC,IAAKhH,EAAM4D,aAAac,WAE1B,mBACA,SAACY,EAAD,CACEC,IAAKvF,EAAM4D,aAAaqD,IACxBzB,QAASxF,EAAM4D,aAAasD,QAC5BzB,IAAKzF,EAAM4D,aAAauD,IACxBzB,QAAS1F,EAAM4D,aAAawD,QAC5BzB,IAAK3F,EAAM4D,aAAayD,IACxBzB,QAAS5F,EAAM4D,aAAa0D,QAC5BzB,IAAK7F,EAAM4D,aAAa2D,IACxBzB,QAAS9F,EAAM4D,aAAa4D,QAC5BzB,IAAK/F,EAAM4D,aAAa6D,IACxBzB,QAAShG,EAAM4D,aAAa8D,QAC5BzB,IAAKjG,EAAM4D,aAAa+D,IACxBzB,QAASlG,EAAM4D,aAAagE,WAE9B,mBACA,SAACzB,EAAD,CACEG,aAActG,EAAM4D,aAAa,iBACjC2C,MAAOvG,EAAM4D,aAAaiE,OAC1BrB,OAAQxG,EAAM4D,aAAakE,OAC3BnC,IAAK3F,EAAM4D,aAAa,wBACxB6C,IAAKzG,EAAM4D,aAAa,qBACxB8C,IAAK1G,EAAM4D,aAAa,sBACxB+C,IAAK3G,EAAM4D,aAAa,0BACxBgD,KAAM5G,EAAM4D,aAAamE,UACzBlB,UAAW7G,EAAM4D,aAAaoE,YAE/BhI,EAAM4D,aAAaqE,SAAU,SAACrD,EAAD,CAASlE,KAAK,SAASqE,QAAS/E,EAAM4D,aAAaqE,SAChFjI,EAAM4D,aAAa,mBAAoB,SAACgB,EAAD,CAASlE,KAAK,gBAAgBqE,QAAS/E,EAAM4D,aAAa,qBAIvG,CCpDD,MAAgC,8BCChB,SAASsE,IACrB,OAEI,gBAAKjI,UAAWC,GAEtB,CCFa,SAASiI,EAAuBnI,GAM7C,OACE,+BACE,iBAAKqC,QAPO,WACoB,UAA/B+F,OAAOC,eAAexH,MACvBb,EAAMqC,SAAQ,EAEjB,EAG4BpC,UAAWC,EAAAA,WAApC,WACE,SAACgI,EAAD,KACA,gBAAKjI,UAAWC,EAAAA,WAAhB,UACE,SAAC4G,EAAD,CAAWlD,aAAc5D,EAAM4D,kBAGjC,iBAAK3D,UAAWC,EAAAA,YAAhB,WACE,SAAC0E,EAAD,CAASlE,KAAK,UAAUqE,QAAS/E,EAAM4D,aAAagB,UACnD5E,EAAM4D,aAAa,uBAClB,SAACgB,EAAD,CACElE,KAAK,oBACLqE,QAAS/E,EAAM4D,aAAa,uBAG/B5D,EAAM4D,aAAa0E,YAClB,SAAC1D,EAAD,CAASlE,KAAK,YAAYqE,QAAS/E,EAAM4D,aAAa0E,gBAI1D,iBAAKrI,UAAWC,EAAAA,WAAhB,UACGF,EAAM4D,aAAac,UAClB,gBAAKX,IAAK/D,EAAM4D,aAAac,QAASV,IAAI,aAE5C,gBACEa,wBAAyB,CACvBC,OAAQ9E,EAAM4D,aAAa2E,uBAKjC,SAACL,EAAD,QAIP,C,cCxCe,SAASM,EAAWxI,GAChC,OACI,UAAC,WAAD,WACKyI,EAAAA,cAAsB,SAACC,EAAA,EAAD,CAAUrG,QAAUrC,EAAMqC,UAAqBsG,SAASC,eAAe,kBAC7FH,EAAAA,cAAsB,SAACN,EAAD,CAAwB9F,QAASrC,EAAMqC,QAASuB,aAAc5D,EAAM4D,eAAwC+E,SAASC,eAAe,mBAGrK,C,mBCbF,KAAgB,eAAiB,qCAAqC,WAAa,iCAAiC,gBAAkB,sCAAsC,qBAAuB,2CAA2C,aAAe,mCAAmC,sBAAwB,4CAA4C,iBAAmB,uCAAuC,gBAAkB,sCAAsC,aAAe,mCAAmC,cAAgB,oCAAoC,sBAAwB,4CAA4C,sBAAwB,4CAA4C,cAAgB,oCAAoC,gBAAkB,sCAAsC,iBAAmB,uCAAuC,aAAe,mCAAmC,IAAM,0BAA0B,SAAW,+BAA+B,iBAAmB,uCAAuC,yBAA2B,+CAA+C,mBAAqB,yCAAyC,kBAAoB,wCAAwC,cAAgB,oCAAoC,gBAAkB,sC","sources":["components/MyEncounters/EncounterModals.js","components/MyEncounters/EncounterUI/HealthPool.js","components/MyEncounters/EncounterUI/Initiative.js","components/MyEncounters/MonsterBattleBox.js","webpack://dnd-project/./src/components/UI/FullMonsterDescription/mainstyling.module.css?0cf6","components/UI/FullMonsterDescription/Actions.js","components/UI/FullMonsterDescription/StatBlock/NameAndAlignment.js","components/UI/FullMonsterDescription/StatBlock/LifeArmorSpeed.js","components/UI/FullMonsterDescription/StatBlock/Stats.js","components/UI/FullMonsterDescription/StatBlock/General.js","components/UI/FullMonsterDescription/StatBlock/StatBlock.js","webpack://dnd-project/./src/components/UI/Border.module.css?aec6","components/UI/Border.js","components/UI/FullMonsterDescription/FullMonsterDescription.js","components/UI/ModalMonsterText.js","webpack://dnd-project/./src/components/MyEncounters/BattleScreen.module.css?cb5e"],"sourcesContent":["import styles from \"./BattleScreen.module.css\";\r\n\r\nexport default function ImmunityesModal(props) {\r\n  return (\r\n    <div className={styles.modal__style}>\r\n      {\" \"}\r\n      <div className={styles.resandvun_text__style}>\r\n        <span className={styles.red_condition}>Damage Immunity: </span>\r\n        <span className={`${styles.condition__txt__style}`}>{props.dmgI}</span>\r\n      </div>\r\n      <div className={styles.resandvun_text__style}>\r\n        <span className={styles.red_condition}>Condition Immunity:</span>\r\n        <span className={`${styles.condition__txt__style} `}>{props.conI}</span>\r\n      </div>\r\n      <div className={styles.resandvun_text__style}>\r\n        <span className={styles.orange_condition}>Damage Resistance:</span>\r\n        <span className={`${styles.condition__txt__style} `}>{props.dmgR}</span>\r\n      </div>\r\n      <div className={styles.resandvun_text__style}>\r\n        <span className={styles.green_condition}>Damage Vulnerability:</span>\r\n        <span className={`${styles.condition__txt__style} `}>{props.dmgV}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport function StatsModal(props) {\r\n  return (\r\n    <div className={styles.modal__style}>\r\n      <div class={styles.detail__style}>\r\n        <span><span>Name: </span>{props.stats.name}</span>\r\n        <span><span>Size: </span>{props.stats.meta.size}</span>\r\n        <span><span>Type: </span>{props.stats.meta.type}</span>\r\n        <span><span>Alignment: </span>{props.stats.meta.alignment}</span>\r\n        <span><span>CR: </span>{props.stats['Challenge'].rating }{props.stats['Challenge'].xp}</span>\r\n        <span><span>AC: </span>{props.stats['Armor Class'].value }{props.stats['Armor Class'].type }</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport function DeathModal() {\r\n  return (\r\n    <div className={styles.modal__style}>\r\n      <span className={styles.death_modal_text___style}>DEAD</span>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport styles from \"../BattleScreen.module.css\";\r\n\r\nexport default function HealthPool(props) {\r\n  const [health, healthHandler] = useState(props.hp);\r\n  const [calculate, calculateHanler] = useState(0);\r\n  const [playerMaxHp,setPcMaxHealth] = useState(props.hp)\r\n  const [clikedPlayerMaxHealtInput,setCliket] = useState(false)\r\n\r\n  const hpTarget = !props.player ? props.hp : playerMaxHp\r\n\r\n  const givePlayerHp = () =>{\r\n    setCliket(true)\r\n  }\r\n  const setPcHp = () =>{\r\n    setCliket(false)\r\n  }\r\n  const givePlayerHealth = (event) =>{\r\n    healthHandler(event.target.value)\r\n    setPcMaxHealth(event.target.value)\r\n  }\r\n\r\n  const calculateThis = (event) => {\r\n    calculateHanler(event.target.value);\r\n  };\r\n  const addNow = () => {\r\n    console.log(health)\r\n    console.log(calculate)\r\n    healthHandler(parseInt(health) + parseInt(calculate));\r\n    console.log(health)\r\n\r\n    if (parseInt(health) + parseInt(calculate) > hpTarget) {\r\n      healthHandler(hpTarget)\r\n    }\r\n    calculateHanler(0);\r\n  };\r\n  const subtractNow = () => {\r\n    healthHandler(parseInt(health) - parseInt(calculate));\r\n\r\n    if (parseInt(health) - parseInt(calculate) <= 0) {\r\n      props.onChange(true);\r\n    }\r\n    calculateHanler(0);\r\n  };\r\n  return (\r\n    <>\r\n      <div className={styles.health__styling}>\r\n        <span className={`${styles.stat_text__style}}`}>HP: </span>\r\n        {(<span className={styles.stat_text__style}>{`${health} / `}</span>)} \r\n       {(!clikedPlayerMaxHealtInput ? <span onClick={props.player && givePlayerHp } className={styles.stat_text__style}>{hpTarget}</span> : <input autoFocus=\"true\" onBlur={setPcHp} onChange={givePlayerHealth} value={playerMaxHp}></input>)}\r\n      </div>\r\n      {/* <div> */}\r\n        <button\r\n          onClick={addNow}\r\n          className={`${styles.subm_subt__style} ${styles.add}`}\r\n        >\r\n          Heal\r\n        </button>\r\n        <input\r\n          onChange={calculateThis}\r\n          className={`${styles.stat_text__style} ${styles.input__style}`}\r\n          value={calculate}\r\n        ></input>\r\n        <button\r\n          onClick={subtractNow}\r\n          className={`${styles.subm_subt__style} ${styles.subtract}`}\r\n        >\r\n          Damage\r\n        </button>\r\n      {/* </div> */}\r\n    </>\r\n  );\r\n}\r\n","import React, {useState} from \"react\";\r\nimport styles from \"../BattleScreen.module.css\";\r\n\r\nexport default function Initiative() {\r\n  const [initiative, initiativeHanler] = useState();\r\n\r\n  const initiativeSetter = (event) => {\r\n    initiativeHanler(event.target.value);\r\n  };\r\n  return (\r\n    <>\r\n      <span className={styles.stat_text__style}>INIT:</span>\r\n      <input\r\n        placeholder=\"0\"\r\n        onChange={initiativeSetter}\r\n        className={`${styles.stat_text__style} ${styles.input__style}`}\r\n        value={initiative}\r\n      ></input>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport ImmunityesModal, { DeathModal, StatsModal } from \"./EncounterModals\";\r\nimport HealthPool from \"./EncounterUI/HealthPool\";\r\nimport Initiative from \"./EncounterUI/Initiative\";\r\nimport ModalMonsterText from \"../UI/ModalMonsterText\";\r\nimport styles from \"./BattleScreen.module.css\";\r\n\r\nexport default function MonsterBattleBox(props) {\r\n  const [isShown, setIsShown] = useState(false);\r\n  const [isDead, setDead] = useState(false);\r\n  const [isRead, setReading] = useState(false);\r\n  const [playerArmorClass, setPlayerArmorClass] = useState(true);\r\n  const [playerGivenAc, setPlayerGivenAc] = useState(0);\r\n\r\n  const openInputToGiveAc = () => {\r\n    setPlayerArmorClass(false);\r\n  };\r\n  const rememberAcValue = () => {\r\n    setPlayerArmorClass(true);\r\n  };\r\n  const giveArmorClass = (event) => {\r\n    setPlayerGivenAc(event.target.value);\r\n  };\r\n  const deathTraker = (state) => {\r\n    setDead(state);\r\n    setIsShown(false);\r\n  };\r\n\r\n  const renderModal = () => {\r\n    setReading(true);\r\n  };\r\n  const removeModal = (state) => {\r\n    setReading(state);\r\n  };\r\n  return (\r\n    <div className={styles.battle_box}>\r\n      {!props.pleyers && isRead && (\r\n        <ModalMonsterText\r\n          onClick={removeModal}\r\n          monsterStats={props.stats}\r\n        ></ModalMonsterText>\r\n      )}\r\n\r\n      {!props.players ? (\r\n        <div style={{ textAlign: \"right\" }}>\r\n          {/*######################## MONSTER NAME ####################### */}\r\n          { props.voting ? props.children[0] : props.children}\r\n\r\n          <div\r\n            onClick={renderModal}\r\n            className={`${styles.encounter_box__style} `}\r\n            style={{ width: `${props.width}`, height: `${props.height}` }}\r\n            onMouseEnter={() => setIsShown(true)}\r\n            onMouseLeave={() => setIsShown(false)}\r\n          >\r\n            {(isDead && <DeathModal></DeathModal>) ||\r\n              (isShown && !props.modalStats ? (\r\n                <ImmunityesModal\r\n                  conI={props.stats[\"Condition Immunities\"]}\r\n                  dmgI={props.stats[\"Damage Immunities\"]}\r\n                  dmgR={props.stats[\"Damage Resistances\"]}\r\n                  dmgV={props.stats[\"Damage Vulnerabilities\"]}\r\n                ></ImmunityesModal>\r\n              ) : (\r\n                isShown &&\r\n                props.modalStats && (\r\n                  <StatsModal stats={props.stats}></StatsModal>\r\n                )\r\n              ))}\r\n\r\n            <img\r\n              className={styles.image__style}\r\n              src={props.stats.img_url}\r\n              alt=\"monster\"\r\n            ></img>\r\n          </div>\r\n          {props.voting ? props.children[1] : null}\r\n        </div>\r\n      ) : (\r\n        //PC battle box\r\n        <div className={styles.encounter_box__style}>\r\n          {isDead && <DeathModal></DeathModal>}\r\n          {\r\n            <input\r\n              placeholder=\" PC NAME\"\r\n              className={`${styles.encounter_name__style}  ${styles.pc_name_style}`}\r\n            ></input>\r\n          }\r\n          <h2\r\n            className={`${styles.encounter_name__style}  ${styles.pc_level__style}`}\r\n          >\r\n            Level: <span>{props.players.level}</span>\r\n          </h2>\r\n\r\n          {\r\n            <img\r\n              className={styles.image__style}\r\n              src=\"https://doubleproficiency.com/wp-content/uploads/2018/02/mega-fantasy-avatar-kronis.png\"\r\n              alt=\"player\"\r\n            ></img>\r\n          }\r\n        </div>\r\n      )}\r\n      {props.library || (\r\n        <div className={styles.stat_battle_box}>\r\n          <div>\r\n            <span className={styles.stat_text__style}>AC: </span>\r\n            {!props.players ? (\r\n              <span className={styles.stat_text__style}>\r\n                {props.stats[\"Armor Class\"].value}\r\n              </span>\r\n            ) : playerArmorClass ? (\r\n              <span\r\n                onClick={openInputToGiveAc}\r\n                className={styles.stat_text__style}\r\n              >\r\n                {playerGivenAc}\r\n              </span>\r\n            ) : (\r\n              <input\r\n                autoFocus={true}\r\n                onChange={giveArmorClass}\r\n                onBlur={rememberAcValue}\r\n                className={styles.stat_text__style}\r\n                value={playerGivenAc}\r\n              ></input>\r\n            )}\r\n          </div>\r\n          {!props.players ? (\r\n            <HealthPool\r\n              onChange={deathTraker}\r\n              hp={props.stats[\"Hit Points\"].hp}\r\n            ></HealthPool>\r\n          ) : (\r\n            <HealthPool\r\n              onChange={deathTraker}\r\n              player=\"player\"\r\n              hp={0}\r\n            ></HealthPool>\r\n          )}\r\n\r\n          <Initiative></Initiative>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"box_design\":\"mainstyling_box_design__ApoSj\",\"first_half\":\"mainstyling_first_half__M7AY+\",\"second_half\":\"mainstyling_second_half__jHDuo\",\"image_half\":\"mainstyling_image_half__UlMtG\",\"life_stiling\":\"mainstyling_life_stiling__shMQz\",\"leader\":\"mainstyling_leader__66LAX\",\"numbers\":\"mainstyling_numbers__-z7IG\",\"name_box\":\"mainstyling_name_box__7IyQY\",\"name_styling\":\"mainstyling_name_styling__f3oFh\",\"table__styling\":\"mainstyling_table__styling__tkwzK\",\"table__boxes\":\"mainstyling_table__boxes__1vq1g\",\"skills_style\":\"mainstyling_skills_style__OckZm\",\"action__styles\":\"mainstyling_action__styles__omMfM\",\"action_text__styles\":\"mainstyling_action_text__styles__eMzac\"};","import React from \"react\";\r\nimport styles from \"./mainstyling.module.css\"\r\nexport default function Actions(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <div className={styles.action__styles}>{props.name}</div>\r\n      <hr />\r\n      <div className={styles.action_text__styles} dangerouslySetInnerHTML={{ __html: props.actions }}></div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nimport styles from \"../mainstyling.module.css\"\r\n\r\n\r\nexport default function NameAndAlignment (props){\r\n        return(\r\n                <div className={styles.name_box}>\r\n                        <div className={styles.name_styling}>{props.name.toUpperCase()}</div>\r\n                        <div>{`${props.meta.size} ${props.meta.type}, ${props.meta.alignment}`}</div>\r\n                </div>\r\n        )\r\n}","import React from \"react\";\r\n\r\nimport styles from \"../mainstyling.module.css\";\r\n\r\nexport default function LifeArmorSpeed(props) {\r\n  return (\r\n    <div className={styles.picture_divide}>\r\n      <div className={styles.life_stiling}>\r\n        <div>\r\n          <div className={styles.leader}>Armor Class: </div>\r\n          <div className={styles.numbers}>{`${props.armor.value} ${props.armor.type}`}</div>\r\n        </div>\r\n        <div>\r\n          <div className={styles.leader}>Hit Points: </div>\r\n          <div className={styles.numbers}>{`${props.hp.hp} ${props.hp.dice}`}</div>\r\n        </div>\r\n        <div>\r\n          <div className={styles.leader}>Speed: </div>\r\n          <div className={styles.numbers}>{props.speed}</div>\r\n        </div>\r\n      </div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"../mainstyling.module.css\"\r\n\r\nexport default function Stats(props) {\r\n  return (\r\n    <div className={styles.table__styling}>\r\n      <div className={styles.table__boxes}>\r\n        <div>STR</div>\r\n        <div>{props.str}{props.str_mod}</div>\r\n      </div>\r\n      <div className={styles.table__boxes}>\r\n        <div>DEX</div>\r\n        <div>{props.dex}{props.dex_mod}</div>\r\n      </div>\r\n      <div className={styles.table__boxes}>\r\n        <div>CON</div>\r\n        <div>{props.con}{props.con_mod}</div>\r\n      </div>\r\n      <div className={styles.table__boxes}>\r\n        <div>INT</div>\r\n        <div>{props.int}{props.int_mod}</div>\r\n      </div>\r\n      <div className={styles.table__boxes}>\r\n        <div>WIS</div>\r\n        <div>{props.wis}{props.wis_mod}</div>\r\n      </div>\r\n      <div className={styles.table__boxes}>\r\n        <div>CHA</div>\r\n        <div>{props.cha}{props.cha_mod}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"../mainstyling.module.css\";\r\n\r\nexport default function General(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <GeneralStats\r\n        name=\"Saving Throws:\"\r\n        stat={props.saving_throw}\r\n      ></GeneralStats>\r\n      <GeneralStats name=\"Skills:\" stat={props.skill}></GeneralStats>\r\n      <GeneralStats name=\"Senses:\" stat={props.senses}></GeneralStats>\r\n      <GeneralStats\r\n        name=\"Condition Immunities: \"\r\n        stat={props.con}\r\n      ></GeneralStats>\r\n      <GeneralStats name=\"Damage Immunities: \" stat={props.dmg}></GeneralStats>\r\n      <GeneralStats name=\"Damage Resistances: \" stat={props.res}></GeneralStats>\r\n      <GeneralStats\r\n        name=\"Damage Vulnerabilities: \"\r\n        stat={props.vul}\r\n      ></GeneralStats>\r\n      <GeneralStats name=\"Languages: \" stat={props.lang}></GeneralStats>\r\n      <GeneralStats\r\n        name=\"Challenge: \"\r\n        stat={`${props.challenge.rating} ${props.challenge.xp}`}\r\n      ></GeneralStats>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst GeneralStats = (props) => {\r\n  return (\r\n    <div className={styles.table__styling}>\r\n      <div className={styles.skills_style}>{props.name} </div>\r\n      {props.stat}\r\n    </div>\r\n  );\r\n};\r\n","import NameAndAlignment from \"./NameAndAlignment\";\r\nimport LifeArmorSpeed from \"./LifeArmorSpeed\";\r\nimport Stats from \"./Stats\";\r\nimport General from \"./General\";\r\nimport Actions from \"../Actions\";\r\n\r\n\r\nexport default function StatBlock(props) {\r\n  return (\r\n    <>\r\n      <NameAndAlignment\r\n        name={props.monsterStats.name}\r\n        meta={props.monsterStats.meta}\r\n      />\r\n      <hr />\r\n      <LifeArmorSpeed\r\n        armor={props.monsterStats[\"Armor Class\"]}\r\n        hp={props.monsterStats[\"Hit Points\"]}\r\n        speed={props.monsterStats.Speed}\r\n        img={props.monsterStats.img_url}\r\n      />\r\n      <hr />\r\n      <Stats\r\n        str={props.monsterStats.STR}\r\n        str_mod={props.monsterStats.STR_mod}\r\n        dex={props.monsterStats.DEX}\r\n        dex_mod={props.monsterStats.DEX_mod}\r\n        con={props.monsterStats.CON}\r\n        con_mod={props.monsterStats.CON_mod}\r\n        int={props.monsterStats.INT}\r\n        int_mod={props.monsterStats.INT_mod}\r\n        wis={props.monsterStats.WIS}\r\n        wis_mod={props.monsterStats.WIS_mod}\r\n        cha={props.monsterStats.CHA}\r\n        cha_mod={props.monsterStats.CHA_mod}\r\n      />\r\n      <hr />\r\n      <General\r\n        saving_throw={props.monsterStats[\"Saving Throws\"]}\r\n        skill={props.monsterStats.Skills}\r\n        senses={props.monsterStats.Senses}\r\n        con={props.monsterStats[\"Condition Immunities\"]}\r\n        dmg={props.monsterStats[\"Damage Immunities\"]}\r\n        res={props.monsterStats[\"Damage Resistances\"]}\r\n        vul={props.monsterStats[\"Damage Vulnerabilities\"]}\r\n        lang={props.monsterStats.Languages}\r\n        challenge={props.monsterStats.Challenge}\r\n      />\r\n      {props.monsterStats.Traits && <Actions name='Traits' actions={props.monsterStats.Traits} />}\r\n      {props.monsterStats['Bonus Actions'] && <Actions name='Bonus Actions' actions={props.monsterStats['Bonus Actions']} />}\r\n      {/* {props.monsterStats.Reactions && <Actions name='Reactions' actions={props.monsterStats.Reactions} />} */}\r\n    </>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"border__style\":\"Border_border__style__8I2we\"};","import styles from \"./Border.module.css\"\r\n\r\n export default function Border(){\r\n    return(\r\n\r\n        <div className={styles.border__style}></div>\r\n    )\r\n }","import React from \"react\";\r\nimport styles from \"./mainstyling.module.css\";\r\nimport Actions from \"./Actions\";\r\nimport StatBlock from \"./StatBlock/StatBlock\";\r\nimport Border from \"../Border\";\r\nexport default function FullMonsterDescription(props) {\r\n  const stopClick=()=>{\r\n    if(window.getSelection().type !== \"Range\"){\r\n      props.onClick(false)\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div onClick={stopClick} className={styles.box_design}>\r\n        <Border />\r\n        <div className={styles.first_half}>\r\n          <StatBlock monsterStats={props.monsterStats} />\r\n        </div>\r\n\r\n        <div className={styles.second_half}>\r\n          <Actions name=\"Actions\" actions={props.monsterStats.Actions} />\r\n          {props.monsterStats[\"Legendary Actions\"] && (\r\n            <Actions\r\n              name=\"Legendary Actions\"\r\n              actions={props.monsterStats[\"Legendary Actions\"]}\r\n            />\r\n          )}\r\n          {props.monsterStats.Reactions && (\r\n            <Actions name=\"Reactions\" actions={props.monsterStats.Reactions} />\r\n          )}\r\n        </div>\r\n\r\n        <div className={styles.image_half}>\r\n          {props.monsterStats.img_url && (\r\n            <img src={props.monsterStats.img_url} alt=\"monster\"></img>\r\n          )}\r\n          <div\r\n            dangerouslySetInnerHTML={{\r\n              __html: props.monsterStats.Characteristics,\r\n            }}\r\n          ></div>\r\n        </div>\r\n\r\n        <Border />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"," import React from \"react\"\r\n import ReactDOM from \"react-dom\"\r\nimport FullMonsterDescription from \"./FullMonsterDescription/FullMonsterDescription\"\r\nimport BackDrop from \"./BackDrop\"\r\n\r\n\r\n\r\n export default function ModalBack (props) {\r\n    return(\r\n        <React.Fragment>\r\n            {ReactDOM.createPortal(<BackDrop onClick={ props.onClick}></BackDrop>,document.getElementById(\"backdrop-root\"))}\r\n            {ReactDOM.createPortal(<FullMonsterDescription onClick={props.onClick} monsterStats={props.monsterStats}></FullMonsterDescription>,document.getElementById(\"overlay-root\"))}\r\n        </React.Fragment>\r\n    )\r\n }","// extracted by mini-css-extract-plugin\nexport default {\"display__style\":\"BattleScreen_display__style__Foewj\",\"battle_box\":\"BattleScreen_battle_box__qnZwN\",\"stat_battle_box\":\"BattleScreen_stat_battle_box__iL3qz\",\"encounter_box__style\":\"BattleScreen_encounter_box__style__UIhFr\",\"image__style\":\"BattleScreen_image__style__6wmZK\",\"encounter_name__style\":\"BattleScreen_encounter_name__style__BVcii\",\"stat_text__style\":\"BattleScreen_stat_text__style__s2i0y\",\"health__styling\":\"BattleScreen_health__styling__8iDYl\",\"modal__style\":\"BattleScreen_modal__style__Bq0UX\",\"detail__style\":\"BattleScreen_detail__style__0sTuU\",\"resandvun_text__style\":\"BattleScreen_resandvun_text__style__m81w+\",\"condition__txt__style\":\"BattleScreen_condition__txt__style__GAqtZ\",\"red_condition\":\"BattleScreen_red_condition__CxmvQ\",\"green_condition\":\"BattleScreen_green_condition__Z57GV\",\"orange_condition\":\"BattleScreen_orange_condition__2iRT3\",\"input__style\":\"BattleScreen_input__style__XsIQX\",\"add\":\"BattleScreen_add__X54v0\",\"subtract\":\"BattleScreen_subtract__aIDUE\",\"subm_subt__style\":\"BattleScreen_subm_subt__style__8yzBN\",\"death_modal_text___style\":\"BattleScreen_death_modal_text___style__TWYmR\",\"delete_btn__holder\":\"BattleScreen_delete_btn__holder__EWu2i\",\"delete_btn__style\":\"BattleScreen_delete_btn__style__IuzZX\",\"pc_name_style\":\"BattleScreen_pc_name_style__2dwrZ\",\"pc_level__style\":\"BattleScreen_pc_level__style__ZiJ31\"};"],"names":["ImmunityesModal","props","className","styles","dmgI","conI","dmgR","dmgV","StatsModal","class","stats","name","meta","size","type","alignment","rating","xp","value","DeathModal","HealthPool","useState","hp","health","healthHandler","calculate","calculateHanler","playerMaxHp","setPcMaxHealth","clikedPlayerMaxHealtInput","setCliket","hpTarget","player","autoFocus","onBlur","onChange","event","target","onClick","console","log","parseInt","Initiative","initiative","initiativeHanler","placeholder","MonsterBattleBox","isShown","setIsShown","isDead","setDead","isRead","setReading","playerArmorClass","setPlayerArmorClass","playerGivenAc","setPlayerGivenAc","deathTraker","state","pleyers","ModalMonsterText","monsterStats","players","level","src","alt","style","textAlign","voting","children","width","height","onMouseEnter","onMouseLeave","modalStats","img_url","library","Actions","dangerouslySetInnerHTML","__html","actions","NameAndAlignment","toUpperCase","LifeArmorSpeed","armor","dice","speed","Stats","str","str_mod","dex","dex_mod","con","con_mod","int","int_mod","wis","wis_mod","cha","cha_mod","General","GeneralStats","stat","saving_throw","skill","senses","dmg","res","vul","lang","challenge","StatBlock","Speed","img","STR","STR_mod","DEX","DEX_mod","CON","CON_mod","INT","INT_mod","WIS","WIS_mod","CHA","CHA_mod","Skills","Senses","Languages","Challenge","Traits","Border","FullMonsterDescription","window","getSelection","Reactions","Characteristics","ModalBack","ReactDOM","BackDrop","document","getElementById"],"sourceRoot":""}