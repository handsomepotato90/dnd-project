{"version":3,"file":"static/js/625.b2d0a438.chunk.js","mappings":"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","sources":["components/MyProfile/Sessions/SessionVotingForFreeDays.js","components/MyProfile/Sessions/sessionUi/Comments.js","components/MyProfile/Sessions/sessionUi/WsComments.js","components/MyProfile/Sessions/sessionUi/SessionComponent.js","webpack://dnd-project/./src/components/UI/ConteinerBox.module.css?cb44","components/UI/ConteinerBox.js","webpack://dnd-project/./src/components/UI/Confirmation.module.css?e1ca","components/UI/ModalConfirmation.js","webpack://dnd-project/./src/components/MyProfile/Sessions/sessionUi/sessionUi.module.css?53a8"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHttpClient } from \"../../hooks/http-hook\";\r\nimport { LoginContext } from \"../../store/login-context\";\r\nimport ConteinerBox from \"../../UI/ConteinerBox\";\r\nimport SessionComponent from \"./sessionUi/SessionComponent\";\r\nimport ModalError from \"../../UI/ModalError\";\r\nimport LoadingSpinner from \"../../UI/LoadingSpinner\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function SessionVotingForFreeDays() {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(LoginContext);\r\n  const [resData, setResData] = useState([]);\r\n  const [selectedByUser, setSelectedByUser] = useState([]);\r\n  const [selectedDatesFromDungonMaster, setSelectedDatesFromDungonMaster] =\r\n    useState([]);\r\n  const navigate = useNavigate();\r\n  const now = new Date().getTime();\r\n  const errorHandler = () => {\r\n    clearError(null);\r\n  };\r\n  const url = window.location.href.split(\"AllSessions/\");\r\n  useEffect(() => {\r\n    const fetchFriends = async () => {\r\n      try {\r\n        const resData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL +\r\n            `/myProfile/Sessions/AllSessions/${url[1]}`,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            Authorization: \"Bearer \" + auth.token,\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        setResData(resData);\r\n        setSelectedDatesFromDungonMaster([...resData.dates]);\r\n        if (resData.status === \"scheduled\") {\r\n          setSelectedDatesFromDungonMaster([...resData.scheduledFor]);\r\n        }\r\n        for (let index = 0; index < resData.votes.length; index++) {\r\n          const el = resData.votes[index];\r\n          if (resData.votes[index].user === auth.userId) {\r\n            let date = [];\r\n\r\n            for (let index = 0; index < el.dates.length; index++) {\r\n              const element = el.dates[index];\r\n              date.push(new Date(element));\r\n            }\r\n            setSelectedByUser([...date]);\r\n          }\r\n        }\r\n      } catch (err) {}\r\n    };\r\n    fetchFriends();\r\n  }, []);\r\n  const submitVote = async (value) => {\r\n    if (resData.timeforvoting < now) {\r\n      return;\r\n    }\r\n    try {\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL +\r\n          `/myProfile/Sessions/AllSessions/${url[1]}`,\r\n        \"PATCH\",\r\n        JSON.stringify({\r\n          dates: value,\r\n          username: auth.username,\r\n          id: auth.userId,\r\n          calendarId: url[1],\r\n        }),\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      navigate(`/myProfile/Sessions/AllSessions/${url[1]}`);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <ConteinerBox>\r\n      {isLoading && <LoadingSpinner as0verlay></LoadingSpinner>}\r\n      {error && (\r\n        <ModalError\r\n          header=\"An Error Occurred\"\r\n          error={error}\r\n          onClick={errorHandler}\r\n        ></ModalError>\r\n      )}\r\n      <SessionComponent\r\n        resData={resData}\r\n        selectedDatesFromDungonMaster={selectedDatesFromDungonMaster}\r\n        userAlreadySelectedDates={selectedByUser}\r\n        url={url[1]}\r\n        calendarButtonText={\"Submit\"}\r\n        onClickSubmit={submitVote}\r\n      ></SessionComponent>\r\n    </ConteinerBox>\r\n  );\r\n}\r\n","import NewsBox from \"../../../UI/NewsBox\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport styles from \"./sessionUi.module.css\";\r\nexport default function Comments(props) {\r\n  const AlwaysScrollToBottom = () => {\r\n    const elementRef = useRef();\r\n    useEffect(() => elementRef.current.scrollIntoView());\r\n    return <div ref={elementRef} />;\r\n  };\r\n  const [stateComents, setStateComents] = useState([]);\r\n  useEffect(() => {\r\n    setStateComents([...props.comments, ...props.wscomments]);\r\n  }, [props]);\r\n  return (\r\n    <NewsBox className={props.className}>\r\n      {stateComents &&\r\n        stateComents.map((el, i) => (\r\n          <div\r\n            key={i}\r\n            className={`${styles.general_style} ${\r\n              props.thisUser === el.username\r\n                ? styles.sameuser__style\r\n                : styles.diffuser__style\r\n            }`}\r\n          >\r\n            {props.thisUser !== el.username && (\r\n              <span\r\n                dangerouslySetInnerHTML={{ __html: el.username }}\r\n                className={`${styles.username__style} ${styles.general_comment__style} `}\r\n              ></span>\r\n            )}\r\n            <span\r\n              dangerouslySetInnerHTML={{ __html: el.comment }}\r\n              className={`${styles.text__style}  ${\r\n                styles.general_comment__style\r\n              } ${\r\n                props.thisUser === el.username\r\n                  ? styles.sameuser__bcccolor__style\r\n                  : styles.diffuser__bcccolor__style\r\n              }`}\r\n            ></span>\r\n          </div>\r\n        ))}\r\n\r\n      <AlwaysScrollToBottom></AlwaysScrollToBottom>\r\n    </NewsBox>\r\n  );\r\n}\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nimport Comments from \"./Comments\";\r\nimport { LoginContext } from \"../../../store/login-context\";\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\n\r\nimport styles from \"./sessionUi.module.css\";\r\n\r\nexport default function WsComments(props) {\r\n  //   const [webSocketMessage, setWebSocketMessage] = useState([]);\r\n  const [ckEditorText, setckEditorText] = useState(\"\");\r\n  const [propsState, setPropsState] = useState(props.dbComments);\r\n  const [wsMessage, setWsMessage] = useState(propsState);\r\n  const { sendRequest } = useHttpClient();\r\n  const auth = useContext(LoginContext);\r\n  useEffect(() => {\r\n    setPropsState(props.dbComments);\r\n  }, [props]);\r\n  const ws_url = window.location.href.split(\"/\");\r\n  const ws_backend_url = process.env.REACT_APP_BACKEND_URL.replace(\r\n    \"http\",\r\n    \"ws\"\r\n  );\r\n\r\n  //   ############################################ Web Socket Connection #######################################\r\n  const client = new W3CWebSocket(`${ws_backend_url}/${ws_url[6]}`);\r\n\r\n  useEffect(() => {\r\n    client.onopen = () => {};\r\n    client.onmessage = (e) => {\r\n      if (typeof e.data === \"string\") {\r\n        const data = JSON.parse(e.data);\r\n        setWsMessage([...wsMessage, data]);\r\n      }\r\n    };\r\n\r\n    client.onerror = function () {};\r\n  }, [client.onmessage, wsMessage]);\r\n\r\n  //   #######################################################################################################\r\n\r\n  const submitComment = async () => {\r\n    // ############### Send WebSocket Message ###############\r\n    if (ckEditorText.trim() === \"\") {\r\n      return;\r\n    }\r\n    client.send(\r\n      JSON.stringify({ comment: ckEditorText, username: auth.username })\r\n    );\r\n    // ######################################################\r\n    try {\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL +\r\n          `/myProfile/Sessions/AllSessions/comment`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          title: ckEditorText,\r\n          username: auth.username,\r\n          id: auth.userId,\r\n          calendarId: ws_url[6],\r\n        }),\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      setckEditorText(\"\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  const textZoneChange = (event) => {\r\n    setckEditorText(event.target.value);\r\n  };\r\n  return (\r\n    <div className={`${styles.comment__big_box_holder} `}>\r\n      <Comments\r\n        className={\"black__background overflow flex_nowrap\"}\r\n        thisUser={auth.username}\r\n        comments={propsState}\r\n        wscomments={wsMessage}\r\n      ></Comments>\r\n\r\n      <div className={`${styles.comment__input__style} `}>\r\n        <input\r\n          onChange={textZoneChange}\r\n          placeholder=\"Aa\"\r\n          value={ckEditorText}\r\n        ></input>\r\n        <button className=\"button\" onClick={submitComment}>\r\n          {\" \"}\r\n          Comment\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\nimport { LoginContext } from \"../../../store/login-context\";\r\nimport WsComments from \"./WsComments\";\r\nimport { Calendar } from \"@natscale/react-calendar\";\r\nimport Countdown from \"react-countdown\";\r\nimport ModalError from \"../../../UI/ModalError\";\r\nimport LoadingSpinner from \"../../../UI/LoadingSpinner\";\r\nimport ModalConfirmation from \"../../../UI/ModalConfirmation\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\n\r\nimport styles from \"./sessionUi.module.css\";\r\nimport \"@natscale/react-calendar/dist/main.css\";\r\n\r\nconst hours = [\r\n  { value: 1, label: \"1:00\" },\r\n  { value: 2, label: \"2:00\" },\r\n  { value: 3, label: \"3:00\" },\r\n  { value: 4, label: \"4:00\" },\r\n  { value: 5, label: \"5:00\" },\r\n  { value: 6, label: \"6:00\" },\r\n  { value: 7, label: \"7:00\" },\r\n  { value: 8, label: \"8:00\" },\r\n  { value: 9, label: \"9:00\" },\r\n  { value: 10, label: \"10:00\" },\r\n  { value: 11, label: \"11:00\" },\r\n  { value: 12, label: \"12:00\" },\r\n  { value: 13, label: \"13:00\" },\r\n  { value: 14, label: \"14:00\" },\r\n  { value: 15, label: \"15:00\" },\r\n  { value: 16, label: \"16:00\" },\r\n  { value: 17, label: \"17:00\" },\r\n  { value: 18, label: \"18:00\" },\r\n  { value: 19, label: \"19:00\" },\r\n  { value: 20, label: \"20:00\" },\r\n  { value: 21, label: \"21:00\" },\r\n  { value: 22, label: \"22:00\" },\r\n  { value: 23, label: \"23:00\" },\r\n  { value: 24, label: \"24:00\" },\r\n];\r\n\r\nexport default function SessionComponent(props) {\r\n  const [value, setValue] = useState([]);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [intentionForClosing, setIntentionForClosing] = useState(false);\r\n  const [intentionForDelete, setIntentionForDelete] = useState(false);\r\n  const [scheduledHours, setScheduledHour] = useState();\r\n\r\n  const auth = useContext(LoginContext);\r\n  const navigate = useNavigate();\r\n\r\n  const errorHandler = () => {\r\n    clearError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      props.userAlreadySelectedDates &&\r\n      props.userAlreadySelectedDates.length > 0\r\n    ) {\r\n      setValue(props.userAlreadySelectedDates);\r\n    }\r\n  }, [props.userAlreadySelectedDates]);\r\n\r\n  const toTimeStamp = (time) => {\r\n    let timestamp = [];\r\n    for (let index = 0; index < time.length; index++) {\r\n      timestamp.push(new Date(time[index]).getTime());\r\n    }\r\n    return timestamp;\r\n  };\r\n\r\n  const timeStamp = toTimeStamp(\r\n    props.resData.status === \"SCHEDULED\"\r\n      ? props.resData.scheduledFor\r\n      : props.selectedDatesFromDungonMaster\r\n  );\r\n\r\n  const isDisabled = (date) => {\r\n    if (timeStamp.includes(date.getTime())) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n  const submitVote = () => {\r\n    props.onClickSubmit(value, scheduledHours);\r\n  };\r\n\r\n  const closeSession = async (answer) => {\r\n    if (answer === false) {\r\n      setIntentionForClosing(false);\r\n      return;\r\n    }\r\n    try {\r\n      setIntentionForClosing(false);\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL +\r\n          `/myProfile/Sessions/MySessions/${props.url}`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          calendarId: props.url,\r\n          status: \"CLOSED\",\r\n        }),\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      navigate(`/myProfile/Sessions/AllSessions`);\r\n    } catch (err) {}\r\n  };\r\n  const deleteSession = async (answer) => {\r\n    if (answer === false) {\r\n      setIntentionForDelete(false);\r\n      return;\r\n    }\r\n    try {\r\n      setIntentionForDelete(false);\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL +\r\n          `/myProfile/Sessions/MySessions/${props.url}`,\r\n        \"DELETE\",\r\n        JSON.stringify({\r\n          calendarId: props.url,\r\n        }),\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n    } catch (err) {}\r\n    navigate(`/myProfile/Sessions/AllSessions`);\r\n  };\r\n  const checkIntentionForClosing = () => {\r\n    setIntentionForClosing(true);\r\n  };\r\n\r\n  const checkIntentionForDelete = () => {\r\n    setIntentionForDelete(true);\r\n  };\r\n  const scheduledHour = (value) => {\r\n    setScheduledHour(value.value);\r\n  };\r\n  return (\r\n    <>\r\n      {isLoading && <LoadingSpinner as0verlay></LoadingSpinner>}\r\n      {error && (\r\n        <ModalError\r\n          header=\"An Error Occurred\"\r\n          error={error}\r\n          onClick={errorHandler}\r\n        ></ModalError>\r\n      )}\r\n      {intentionForClosing && (\r\n        <ModalConfirmation\r\n          title=\"Are you shure that you want to CLOSE this session.\"\r\n          onClick={closeSession}\r\n        ></ModalConfirmation>\r\n      )}\r\n      {intentionForDelete && (\r\n        <ModalConfirmation\r\n          title=\"Are you shure that you want to DELETE this session.\"\r\n          onClick={deleteSession}\r\n        ></ModalConfirmation>\r\n      )}\r\n      <div>\r\n        <div className={styles.info_about_session__style}>\r\n          {props.resData.timeforvoting && (\r\n            <span className={styles.countdown__style}>\r\n              <Countdown date={props.resData.timeforvoting}></Countdown>\r\n            </span>\r\n          )}\r\n          <span className={styles.organiser__span__style}>\r\n            Invited by : {props.resData.dmStatus && \"DM\"}\r\n            {props.resData.dmStatus && props.resData.hostStatus && \" and a \"}\r\n            {props.resData.hostStatus && \"HOST\"}\r\n            <span className={styles.organiser__span__style}>\r\n              {props.resData.creatorName}\r\n            </span>\r\n          </span>\r\n        </div>\r\n        <div className={`${styles.info_about_session__style}`}>\r\n          <Calendar\r\n            isDisabled={isDisabled}\r\n            useDarkMode={true}\r\n            size={390}\r\n            fontSize={18}\r\n            value={\r\n              props.resData.status === \"SCHEDULED\"\r\n                ? [new Date(props.resData.scheduledFor)]\r\n                : value\r\n            }\r\n            isMultiSelector={true}\r\n            onChange={setValue}\r\n          />\r\n          <div className={`${styles.schedule_buttons__style}`}>\r\n            {props.resData.status === \"SCHEDULED\" ||\r\n            props.resData.status === \"CLOSED\" ? null : (\r\n              <button\r\n                style={{ width: \"38%\" }}\r\n                className=\"button\"\r\n                onClick={submitVote}\r\n              >\r\n                {\" \"}\r\n                {props.calendarButtonText}\r\n              </button>\r\n            )}\r\n            {props.canCloseSession &&\r\n              props.resData.status !== \"SCHEDULED\" &&\r\n              props.resData.status !== \"CLOSED\" && (\r\n                <Select\r\n                  //  className={styles.search_bar__stayle}\r\n                  options={hours}\r\n                  name=\"hours\"\r\n                  onChange={scheduledHour}\r\n                  menuPlacement={\"auto\"}\r\n                  // onSelection={addUser}\r\n                ></Select>\r\n              )}\r\n            {props.canCloseSession &&\r\n              (props.resData.status === \"CLOSED\" ? (\r\n                <button\r\n                  style={{ width: \"38%\" }}\r\n                  className=\"button\"\r\n                  onClick={checkIntentionForDelete}\r\n                >\r\n                  {\" \"}\r\n                  Delete Session\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  style={{ width: \"38%\" }}\r\n                  className=\"button\"\r\n                  onClick={checkIntentionForClosing}\r\n                >\r\n                  {\" \"}\r\n                  Close Session\r\n                </button>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <WsComments dbComments={props.resData.comments || []}></WsComments>\r\n    </>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container_box__style\":\"ConteinerBox_container_box__style__C8d7G\",\"fromStart\":\"ConteinerBox_fromStart__FCHBa\",\"fromEnd\":\"ConteinerBox_fromEnd__6CJVd\"};","import styles from \"./ConteinerBox.module.css\";\r\n\r\nexport default function ConteinerBox(props) {\r\n  return (\r\n    <div\r\n      className={`${styles.container_box__style} ${\r\n        props.fromStart && styles.fromStart\r\n      } ${props.fromEnd && styles.fromEnd}`}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Confirmation_btn__lddQ2\",\"modal_big_box__style\":\"Confirmation_modal_big_box__style__a-CgK\",\"confirm__style\":\"Confirmation_confirm__style__ij0BH\",\"reject__style\":\"Confirmation_reject__style__erAtf\"};","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport BackDrop from \"./BackDrop\";\r\nimport styles from \"./Confirmation.module.css\";\r\n\r\nexport default function ModalConfirmation(props) {\r\n  const confirmation = (answer) => {\r\n    props.onClick(answer);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {ReactDOM.createPortal(\r\n        <BackDrop onClick={props.onClick}></BackDrop>,\r\n        document.getElementById(\"backdrop-root\")\r\n      )}\r\n\r\n      <div className={styles.modal_big_box__style}>\r\n        <span>{props.title}</span>\r\n        <div>\r\n          <button\r\n            className={`${styles.btn} ${styles.confirm__style}`}\r\n            onClick={() => confirmation(true)}\r\n          >\r\n            Yes\r\n          </button>\r\n          <button className={`${styles.btn} ${styles.reject__style}`} onClick={() => confirmation(false)}>\r\n            No\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"session_all__style\":\"sessionUi_session_all__style__Lz5Nd\",\"user_session__style\":\"sessionUi_user_session__style__6n8Uy\",\"invited_session__style\":\"sessionUi_invited_session__style__DzoA8\",\"scheduled_session__style\":\"sessionUi_scheduled_session__style__MCB7e\",\"text__inside__style\":\"sessionUi_text__inside__style__IPShv\",\"info_about_session__style\":\"sessionUi_info_about_session__style__kQwwU\",\"countdown__style\":\"sessionUi_countdown__style__F+cQZ\",\"organiser__span__style\":\"sessionUi_organiser__span__style__-2bLP\",\"comment__input__style\":\"sessionUi_comment__input__style__QLLb6\",\"general_comment__style\":\"sessionUi_general_comment__style__PQvpl\",\"username__style\":\"sessionUi_username__style__MyuZe\",\"text__style\":\"sessionUi_text__style__ZSVuC\",\"sameuser__style\":\"sessionUi_sameuser__style__zs0da\",\"general_style\":\"sessionUi_general_style__G-JyT\",\"sameuser__bcccolor__style\":\"sessionUi_sameuser__bcccolor__style__N11UC\",\"diffuser__style\":\"sessionUi_diffuser__style__HEhWV\",\"diffuser__bcccolor__style\":\"sessionUi_diffuser__bcccolor__style__hFRd7\",\"schedule_buttons__style\":\"sessionUi_schedule_buttons__style__Dw-fb\",\"comment__big_box_holder\":\"sessionUi_comment__big_box_holder__smqUT\"};"],"names":["SessionVotingForFreeDays","useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","LoginContext","useState","resData","setResData","selectedByUser","setSelectedByUser","selectedDatesFromDungonMaster","setSelectedDatesFromDungonMaster","navigate","useNavigate","now","Date","getTime","url","window","location","href","split","useEffect","fetchFriends","process","Authorization","token","dates","status","scheduledFor","index","votes","length","el","user","userId","date","element","push","submitVote","value","timeforvoting","JSON","stringify","username","id","calendarId","as0verlay","header","onClick","userAlreadySelectedDates","calendarButtonText","onClickSubmit","Comments","props","AlwaysScrollToBottom","elementRef","useRef","current","scrollIntoView","ref","stateComents","setStateComents","comments","wscomments","NewsBox","className","map","i","styles","thisUser","dangerouslySetInnerHTML","__html","comment","WsComments","ckEditorText","setckEditorText","dbComments","propsState","setPropsState","wsMessage","setWsMessage","ws_url","ws_backend_url","replace","client","W3CWebSocket","onopen","onmessage","e","data","parse","onerror","submitComment","trim","send","title","onChange","event","target","placeholder","hours","label","SessionComponent","setValue","intentionForClosing","setIntentionForClosing","intentionForDelete","setIntentionForDelete","scheduledHours","setScheduledHour","timeStamp","time","timestamp","toTimeStamp","closeSession","answer","deleteSession","LoadingSpinner","ModalError","ModalConfirmation","dmStatus","hostStatus","creatorName","isDisabled","includes","useDarkMode","size","fontSize","isMultiSelector","style","width","canCloseSession","options","name","menuPlacement","ConteinerBox","fromStart","fromEnd","children","confirmation","ReactDOM","BackDrop","document","getElementById"],"sourceRoot":""}